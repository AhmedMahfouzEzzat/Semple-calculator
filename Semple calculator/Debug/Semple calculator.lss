
Semple calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  00001678  000016ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001678  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         000006cc  00000000  00000000  0000170c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00001dd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000160  00000000  00000000  00001e5d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000022d  00000000  00000000  00001fbd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000021aa  00000000  00000000  000021ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f9b  00000000  00000000  00004394  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001617  00000000  00000000  0000532f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000220  00000000  00000000  00006948  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000433  00000000  00000000  00006b68  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a79  00000000  00000000  00006f9b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 00000588  00000000  00000000  00007a14  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000060  00000000  00000000  00007f9c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e8 e7       	ldi	r30, 0x78	; 120
      7c:	f6 e1       	ldi	r31, 0x16	; 22
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ae 31       	cpi	r26, 0x1E	; 30
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
      8a:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <main>
      8e:	0c 94 3a 0b 	jmp	0x1674	; 0x1674 <_exit>

00000092 <__bad_interrupt>:
      92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <SEND_TO_LCD>:
					{'8','5','2','0'},
					{'9','6','3','='},
					{'/','x','-','+'}};

void SEND_TO_LCD(char data , uint8_t mode )
{
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	df 93       	push	r29
      9c:	cf 93       	push	r28
      9e:	cd b7       	in	r28, 0x3d	; 61
      a0:	de b7       	in	r29, 0x3e	; 62
      a2:	eb 97       	sbiw	r28, 0x3b	; 59
      a4:	0f b6       	in	r0, 0x3f	; 63
      a6:	f8 94       	cli
      a8:	de bf       	out	0x3e, r29	; 62
      aa:	0f be       	out	0x3f, r0	; 63
      ac:	cd bf       	out	0x3d, r28	; 61
      ae:	8a af       	std	Y+58, r24	; 0x3a
      b0:	6b af       	std	Y+59, r22	; 0x3b
	uint8_t control_lcd = 0 ;
      b2:	19 82       	std	Y+1, r1	; 0x01
	write_to_calc(lcd_data_port,data);
      b4:	88 e2       	ldi	r24, 0x28	; 40
      b6:	90 e0       	ldi	r25, 0x00	; 0
      b8:	2f ef       	ldi	r18, 0xFF	; 255
      ba:	fc 01       	movw	r30, r24
      bc:	20 83       	st	Z, r18
      be:	8a e2       	ldi	r24, 0x2A	; 42
      c0:	90 e0       	ldi	r25, 0x00	; 0
      c2:	2f ef       	ldi	r18, 0xFF	; 255
      c4:	fc 01       	movw	r30, r24
      c6:	20 83       	st	Z, r18
      c8:	85 e2       	ldi	r24, 0x25	; 37
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	fc 01       	movw	r30, r24
      ce:	10 82       	st	Z, r1
      d0:	8b e2       	ldi	r24, 0x2B	; 43
      d2:	90 e0       	ldi	r25, 0x00	; 0
      d4:	2a ad       	ldd	r18, Y+58	; 0x3a
      d6:	fc 01       	movw	r30, r24
      d8:	20 83       	st	Z, r18
      da:	88 e2       	ldi	r24, 0x28	; 40
      dc:	90 e0       	ldi	r25, 0x00	; 0
      de:	2d ef       	ldi	r18, 0xFD	; 253
      e0:	fc 01       	movw	r30, r24
      e2:	20 83       	st	Z, r18
      e4:	80 e0       	ldi	r24, 0x00	; 0
      e6:	90 e0       	ldi	r25, 0x00	; 0
      e8:	a0 e8       	ldi	r26, 0x80	; 128
      ea:	bf e3       	ldi	r27, 0x3F	; 63
      ec:	8a 83       	std	Y+2, r24	; 0x02
      ee:	9b 83       	std	Y+3, r25	; 0x03
      f0:	ac 83       	std	Y+4, r26	; 0x04
      f2:	bd 83       	std	Y+5, r27	; 0x05
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
      f4:	6a 81       	ldd	r22, Y+2	; 0x02
      f6:	7b 81       	ldd	r23, Y+3	; 0x03
      f8:	8c 81       	ldd	r24, Y+4	; 0x04
      fa:	9d 81       	ldd	r25, Y+5	; 0x05
      fc:	20 e0       	ldi	r18, 0x00	; 0
      fe:	30 e0       	ldi	r19, 0x00	; 0
     100:	4a e7       	ldi	r20, 0x7A	; 122
     102:	55 e4       	ldi	r21, 0x45	; 69
     104:	0e 94 97 07 	call	0xf2e	; 0xf2e <__mulsf3>
     108:	dc 01       	movw	r26, r24
     10a:	cb 01       	movw	r24, r22
     10c:	8e 83       	std	Y+6, r24	; 0x06
     10e:	9f 83       	std	Y+7, r25	; 0x07
     110:	a8 87       	std	Y+8, r26	; 0x08
     112:	b9 87       	std	Y+9, r27	; 0x09
	if (__tmp < 1.0)
     114:	11 e0       	ldi	r17, 0x01	; 1
     116:	6e 81       	ldd	r22, Y+6	; 0x06
     118:	7f 81       	ldd	r23, Y+7	; 0x07
     11a:	88 85       	ldd	r24, Y+8	; 0x08
     11c:	99 85       	ldd	r25, Y+9	; 0x09
     11e:	20 e0       	ldi	r18, 0x00	; 0
     120:	30 e0       	ldi	r19, 0x00	; 0
     122:	40 e8       	ldi	r20, 0x80	; 128
     124:	5f e3       	ldi	r21, 0x3F	; 63
     126:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__ltsf2>
     12a:	88 23       	and	r24, r24
     12c:	0c f0       	brlt	.+2      	; 0x130 <SEND_TO_LCD+0x9a>
     12e:	10 e0       	ldi	r17, 0x00	; 0
     130:	11 23       	and	r17, r17
     132:	29 f0       	breq	.+10     	; 0x13e <SEND_TO_LCD+0xa8>
		__ticks = 1;
     134:	81 e0       	ldi	r24, 0x01	; 1
     136:	90 e0       	ldi	r25, 0x00	; 0
     138:	9b 87       	std	Y+11, r25	; 0x0b
     13a:	8a 87       	std	Y+10, r24	; 0x0a
     13c:	46 c0       	rjmp	.+140    	; 0x1ca <SEND_TO_LCD+0x134>
	else if (__tmp > 65535)
     13e:	11 e0       	ldi	r17, 0x01	; 1
     140:	6e 81       	ldd	r22, Y+6	; 0x06
     142:	7f 81       	ldd	r23, Y+7	; 0x07
     144:	88 85       	ldd	r24, Y+8	; 0x08
     146:	99 85       	ldd	r25, Y+9	; 0x09
     148:	20 e0       	ldi	r18, 0x00	; 0
     14a:	3f ef       	ldi	r19, 0xFF	; 255
     14c:	4f e7       	ldi	r20, 0x7F	; 127
     14e:	57 e4       	ldi	r21, 0x47	; 71
     150:	0e 94 91 08 	call	0x1122	; 0x1122 <__gtsf2>
     154:	18 16       	cp	r1, r24
     156:	0c f0       	brlt	.+2      	; 0x15a <SEND_TO_LCD+0xc4>
     158:	10 e0       	ldi	r17, 0x00	; 0
     15a:	11 23       	and	r17, r17
     15c:	61 f1       	breq	.+88     	; 0x1b6 <SEND_TO_LCD+0x120>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     15e:	6a 81       	ldd	r22, Y+2	; 0x02
     160:	7b 81       	ldd	r23, Y+3	; 0x03
     162:	8c 81       	ldd	r24, Y+4	; 0x04
     164:	9d 81       	ldd	r25, Y+5	; 0x05
     166:	20 e0       	ldi	r18, 0x00	; 0
     168:	30 e0       	ldi	r19, 0x00	; 0
     16a:	40 e2       	ldi	r20, 0x20	; 32
     16c:	51 e4       	ldi	r21, 0x41	; 65
     16e:	0e 94 97 07 	call	0xf2e	; 0xf2e <__mulsf3>
     172:	dc 01       	movw	r26, r24
     174:	cb 01       	movw	r24, r22
     176:	bc 01       	movw	r22, r24
     178:	cd 01       	movw	r24, r26
     17a:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fixunssfsi>
     17e:	dc 01       	movw	r26, r24
     180:	cb 01       	movw	r24, r22
     182:	9b 87       	std	Y+11, r25	; 0x0b
     184:	8a 87       	std	Y+10, r24	; 0x0a
     186:	12 c0       	rjmp	.+36     	; 0x1ac <SEND_TO_LCD+0x116>
     188:	80 e9       	ldi	r24, 0x90	; 144
     18a:	91 e0       	ldi	r25, 0x01	; 1
     18c:	9d 87       	std	Y+13, r25	; 0x0d
     18e:	8c 87       	std	Y+12, r24	; 0x0c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     190:	8c 85       	ldd	r24, Y+12	; 0x0c
     192:	9d 85       	ldd	r25, Y+13	; 0x0d
     194:	8c 01       	movw	r16, r24
     196:	c8 01       	movw	r24, r16
     198:	01 97       	sbiw	r24, 0x01	; 1
     19a:	f1 f7       	brne	.-4      	; 0x198 <SEND_TO_LCD+0x102>
     19c:	8c 01       	movw	r16, r24
     19e:	1d 87       	std	Y+13, r17	; 0x0d
     1a0:	0c 87       	std	Y+12, r16	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1a2:	8a 85       	ldd	r24, Y+10	; 0x0a
     1a4:	9b 85       	ldd	r25, Y+11	; 0x0b
     1a6:	01 97       	sbiw	r24, 0x01	; 1
     1a8:	9b 87       	std	Y+11, r25	; 0x0b
     1aa:	8a 87       	std	Y+10, r24	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1ac:	8a 85       	ldd	r24, Y+10	; 0x0a
     1ae:	9b 85       	ldd	r25, Y+11	; 0x0b
     1b0:	00 97       	sbiw	r24, 0x00	; 0
     1b2:	51 f7       	brne	.-44     	; 0x188 <SEND_TO_LCD+0xf2>
     1b4:	17 c0       	rjmp	.+46     	; 0x1e4 <SEND_TO_LCD+0x14e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1b6:	6e 81       	ldd	r22, Y+6	; 0x06
     1b8:	7f 81       	ldd	r23, Y+7	; 0x07
     1ba:	88 85       	ldd	r24, Y+8	; 0x08
     1bc:	99 85       	ldd	r25, Y+9	; 0x09
     1be:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fixunssfsi>
     1c2:	dc 01       	movw	r26, r24
     1c4:	cb 01       	movw	r24, r22
     1c6:	9b 87       	std	Y+11, r25	; 0x0b
     1c8:	8a 87       	std	Y+10, r24	; 0x0a
     1ca:	8a 85       	ldd	r24, Y+10	; 0x0a
     1cc:	9b 85       	ldd	r25, Y+11	; 0x0b
     1ce:	9f 87       	std	Y+15, r25	; 0x0f
     1d0:	8e 87       	std	Y+14, r24	; 0x0e
     1d2:	8e 85       	ldd	r24, Y+14	; 0x0e
     1d4:	9f 85       	ldd	r25, Y+15	; 0x0f
     1d6:	8c 01       	movw	r16, r24
     1d8:	f8 01       	movw	r30, r16
     1da:	31 97       	sbiw	r30, 0x01	; 1
     1dc:	f1 f7       	brne	.-4      	; 0x1da <SEND_TO_LCD+0x144>
     1de:	8f 01       	movw	r16, r30
     1e0:	1f 87       	std	Y+15, r17	; 0x0f
     1e2:	0e 87       	std	Y+14, r16	; 0x0e
     1e4:	88 e2       	ldi	r24, 0x28	; 40
     1e6:	90 e0       	ldi	r25, 0x00	; 0
     1e8:	2f ef       	ldi	r18, 0xFF	; 255
     1ea:	fc 01       	movw	r30, r24
     1ec:	20 83       	st	Z, r18
	control_lcd = mode ;			//CMD => RS=0 ,DATA =>RS =1 
     1ee:	8b ad       	ldd	r24, Y+59	; 0x3b
     1f0:	89 83       	std	Y+1, r24	; 0x01
	control_lcd |= 2;				// EN = 1
     1f2:	89 81       	ldd	r24, Y+1	; 0x01
     1f4:	82 60       	ori	r24, 0x02	; 2
     1f6:	89 83       	std	Y+1, r24	; 0x01
	write_to_calc(lcd_ctrl_port,control_lcd);
     1f8:	88 e2       	ldi	r24, 0x28	; 40
     1fa:	90 e0       	ldi	r25, 0x00	; 0
     1fc:	2f ef       	ldi	r18, 0xFF	; 255
     1fe:	fc 01       	movw	r30, r24
     200:	20 83       	st	Z, r18
     202:	8a e2       	ldi	r24, 0x2A	; 42
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	2f ef       	ldi	r18, 0xFF	; 255
     208:	fc 01       	movw	r30, r24
     20a:	20 83       	st	Z, r18
     20c:	85 e2       	ldi	r24, 0x25	; 37
     20e:	90 e0       	ldi	r25, 0x00	; 0
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	fc 01       	movw	r30, r24
     214:	20 83       	st	Z, r18
     216:	8b e2       	ldi	r24, 0x2B	; 43
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	29 81       	ldd	r18, Y+1	; 0x01
     21c:	fc 01       	movw	r30, r24
     21e:	20 83       	st	Z, r18
     220:	88 e2       	ldi	r24, 0x28	; 40
     222:	90 e0       	ldi	r25, 0x00	; 0
     224:	2d ef       	ldi	r18, 0xFD	; 253
     226:	fc 01       	movw	r30, r24
     228:	20 83       	st	Z, r18
     22a:	80 e0       	ldi	r24, 0x00	; 0
     22c:	90 e0       	ldi	r25, 0x00	; 0
     22e:	a0 e8       	ldi	r26, 0x80	; 128
     230:	bf e3       	ldi	r27, 0x3F	; 63
     232:	88 8b       	std	Y+16, r24	; 0x10
     234:	99 8b       	std	Y+17, r25	; 0x11
     236:	aa 8b       	std	Y+18, r26	; 0x12
     238:	bb 8b       	std	Y+19, r27	; 0x13
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     23a:	68 89       	ldd	r22, Y+16	; 0x10
     23c:	79 89       	ldd	r23, Y+17	; 0x11
     23e:	8a 89       	ldd	r24, Y+18	; 0x12
     240:	9b 89       	ldd	r25, Y+19	; 0x13
     242:	20 e0       	ldi	r18, 0x00	; 0
     244:	30 e0       	ldi	r19, 0x00	; 0
     246:	4a e7       	ldi	r20, 0x7A	; 122
     248:	55 e4       	ldi	r21, 0x45	; 69
     24a:	0e 94 97 07 	call	0xf2e	; 0xf2e <__mulsf3>
     24e:	dc 01       	movw	r26, r24
     250:	cb 01       	movw	r24, r22
     252:	8c 8b       	std	Y+20, r24	; 0x14
     254:	9d 8b       	std	Y+21, r25	; 0x15
     256:	ae 8b       	std	Y+22, r26	; 0x16
     258:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
     25a:	11 e0       	ldi	r17, 0x01	; 1
     25c:	6c 89       	ldd	r22, Y+20	; 0x14
     25e:	7d 89       	ldd	r23, Y+21	; 0x15
     260:	8e 89       	ldd	r24, Y+22	; 0x16
     262:	9f 89       	ldd	r25, Y+23	; 0x17
     264:	20 e0       	ldi	r18, 0x00	; 0
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	40 e8       	ldi	r20, 0x80	; 128
     26a:	5f e3       	ldi	r21, 0x3F	; 63
     26c:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__ltsf2>
     270:	88 23       	and	r24, r24
     272:	0c f0       	brlt	.+2      	; 0x276 <SEND_TO_LCD+0x1e0>
     274:	10 e0       	ldi	r17, 0x00	; 0
     276:	11 23       	and	r17, r17
     278:	29 f0       	breq	.+10     	; 0x284 <SEND_TO_LCD+0x1ee>
		__ticks = 1;
     27a:	81 e0       	ldi	r24, 0x01	; 1
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	99 8f       	std	Y+25, r25	; 0x19
     280:	88 8f       	std	Y+24, r24	; 0x18
     282:	46 c0       	rjmp	.+140    	; 0x310 <SEND_TO_LCD+0x27a>
	else if (__tmp > 65535)
     284:	11 e0       	ldi	r17, 0x01	; 1
     286:	6c 89       	ldd	r22, Y+20	; 0x14
     288:	7d 89       	ldd	r23, Y+21	; 0x15
     28a:	8e 89       	ldd	r24, Y+22	; 0x16
     28c:	9f 89       	ldd	r25, Y+23	; 0x17
     28e:	20 e0       	ldi	r18, 0x00	; 0
     290:	3f ef       	ldi	r19, 0xFF	; 255
     292:	4f e7       	ldi	r20, 0x7F	; 127
     294:	57 e4       	ldi	r21, 0x47	; 71
     296:	0e 94 91 08 	call	0x1122	; 0x1122 <__gtsf2>
     29a:	18 16       	cp	r1, r24
     29c:	0c f0       	brlt	.+2      	; 0x2a0 <SEND_TO_LCD+0x20a>
     29e:	10 e0       	ldi	r17, 0x00	; 0
     2a0:	11 23       	and	r17, r17
     2a2:	61 f1       	breq	.+88     	; 0x2fc <SEND_TO_LCD+0x266>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2a4:	68 89       	ldd	r22, Y+16	; 0x10
     2a6:	79 89       	ldd	r23, Y+17	; 0x11
     2a8:	8a 89       	ldd	r24, Y+18	; 0x12
     2aa:	9b 89       	ldd	r25, Y+19	; 0x13
     2ac:	20 e0       	ldi	r18, 0x00	; 0
     2ae:	30 e0       	ldi	r19, 0x00	; 0
     2b0:	40 e2       	ldi	r20, 0x20	; 32
     2b2:	51 e4       	ldi	r21, 0x41	; 65
     2b4:	0e 94 97 07 	call	0xf2e	; 0xf2e <__mulsf3>
     2b8:	dc 01       	movw	r26, r24
     2ba:	cb 01       	movw	r24, r22
     2bc:	bc 01       	movw	r22, r24
     2be:	cd 01       	movw	r24, r26
     2c0:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fixunssfsi>
     2c4:	dc 01       	movw	r26, r24
     2c6:	cb 01       	movw	r24, r22
     2c8:	99 8f       	std	Y+25, r25	; 0x19
     2ca:	88 8f       	std	Y+24, r24	; 0x18
     2cc:	12 c0       	rjmp	.+36     	; 0x2f2 <SEND_TO_LCD+0x25c>
     2ce:	80 e9       	ldi	r24, 0x90	; 144
     2d0:	91 e0       	ldi	r25, 0x01	; 1
     2d2:	9b 8f       	std	Y+27, r25	; 0x1b
     2d4:	8a 8f       	std	Y+26, r24	; 0x1a
     2d6:	8a 8d       	ldd	r24, Y+26	; 0x1a
     2d8:	9b 8d       	ldd	r25, Y+27	; 0x1b
     2da:	8c 01       	movw	r16, r24
     2dc:	c8 01       	movw	r24, r16
     2de:	01 97       	sbiw	r24, 0x01	; 1
     2e0:	f1 f7       	brne	.-4      	; 0x2de <SEND_TO_LCD+0x248>
     2e2:	8c 01       	movw	r16, r24
     2e4:	1b 8f       	std	Y+27, r17	; 0x1b
     2e6:	0a 8f       	std	Y+26, r16	; 0x1a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2e8:	88 8d       	ldd	r24, Y+24	; 0x18
     2ea:	99 8d       	ldd	r25, Y+25	; 0x19
     2ec:	01 97       	sbiw	r24, 0x01	; 1
     2ee:	99 8f       	std	Y+25, r25	; 0x19
     2f0:	88 8f       	std	Y+24, r24	; 0x18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2f2:	88 8d       	ldd	r24, Y+24	; 0x18
     2f4:	99 8d       	ldd	r25, Y+25	; 0x19
     2f6:	00 97       	sbiw	r24, 0x00	; 0
     2f8:	51 f7       	brne	.-44     	; 0x2ce <SEND_TO_LCD+0x238>
     2fa:	17 c0       	rjmp	.+46     	; 0x32a <SEND_TO_LCD+0x294>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2fc:	6c 89       	ldd	r22, Y+20	; 0x14
     2fe:	7d 89       	ldd	r23, Y+21	; 0x15
     300:	8e 89       	ldd	r24, Y+22	; 0x16
     302:	9f 89       	ldd	r25, Y+23	; 0x17
     304:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fixunssfsi>
     308:	dc 01       	movw	r26, r24
     30a:	cb 01       	movw	r24, r22
     30c:	99 8f       	std	Y+25, r25	; 0x19
     30e:	88 8f       	std	Y+24, r24	; 0x18
     310:	88 8d       	ldd	r24, Y+24	; 0x18
     312:	99 8d       	ldd	r25, Y+25	; 0x19
     314:	9d 8f       	std	Y+29, r25	; 0x1d
     316:	8c 8f       	std	Y+28, r24	; 0x1c
     318:	8c 8d       	ldd	r24, Y+28	; 0x1c
     31a:	9d 8d       	ldd	r25, Y+29	; 0x1d
     31c:	8c 01       	movw	r16, r24
     31e:	f8 01       	movw	r30, r16
     320:	31 97       	sbiw	r30, 0x01	; 1
     322:	f1 f7       	brne	.-4      	; 0x320 <SEND_TO_LCD+0x28a>
     324:	8f 01       	movw	r16, r30
     326:	1d 8f       	std	Y+29, r17	; 0x1d
     328:	0c 8f       	std	Y+28, r16	; 0x1c
     32a:	88 e2       	ldi	r24, 0x28	; 40
     32c:	90 e0       	ldi	r25, 0x00	; 0
     32e:	2f ef       	ldi	r18, 0xFF	; 255
     330:	fc 01       	movw	r30, r24
     332:	20 83       	st	Z, r18
     334:	80 e0       	ldi	r24, 0x00	; 0
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	a0 e8       	ldi	r26, 0x80	; 128
     33a:	bf e3       	ldi	r27, 0x3F	; 63
     33c:	8e 8f       	std	Y+30, r24	; 0x1e
     33e:	9f 8f       	std	Y+31, r25	; 0x1f
     340:	a8 a3       	std	Y+32, r26	; 0x20
     342:	b9 a3       	std	Y+33, r27	; 0x21
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     344:	6e 8d       	ldd	r22, Y+30	; 0x1e
     346:	7f 8d       	ldd	r23, Y+31	; 0x1f
     348:	88 a1       	ldd	r24, Y+32	; 0x20
     34a:	99 a1       	ldd	r25, Y+33	; 0x21
     34c:	20 e0       	ldi	r18, 0x00	; 0
     34e:	30 e0       	ldi	r19, 0x00	; 0
     350:	4a e7       	ldi	r20, 0x7A	; 122
     352:	55 e4       	ldi	r21, 0x45	; 69
     354:	0e 94 97 07 	call	0xf2e	; 0xf2e <__mulsf3>
     358:	dc 01       	movw	r26, r24
     35a:	cb 01       	movw	r24, r22
     35c:	8a a3       	std	Y+34, r24	; 0x22
     35e:	9b a3       	std	Y+35, r25	; 0x23
     360:	ac a3       	std	Y+36, r26	; 0x24
     362:	bd a3       	std	Y+37, r27	; 0x25
	if (__tmp < 1.0)
     364:	11 e0       	ldi	r17, 0x01	; 1
     366:	6a a1       	ldd	r22, Y+34	; 0x22
     368:	7b a1       	ldd	r23, Y+35	; 0x23
     36a:	8c a1       	ldd	r24, Y+36	; 0x24
     36c:	9d a1       	ldd	r25, Y+37	; 0x25
     36e:	20 e0       	ldi	r18, 0x00	; 0
     370:	30 e0       	ldi	r19, 0x00	; 0
     372:	40 e8       	ldi	r20, 0x80	; 128
     374:	5f e3       	ldi	r21, 0x3F	; 63
     376:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__ltsf2>
     37a:	88 23       	and	r24, r24
     37c:	0c f0       	brlt	.+2      	; 0x380 <SEND_TO_LCD+0x2ea>
     37e:	10 e0       	ldi	r17, 0x00	; 0
     380:	11 23       	and	r17, r17
     382:	29 f0       	breq	.+10     	; 0x38e <SEND_TO_LCD+0x2f8>
		__ticks = 1;
     384:	81 e0       	ldi	r24, 0x01	; 1
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	9f a3       	std	Y+39, r25	; 0x27
     38a:	8e a3       	std	Y+38, r24	; 0x26
     38c:	46 c0       	rjmp	.+140    	; 0x41a <SEND_TO_LCD+0x384>
	else if (__tmp > 65535)
     38e:	11 e0       	ldi	r17, 0x01	; 1
     390:	6a a1       	ldd	r22, Y+34	; 0x22
     392:	7b a1       	ldd	r23, Y+35	; 0x23
     394:	8c a1       	ldd	r24, Y+36	; 0x24
     396:	9d a1       	ldd	r25, Y+37	; 0x25
     398:	20 e0       	ldi	r18, 0x00	; 0
     39a:	3f ef       	ldi	r19, 0xFF	; 255
     39c:	4f e7       	ldi	r20, 0x7F	; 127
     39e:	57 e4       	ldi	r21, 0x47	; 71
     3a0:	0e 94 91 08 	call	0x1122	; 0x1122 <__gtsf2>
     3a4:	18 16       	cp	r1, r24
     3a6:	0c f0       	brlt	.+2      	; 0x3aa <SEND_TO_LCD+0x314>
     3a8:	10 e0       	ldi	r17, 0x00	; 0
     3aa:	11 23       	and	r17, r17
     3ac:	61 f1       	breq	.+88     	; 0x406 <SEND_TO_LCD+0x370>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3ae:	6e 8d       	ldd	r22, Y+30	; 0x1e
     3b0:	7f 8d       	ldd	r23, Y+31	; 0x1f
     3b2:	88 a1       	ldd	r24, Y+32	; 0x20
     3b4:	99 a1       	ldd	r25, Y+33	; 0x21
     3b6:	20 e0       	ldi	r18, 0x00	; 0
     3b8:	30 e0       	ldi	r19, 0x00	; 0
     3ba:	40 e2       	ldi	r20, 0x20	; 32
     3bc:	51 e4       	ldi	r21, 0x41	; 65
     3be:	0e 94 97 07 	call	0xf2e	; 0xf2e <__mulsf3>
     3c2:	dc 01       	movw	r26, r24
     3c4:	cb 01       	movw	r24, r22
     3c6:	bc 01       	movw	r22, r24
     3c8:	cd 01       	movw	r24, r26
     3ca:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fixunssfsi>
     3ce:	dc 01       	movw	r26, r24
     3d0:	cb 01       	movw	r24, r22
     3d2:	9f a3       	std	Y+39, r25	; 0x27
     3d4:	8e a3       	std	Y+38, r24	; 0x26
     3d6:	12 c0       	rjmp	.+36     	; 0x3fc <SEND_TO_LCD+0x366>
     3d8:	80 e9       	ldi	r24, 0x90	; 144
     3da:	91 e0       	ldi	r25, 0x01	; 1
     3dc:	99 a7       	std	Y+41, r25	; 0x29
     3de:	88 a7       	std	Y+40, r24	; 0x28
     3e0:	88 a5       	ldd	r24, Y+40	; 0x28
     3e2:	99 a5       	ldd	r25, Y+41	; 0x29
     3e4:	8c 01       	movw	r16, r24
     3e6:	c8 01       	movw	r24, r16
     3e8:	01 97       	sbiw	r24, 0x01	; 1
     3ea:	f1 f7       	brne	.-4      	; 0x3e8 <SEND_TO_LCD+0x352>
     3ec:	8c 01       	movw	r16, r24
     3ee:	19 a7       	std	Y+41, r17	; 0x29
     3f0:	08 a7       	std	Y+40, r16	; 0x28
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3f2:	8e a1       	ldd	r24, Y+38	; 0x26
     3f4:	9f a1       	ldd	r25, Y+39	; 0x27
     3f6:	01 97       	sbiw	r24, 0x01	; 1
     3f8:	9f a3       	std	Y+39, r25	; 0x27
     3fa:	8e a3       	std	Y+38, r24	; 0x26
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3fc:	8e a1       	ldd	r24, Y+38	; 0x26
     3fe:	9f a1       	ldd	r25, Y+39	; 0x27
     400:	00 97       	sbiw	r24, 0x00	; 0
     402:	51 f7       	brne	.-44     	; 0x3d8 <SEND_TO_LCD+0x342>
     404:	17 c0       	rjmp	.+46     	; 0x434 <SEND_TO_LCD+0x39e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     406:	6a a1       	ldd	r22, Y+34	; 0x22
     408:	7b a1       	ldd	r23, Y+35	; 0x23
     40a:	8c a1       	ldd	r24, Y+36	; 0x24
     40c:	9d a1       	ldd	r25, Y+37	; 0x25
     40e:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fixunssfsi>
     412:	dc 01       	movw	r26, r24
     414:	cb 01       	movw	r24, r22
     416:	9f a3       	std	Y+39, r25	; 0x27
     418:	8e a3       	std	Y+38, r24	; 0x26
     41a:	8e a1       	ldd	r24, Y+38	; 0x26
     41c:	9f a1       	ldd	r25, Y+39	; 0x27
     41e:	9b a7       	std	Y+43, r25	; 0x2b
     420:	8a a7       	std	Y+42, r24	; 0x2a
     422:	8a a5       	ldd	r24, Y+42	; 0x2a
     424:	9b a5       	ldd	r25, Y+43	; 0x2b
     426:	8c 01       	movw	r16, r24
     428:	f8 01       	movw	r30, r16
     42a:	31 97       	sbiw	r30, 0x01	; 1
     42c:	f1 f7       	brne	.-4      	; 0x42a <SEND_TO_LCD+0x394>
     42e:	8f 01       	movw	r16, r30
     430:	1b a7       	std	Y+43, r17	; 0x2b
     432:	0a a7       	std	Y+42, r16	; 0x2a
	_delay_ms(1);
	control_lcd &= ~2 ;				// EN =0
     434:	89 81       	ldd	r24, Y+1	; 0x01
     436:	8d 7f       	andi	r24, 0xFD	; 253
     438:	89 83       	std	Y+1, r24	; 0x01
	write_to_calc(lcd_ctrl_port,control_lcd);
     43a:	88 e2       	ldi	r24, 0x28	; 40
     43c:	90 e0       	ldi	r25, 0x00	; 0
     43e:	2f ef       	ldi	r18, 0xFF	; 255
     440:	fc 01       	movw	r30, r24
     442:	20 83       	st	Z, r18
     444:	8a e2       	ldi	r24, 0x2A	; 42
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	2f ef       	ldi	r18, 0xFF	; 255
     44a:	fc 01       	movw	r30, r24
     44c:	20 83       	st	Z, r18
     44e:	85 e2       	ldi	r24, 0x25	; 37
     450:	90 e0       	ldi	r25, 0x00	; 0
     452:	21 e0       	ldi	r18, 0x01	; 1
     454:	fc 01       	movw	r30, r24
     456:	20 83       	st	Z, r18
     458:	8b e2       	ldi	r24, 0x2B	; 43
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	29 81       	ldd	r18, Y+1	; 0x01
     45e:	fc 01       	movw	r30, r24
     460:	20 83       	st	Z, r18
     462:	88 e2       	ldi	r24, 0x28	; 40
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	2d ef       	ldi	r18, 0xFD	; 253
     468:	fc 01       	movw	r30, r24
     46a:	20 83       	st	Z, r18
     46c:	80 e0       	ldi	r24, 0x00	; 0
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	a0 e8       	ldi	r26, 0x80	; 128
     472:	bf e3       	ldi	r27, 0x3F	; 63
     474:	8c a7       	std	Y+44, r24	; 0x2c
     476:	9d a7       	std	Y+45, r25	; 0x2d
     478:	ae a7       	std	Y+46, r26	; 0x2e
     47a:	bf a7       	std	Y+47, r27	; 0x2f
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     47c:	6c a5       	ldd	r22, Y+44	; 0x2c
     47e:	7d a5       	ldd	r23, Y+45	; 0x2d
     480:	8e a5       	ldd	r24, Y+46	; 0x2e
     482:	9f a5       	ldd	r25, Y+47	; 0x2f
     484:	20 e0       	ldi	r18, 0x00	; 0
     486:	30 e0       	ldi	r19, 0x00	; 0
     488:	4a e7       	ldi	r20, 0x7A	; 122
     48a:	55 e4       	ldi	r21, 0x45	; 69
     48c:	0e 94 97 07 	call	0xf2e	; 0xf2e <__mulsf3>
     490:	dc 01       	movw	r26, r24
     492:	cb 01       	movw	r24, r22
     494:	88 ab       	std	Y+48, r24	; 0x30
     496:	99 ab       	std	Y+49, r25	; 0x31
     498:	aa ab       	std	Y+50, r26	; 0x32
     49a:	bb ab       	std	Y+51, r27	; 0x33
	if (__tmp < 1.0)
     49c:	11 e0       	ldi	r17, 0x01	; 1
     49e:	68 a9       	ldd	r22, Y+48	; 0x30
     4a0:	79 a9       	ldd	r23, Y+49	; 0x31
     4a2:	8a a9       	ldd	r24, Y+50	; 0x32
     4a4:	9b a9       	ldd	r25, Y+51	; 0x33
     4a6:	20 e0       	ldi	r18, 0x00	; 0
     4a8:	30 e0       	ldi	r19, 0x00	; 0
     4aa:	40 e8       	ldi	r20, 0x80	; 128
     4ac:	5f e3       	ldi	r21, 0x3F	; 63
     4ae:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__ltsf2>
     4b2:	88 23       	and	r24, r24
     4b4:	0c f0       	brlt	.+2      	; 0x4b8 <SEND_TO_LCD+0x422>
     4b6:	10 e0       	ldi	r17, 0x00	; 0
     4b8:	11 23       	and	r17, r17
     4ba:	29 f0       	breq	.+10     	; 0x4c6 <SEND_TO_LCD+0x430>
		__ticks = 1;
     4bc:	81 e0       	ldi	r24, 0x01	; 1
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	9d ab       	std	Y+53, r25	; 0x35
     4c2:	8c ab       	std	Y+52, r24	; 0x34
     4c4:	46 c0       	rjmp	.+140    	; 0x552 <SEND_TO_LCD+0x4bc>
	else if (__tmp > 65535)
     4c6:	11 e0       	ldi	r17, 0x01	; 1
     4c8:	68 a9       	ldd	r22, Y+48	; 0x30
     4ca:	79 a9       	ldd	r23, Y+49	; 0x31
     4cc:	8a a9       	ldd	r24, Y+50	; 0x32
     4ce:	9b a9       	ldd	r25, Y+51	; 0x33
     4d0:	20 e0       	ldi	r18, 0x00	; 0
     4d2:	3f ef       	ldi	r19, 0xFF	; 255
     4d4:	4f e7       	ldi	r20, 0x7F	; 127
     4d6:	57 e4       	ldi	r21, 0x47	; 71
     4d8:	0e 94 91 08 	call	0x1122	; 0x1122 <__gtsf2>
     4dc:	18 16       	cp	r1, r24
     4de:	0c f0       	brlt	.+2      	; 0x4e2 <SEND_TO_LCD+0x44c>
     4e0:	10 e0       	ldi	r17, 0x00	; 0
     4e2:	11 23       	and	r17, r17
     4e4:	61 f1       	breq	.+88     	; 0x53e <SEND_TO_LCD+0x4a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4e6:	6c a5       	ldd	r22, Y+44	; 0x2c
     4e8:	7d a5       	ldd	r23, Y+45	; 0x2d
     4ea:	8e a5       	ldd	r24, Y+46	; 0x2e
     4ec:	9f a5       	ldd	r25, Y+47	; 0x2f
     4ee:	20 e0       	ldi	r18, 0x00	; 0
     4f0:	30 e0       	ldi	r19, 0x00	; 0
     4f2:	40 e2       	ldi	r20, 0x20	; 32
     4f4:	51 e4       	ldi	r21, 0x41	; 65
     4f6:	0e 94 97 07 	call	0xf2e	; 0xf2e <__mulsf3>
     4fa:	dc 01       	movw	r26, r24
     4fc:	cb 01       	movw	r24, r22
     4fe:	bc 01       	movw	r22, r24
     500:	cd 01       	movw	r24, r26
     502:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fixunssfsi>
     506:	dc 01       	movw	r26, r24
     508:	cb 01       	movw	r24, r22
     50a:	9d ab       	std	Y+53, r25	; 0x35
     50c:	8c ab       	std	Y+52, r24	; 0x34
     50e:	12 c0       	rjmp	.+36     	; 0x534 <SEND_TO_LCD+0x49e>
     510:	80 e9       	ldi	r24, 0x90	; 144
     512:	91 e0       	ldi	r25, 0x01	; 1
     514:	9f ab       	std	Y+55, r25	; 0x37
     516:	8e ab       	std	Y+54, r24	; 0x36
     518:	8e a9       	ldd	r24, Y+54	; 0x36
     51a:	9f a9       	ldd	r25, Y+55	; 0x37
     51c:	8c 01       	movw	r16, r24
     51e:	c8 01       	movw	r24, r16
     520:	01 97       	sbiw	r24, 0x01	; 1
     522:	f1 f7       	brne	.-4      	; 0x520 <SEND_TO_LCD+0x48a>
     524:	8c 01       	movw	r16, r24
     526:	1f ab       	std	Y+55, r17	; 0x37
     528:	0e ab       	std	Y+54, r16	; 0x36
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     52a:	8c a9       	ldd	r24, Y+52	; 0x34
     52c:	9d a9       	ldd	r25, Y+53	; 0x35
     52e:	01 97       	sbiw	r24, 0x01	; 1
     530:	9d ab       	std	Y+53, r25	; 0x35
     532:	8c ab       	std	Y+52, r24	; 0x34
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     534:	8c a9       	ldd	r24, Y+52	; 0x34
     536:	9d a9       	ldd	r25, Y+53	; 0x35
     538:	00 97       	sbiw	r24, 0x00	; 0
     53a:	51 f7       	brne	.-44     	; 0x510 <SEND_TO_LCD+0x47a>
     53c:	17 c0       	rjmp	.+46     	; 0x56c <SEND_TO_LCD+0x4d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     53e:	68 a9       	ldd	r22, Y+48	; 0x30
     540:	79 a9       	ldd	r23, Y+49	; 0x31
     542:	8a a9       	ldd	r24, Y+50	; 0x32
     544:	9b a9       	ldd	r25, Y+51	; 0x33
     546:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fixunssfsi>
     54a:	dc 01       	movw	r26, r24
     54c:	cb 01       	movw	r24, r22
     54e:	9d ab       	std	Y+53, r25	; 0x35
     550:	8c ab       	std	Y+52, r24	; 0x34
     552:	8c a9       	ldd	r24, Y+52	; 0x34
     554:	9d a9       	ldd	r25, Y+53	; 0x35
     556:	99 af       	std	Y+57, r25	; 0x39
     558:	88 af       	std	Y+56, r24	; 0x38
     55a:	88 ad       	ldd	r24, Y+56	; 0x38
     55c:	99 ad       	ldd	r25, Y+57	; 0x39
     55e:	8c 01       	movw	r16, r24
     560:	f8 01       	movw	r30, r16
     562:	31 97       	sbiw	r30, 0x01	; 1
     564:	f1 f7       	brne	.-4      	; 0x562 <SEND_TO_LCD+0x4cc>
     566:	8f 01       	movw	r16, r30
     568:	19 af       	std	Y+57, r17	; 0x39
     56a:	08 af       	std	Y+56, r16	; 0x38
     56c:	88 e2       	ldi	r24, 0x28	; 40
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	2f ef       	ldi	r18, 0xFF	; 255
     572:	fc 01       	movw	r30, r24
     574:	20 83       	st	Z, r18
}
     576:	eb 96       	adiw	r28, 0x3b	; 59
     578:	0f b6       	in	r0, 0x3f	; 63
     57a:	f8 94       	cli
     57c:	de bf       	out	0x3e, r29	; 62
     57e:	0f be       	out	0x3f, r0	; 63
     580:	cd bf       	out	0x3d, r28	; 61
     582:	cf 91       	pop	r28
     584:	df 91       	pop	r29
     586:	1f 91       	pop	r17
     588:	0f 91       	pop	r16
     58a:	08 95       	ret

0000058c <INIT_LCD>:

void INIT_LCD()
{
     58c:	df 93       	push	r29
     58e:	cf 93       	push	r28
     590:	cd b7       	in	r28, 0x3d	; 61
     592:	de b7       	in	r29, 0x3e	; 62
	SEND_TO_LCD(set_size,CMD);
     594:	88 e3       	ldi	r24, 0x38	; 56
     596:	60 e0       	ldi	r22, 0x00	; 0
     598:	0e 94 4b 00 	call	0x96	; 0x96 <SEND_TO_LCD>
	SEND_TO_LCD(clr,CMD);
     59c:	81 e0       	ldi	r24, 0x01	; 1
     59e:	60 e0       	ldi	r22, 0x00	; 0
     5a0:	0e 94 4b 00 	call	0x96	; 0x96 <SEND_TO_LCD>
	SEND_TO_LCD(display_on,CMD)	;
     5a4:	8e e0       	ldi	r24, 0x0E	; 14
     5a6:	60 e0       	ldi	r22, 0x00	; 0
     5a8:	0e 94 4b 00 	call	0x96	; 0x96 <SEND_TO_LCD>
}
     5ac:	cf 91       	pop	r28
     5ae:	df 91       	pop	r29
     5b0:	08 95       	ret

000005b2 <write_to_LCD>:

void write_to_LCD(char ch){
     5b2:	df 93       	push	r29
     5b4:	cf 93       	push	r28
     5b6:	0f 92       	push	r0
     5b8:	cd b7       	in	r28, 0x3d	; 61
     5ba:	de b7       	in	r29, 0x3e	; 62
     5bc:	89 83       	std	Y+1, r24	; 0x01
	SEND_TO_LCD(ch,DATA);
     5be:	89 81       	ldd	r24, Y+1	; 0x01
     5c0:	61 e0       	ldi	r22, 0x01	; 1
     5c2:	0e 94 4b 00 	call	0x96	; 0x96 <SEND_TO_LCD>
}
     5c6:	0f 90       	pop	r0
     5c8:	cf 91       	pop	r28
     5ca:	df 91       	pop	r29
     5cc:	08 95       	ret

000005ce <print_to_LCD>:

void print_to_LCD(char *str){
     5ce:	df 93       	push	r29
     5d0:	cf 93       	push	r28
     5d2:	00 d0       	rcall	.+0      	; 0x5d4 <print_to_LCD+0x6>
     5d4:	cd b7       	in	r28, 0x3d	; 61
     5d6:	de b7       	in	r29, 0x3e	; 62
     5d8:	9a 83       	std	Y+2, r25	; 0x02
     5da:	89 83       	std	Y+1, r24	; 0x01
	while(*str != '\0')
     5dc:	0b c0       	rjmp	.+22     	; 0x5f4 <print_to_LCD+0x26>
	{
		write_to_LCD(*str);
     5de:	89 81       	ldd	r24, Y+1	; 0x01
     5e0:	9a 81       	ldd	r25, Y+2	; 0x02
     5e2:	fc 01       	movw	r30, r24
     5e4:	80 81       	ld	r24, Z
     5e6:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <write_to_LCD>
		str++;
     5ea:	89 81       	ldd	r24, Y+1	; 0x01
     5ec:	9a 81       	ldd	r25, Y+2	; 0x02
     5ee:	01 96       	adiw	r24, 0x01	; 1
     5f0:	9a 83       	std	Y+2, r25	; 0x02
     5f2:	89 83       	std	Y+1, r24	; 0x01
void write_to_LCD(char ch){
	SEND_TO_LCD(ch,DATA);
}

void print_to_LCD(char *str){
	while(*str != '\0')
     5f4:	89 81       	ldd	r24, Y+1	; 0x01
     5f6:	9a 81       	ldd	r25, Y+2	; 0x02
     5f8:	fc 01       	movw	r30, r24
     5fa:	80 81       	ld	r24, Z
     5fc:	88 23       	and	r24, r24
     5fe:	79 f7       	brne	.-34     	; 0x5de <print_to_LCD+0x10>
	{
		write_to_LCD(*str);
		str++;
	}
}
     600:	0f 90       	pop	r0
     602:	0f 90       	pop	r0
     604:	cf 91       	pop	r28
     606:	df 91       	pop	r29
     608:	08 95       	ret

0000060a <get_key_presed>:

char get_key_presed(){
     60a:	0f 93       	push	r16
     60c:	1f 93       	push	r17
     60e:	df 93       	push	r29
     610:	cf 93       	push	r28
     612:	cd b7       	in	r28, 0x3d	; 61
     614:	de b7       	in	r29, 0x3e	; 62
     616:	a0 97       	sbiw	r28, 0x20	; 32
     618:	0f b6       	in	r0, 0x3f	; 63
     61a:	f8 94       	cli
     61c:	de bf       	out	0x3e, r29	; 62
     61e:	0f be       	out	0x3f, r0	; 63
     620:	cd bf       	out	0x3d, r28	; 61
	while (1)
	{
			for (uint8_t i=4,tmp;i<8;i++)
     622:	84 e0       	ldi	r24, 0x04	; 4
     624:	89 83       	std	Y+1, r24	; 0x01
     626:	95 c1       	rjmp	.+810    	; 0x952 <__stack+0x53>
			{
				write_to_calc(keypad_port,~(1<<i));
     628:	88 e2       	ldi	r24, 0x28	; 40
     62a:	90 e0       	ldi	r25, 0x00	; 0
     62c:	2f ef       	ldi	r18, 0xFF	; 255
     62e:	fc 01       	movw	r30, r24
     630:	20 83       	st	Z, r18
     632:	8a e2       	ldi	r24, 0x2A	; 42
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	2f ef       	ldi	r18, 0xFF	; 255
     638:	fc 01       	movw	r30, r24
     63a:	20 83       	st	Z, r18
     63c:	85 e2       	ldi	r24, 0x25	; 37
     63e:	90 e0       	ldi	r25, 0x00	; 0
     640:	22 e0       	ldi	r18, 0x02	; 2
     642:	fc 01       	movw	r30, r24
     644:	20 83       	st	Z, r18
     646:	8b e2       	ldi	r24, 0x2B	; 43
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	29 81       	ldd	r18, Y+1	; 0x01
     64c:	42 2f       	mov	r20, r18
     64e:	50 e0       	ldi	r21, 0x00	; 0
     650:	21 e0       	ldi	r18, 0x01	; 1
     652:	30 e0       	ldi	r19, 0x00	; 0
     654:	02 c0       	rjmp	.+4      	; 0x65a <get_key_presed+0x50>
     656:	22 0f       	add	r18, r18
     658:	33 1f       	adc	r19, r19
     65a:	4a 95       	dec	r20
     65c:	e2 f7       	brpl	.-8      	; 0x656 <get_key_presed+0x4c>
     65e:	20 95       	com	r18
     660:	fc 01       	movw	r30, r24
     662:	20 83       	st	Z, r18
     664:	88 e2       	ldi	r24, 0x28	; 40
     666:	90 e0       	ldi	r25, 0x00	; 0
     668:	2d ef       	ldi	r18, 0xFD	; 253
     66a:	fc 01       	movw	r30, r24
     66c:	20 83       	st	Z, r18
     66e:	80 e0       	ldi	r24, 0x00	; 0
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	a0 e8       	ldi	r26, 0x80	; 128
     674:	bf e3       	ldi	r27, 0x3F	; 63
     676:	8d 83       	std	Y+5, r24	; 0x05
     678:	9e 83       	std	Y+6, r25	; 0x06
     67a:	af 83       	std	Y+7, r26	; 0x07
     67c:	b8 87       	std	Y+8, r27	; 0x08
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     67e:	6d 81       	ldd	r22, Y+5	; 0x05
     680:	7e 81       	ldd	r23, Y+6	; 0x06
     682:	8f 81       	ldd	r24, Y+7	; 0x07
     684:	98 85       	ldd	r25, Y+8	; 0x08
     686:	20 e0       	ldi	r18, 0x00	; 0
     688:	30 e0       	ldi	r19, 0x00	; 0
     68a:	4a e7       	ldi	r20, 0x7A	; 122
     68c:	55 e4       	ldi	r21, 0x45	; 69
     68e:	0e 94 97 07 	call	0xf2e	; 0xf2e <__mulsf3>
     692:	dc 01       	movw	r26, r24
     694:	cb 01       	movw	r24, r22
     696:	89 87       	std	Y+9, r24	; 0x09
     698:	9a 87       	std	Y+10, r25	; 0x0a
     69a:	ab 87       	std	Y+11, r26	; 0x0b
     69c:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     69e:	11 e0       	ldi	r17, 0x01	; 1
     6a0:	69 85       	ldd	r22, Y+9	; 0x09
     6a2:	7a 85       	ldd	r23, Y+10	; 0x0a
     6a4:	8b 85       	ldd	r24, Y+11	; 0x0b
     6a6:	9c 85       	ldd	r25, Y+12	; 0x0c
     6a8:	20 e0       	ldi	r18, 0x00	; 0
     6aa:	30 e0       	ldi	r19, 0x00	; 0
     6ac:	40 e8       	ldi	r20, 0x80	; 128
     6ae:	5f e3       	ldi	r21, 0x3F	; 63
     6b0:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__ltsf2>
     6b4:	88 23       	and	r24, r24
     6b6:	0c f0       	brlt	.+2      	; 0x6ba <get_key_presed+0xb0>
     6b8:	10 e0       	ldi	r17, 0x00	; 0
     6ba:	11 23       	and	r17, r17
     6bc:	29 f0       	breq	.+10     	; 0x6c8 <get_key_presed+0xbe>
		__ticks = 1;
     6be:	81 e0       	ldi	r24, 0x01	; 1
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	9e 87       	std	Y+14, r25	; 0x0e
     6c4:	8d 87       	std	Y+13, r24	; 0x0d
     6c6:	46 c0       	rjmp	.+140    	; 0x754 <get_key_presed+0x14a>
	else if (__tmp > 65535)
     6c8:	11 e0       	ldi	r17, 0x01	; 1
     6ca:	69 85       	ldd	r22, Y+9	; 0x09
     6cc:	7a 85       	ldd	r23, Y+10	; 0x0a
     6ce:	8b 85       	ldd	r24, Y+11	; 0x0b
     6d0:	9c 85       	ldd	r25, Y+12	; 0x0c
     6d2:	20 e0       	ldi	r18, 0x00	; 0
     6d4:	3f ef       	ldi	r19, 0xFF	; 255
     6d6:	4f e7       	ldi	r20, 0x7F	; 127
     6d8:	57 e4       	ldi	r21, 0x47	; 71
     6da:	0e 94 91 08 	call	0x1122	; 0x1122 <__gtsf2>
     6de:	18 16       	cp	r1, r24
     6e0:	0c f0       	brlt	.+2      	; 0x6e4 <get_key_presed+0xda>
     6e2:	10 e0       	ldi	r17, 0x00	; 0
     6e4:	11 23       	and	r17, r17
     6e6:	61 f1       	breq	.+88     	; 0x740 <get_key_presed+0x136>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     6e8:	6d 81       	ldd	r22, Y+5	; 0x05
     6ea:	7e 81       	ldd	r23, Y+6	; 0x06
     6ec:	8f 81       	ldd	r24, Y+7	; 0x07
     6ee:	98 85       	ldd	r25, Y+8	; 0x08
     6f0:	20 e0       	ldi	r18, 0x00	; 0
     6f2:	30 e0       	ldi	r19, 0x00	; 0
     6f4:	40 e2       	ldi	r20, 0x20	; 32
     6f6:	51 e4       	ldi	r21, 0x41	; 65
     6f8:	0e 94 97 07 	call	0xf2e	; 0xf2e <__mulsf3>
     6fc:	dc 01       	movw	r26, r24
     6fe:	cb 01       	movw	r24, r22
     700:	bc 01       	movw	r22, r24
     702:	cd 01       	movw	r24, r26
     704:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fixunssfsi>
     708:	dc 01       	movw	r26, r24
     70a:	cb 01       	movw	r24, r22
     70c:	9e 87       	std	Y+14, r25	; 0x0e
     70e:	8d 87       	std	Y+13, r24	; 0x0d
     710:	12 c0       	rjmp	.+36     	; 0x736 <get_key_presed+0x12c>
     712:	80 e9       	ldi	r24, 0x90	; 144
     714:	91 e0       	ldi	r25, 0x01	; 1
     716:	98 8b       	std	Y+16, r25	; 0x10
     718:	8f 87       	std	Y+15, r24	; 0x0f
     71a:	8f 85       	ldd	r24, Y+15	; 0x0f
     71c:	98 89       	ldd	r25, Y+16	; 0x10
     71e:	8c 01       	movw	r16, r24
     720:	c8 01       	movw	r24, r16
     722:	01 97       	sbiw	r24, 0x01	; 1
     724:	f1 f7       	brne	.-4      	; 0x722 <get_key_presed+0x118>
     726:	8c 01       	movw	r16, r24
     728:	18 8b       	std	Y+16, r17	; 0x10
     72a:	0f 87       	std	Y+15, r16	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     72c:	8d 85       	ldd	r24, Y+13	; 0x0d
     72e:	9e 85       	ldd	r25, Y+14	; 0x0e
     730:	01 97       	sbiw	r24, 0x01	; 1
     732:	9e 87       	std	Y+14, r25	; 0x0e
     734:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     736:	8d 85       	ldd	r24, Y+13	; 0x0d
     738:	9e 85       	ldd	r25, Y+14	; 0x0e
     73a:	00 97       	sbiw	r24, 0x00	; 0
     73c:	51 f7       	brne	.-44     	; 0x712 <get_key_presed+0x108>
     73e:	17 c0       	rjmp	.+46     	; 0x76e <get_key_presed+0x164>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     740:	69 85       	ldd	r22, Y+9	; 0x09
     742:	7a 85       	ldd	r23, Y+10	; 0x0a
     744:	8b 85       	ldd	r24, Y+11	; 0x0b
     746:	9c 85       	ldd	r25, Y+12	; 0x0c
     748:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fixunssfsi>
     74c:	dc 01       	movw	r26, r24
     74e:	cb 01       	movw	r24, r22
     750:	9e 87       	std	Y+14, r25	; 0x0e
     752:	8d 87       	std	Y+13, r24	; 0x0d
     754:	8d 85       	ldd	r24, Y+13	; 0x0d
     756:	9e 85       	ldd	r25, Y+14	; 0x0e
     758:	9a 8b       	std	Y+18, r25	; 0x12
     75a:	89 8b       	std	Y+17, r24	; 0x11
     75c:	89 89       	ldd	r24, Y+17	; 0x11
     75e:	9a 89       	ldd	r25, Y+18	; 0x12
     760:	8c 01       	movw	r16, r24
     762:	f8 01       	movw	r30, r16
     764:	31 97       	sbiw	r30, 0x01	; 1
     766:	f1 f7       	brne	.-4      	; 0x764 <get_key_presed+0x15a>
     768:	8f 01       	movw	r16, r30
     76a:	1a 8b       	std	Y+18, r17	; 0x12
     76c:	09 8b       	std	Y+17, r16	; 0x11
     76e:	88 e2       	ldi	r24, 0x28	; 40
     770:	90 e0       	ldi	r25, 0x00	; 0
     772:	2f ef       	ldi	r18, 0xFF	; 255
     774:	fc 01       	movw	r30, r24
     776:	20 83       	st	Z, r18
				read_from_calc(keypad_port,tmp);
     778:	88 e2       	ldi	r24, 0x28	; 40
     77a:	90 e0       	ldi	r25, 0x00	; 0
     77c:	2f ef       	ldi	r18, 0xFF	; 255
     77e:	fc 01       	movw	r30, r24
     780:	20 83       	st	Z, r18
     782:	8a e2       	ldi	r24, 0x2A	; 42
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	fc 01       	movw	r30, r24
     788:	10 82       	st	Z, r1
     78a:	8b e2       	ldi	r24, 0x2B	; 43
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	2f ef       	ldi	r18, 0xFF	; 255
     790:	fc 01       	movw	r30, r24
     792:	20 83       	st	Z, r18
     794:	85 e2       	ldi	r24, 0x25	; 37
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	22 e0       	ldi	r18, 0x02	; 2
     79a:	fc 01       	movw	r30, r24
     79c:	20 83       	st	Z, r18
     79e:	89 e2       	ldi	r24, 0x29	; 41
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	fc 01       	movw	r30, r24
     7a4:	80 81       	ld	r24, Z
     7a6:	8c 83       	std	Y+4, r24	; 0x04
     7a8:	88 e2       	ldi	r24, 0x28	; 40
     7aa:	90 e0       	ldi	r25, 0x00	; 0
     7ac:	2e ef       	ldi	r18, 0xFE	; 254
     7ae:	fc 01       	movw	r30, r24
     7b0:	20 83       	st	Z, r18
     7b2:	80 e0       	ldi	r24, 0x00	; 0
     7b4:	90 e0       	ldi	r25, 0x00	; 0
     7b6:	a0 e8       	ldi	r26, 0x80	; 128
     7b8:	bf e3       	ldi	r27, 0x3F	; 63
     7ba:	8b 8b       	std	Y+19, r24	; 0x13
     7bc:	9c 8b       	std	Y+20, r25	; 0x14
     7be:	ad 8b       	std	Y+21, r26	; 0x15
     7c0:	be 8b       	std	Y+22, r27	; 0x16
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     7c2:	6b 89       	ldd	r22, Y+19	; 0x13
     7c4:	7c 89       	ldd	r23, Y+20	; 0x14
     7c6:	8d 89       	ldd	r24, Y+21	; 0x15
     7c8:	9e 89       	ldd	r25, Y+22	; 0x16
     7ca:	20 e0       	ldi	r18, 0x00	; 0
     7cc:	30 e0       	ldi	r19, 0x00	; 0
     7ce:	4a e7       	ldi	r20, 0x7A	; 122
     7d0:	55 e4       	ldi	r21, 0x45	; 69
     7d2:	0e 94 97 07 	call	0xf2e	; 0xf2e <__mulsf3>
     7d6:	dc 01       	movw	r26, r24
     7d8:	cb 01       	movw	r24, r22
     7da:	8f 8b       	std	Y+23, r24	; 0x17
     7dc:	98 8f       	std	Y+24, r25	; 0x18
     7de:	a9 8f       	std	Y+25, r26	; 0x19
     7e0:	ba 8f       	std	Y+26, r27	; 0x1a
	if (__tmp < 1.0)
     7e2:	11 e0       	ldi	r17, 0x01	; 1
     7e4:	6f 89       	ldd	r22, Y+23	; 0x17
     7e6:	78 8d       	ldd	r23, Y+24	; 0x18
     7e8:	89 8d       	ldd	r24, Y+25	; 0x19
     7ea:	9a 8d       	ldd	r25, Y+26	; 0x1a
     7ec:	20 e0       	ldi	r18, 0x00	; 0
     7ee:	30 e0       	ldi	r19, 0x00	; 0
     7f0:	40 e8       	ldi	r20, 0x80	; 128
     7f2:	5f e3       	ldi	r21, 0x3F	; 63
     7f4:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__ltsf2>
     7f8:	88 23       	and	r24, r24
     7fa:	0c f0       	brlt	.+2      	; 0x7fe <get_key_presed+0x1f4>
     7fc:	10 e0       	ldi	r17, 0x00	; 0
     7fe:	11 23       	and	r17, r17
     800:	29 f0       	breq	.+10     	; 0x80c <get_key_presed+0x202>
		__ticks = 1;
     802:	81 e0       	ldi	r24, 0x01	; 1
     804:	90 e0       	ldi	r25, 0x00	; 0
     806:	9c 8f       	std	Y+28, r25	; 0x1c
     808:	8b 8f       	std	Y+27, r24	; 0x1b
     80a:	46 c0       	rjmp	.+140    	; 0x898 <get_key_presed+0x28e>
	else if (__tmp > 65535)
     80c:	11 e0       	ldi	r17, 0x01	; 1
     80e:	6f 89       	ldd	r22, Y+23	; 0x17
     810:	78 8d       	ldd	r23, Y+24	; 0x18
     812:	89 8d       	ldd	r24, Y+25	; 0x19
     814:	9a 8d       	ldd	r25, Y+26	; 0x1a
     816:	20 e0       	ldi	r18, 0x00	; 0
     818:	3f ef       	ldi	r19, 0xFF	; 255
     81a:	4f e7       	ldi	r20, 0x7F	; 127
     81c:	57 e4       	ldi	r21, 0x47	; 71
     81e:	0e 94 91 08 	call	0x1122	; 0x1122 <__gtsf2>
     822:	18 16       	cp	r1, r24
     824:	0c f0       	brlt	.+2      	; 0x828 <get_key_presed+0x21e>
     826:	10 e0       	ldi	r17, 0x00	; 0
     828:	11 23       	and	r17, r17
     82a:	61 f1       	breq	.+88     	; 0x884 <get_key_presed+0x27a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     82c:	6b 89       	ldd	r22, Y+19	; 0x13
     82e:	7c 89       	ldd	r23, Y+20	; 0x14
     830:	8d 89       	ldd	r24, Y+21	; 0x15
     832:	9e 89       	ldd	r25, Y+22	; 0x16
     834:	20 e0       	ldi	r18, 0x00	; 0
     836:	30 e0       	ldi	r19, 0x00	; 0
     838:	40 e2       	ldi	r20, 0x20	; 32
     83a:	51 e4       	ldi	r21, 0x41	; 65
     83c:	0e 94 97 07 	call	0xf2e	; 0xf2e <__mulsf3>
     840:	dc 01       	movw	r26, r24
     842:	cb 01       	movw	r24, r22
     844:	bc 01       	movw	r22, r24
     846:	cd 01       	movw	r24, r26
     848:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fixunssfsi>
     84c:	dc 01       	movw	r26, r24
     84e:	cb 01       	movw	r24, r22
     850:	9c 8f       	std	Y+28, r25	; 0x1c
     852:	8b 8f       	std	Y+27, r24	; 0x1b
     854:	12 c0       	rjmp	.+36     	; 0x87a <get_key_presed+0x270>
     856:	80 e9       	ldi	r24, 0x90	; 144
     858:	91 e0       	ldi	r25, 0x01	; 1
     85a:	9e 8f       	std	Y+30, r25	; 0x1e
     85c:	8d 8f       	std	Y+29, r24	; 0x1d
     85e:	8d 8d       	ldd	r24, Y+29	; 0x1d
     860:	9e 8d       	ldd	r25, Y+30	; 0x1e
     862:	8c 01       	movw	r16, r24
     864:	c8 01       	movw	r24, r16
     866:	01 97       	sbiw	r24, 0x01	; 1
     868:	f1 f7       	brne	.-4      	; 0x866 <get_key_presed+0x25c>
     86a:	8c 01       	movw	r16, r24
     86c:	1e 8f       	std	Y+30, r17	; 0x1e
     86e:	0d 8f       	std	Y+29, r16	; 0x1d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     870:	8b 8d       	ldd	r24, Y+27	; 0x1b
     872:	9c 8d       	ldd	r25, Y+28	; 0x1c
     874:	01 97       	sbiw	r24, 0x01	; 1
     876:	9c 8f       	std	Y+28, r25	; 0x1c
     878:	8b 8f       	std	Y+27, r24	; 0x1b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     87a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     87c:	9c 8d       	ldd	r25, Y+28	; 0x1c
     87e:	00 97       	sbiw	r24, 0x00	; 0
     880:	51 f7       	brne	.-44     	; 0x856 <get_key_presed+0x24c>
     882:	17 c0       	rjmp	.+46     	; 0x8b2 <get_key_presed+0x2a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     884:	6f 89       	ldd	r22, Y+23	; 0x17
     886:	78 8d       	ldd	r23, Y+24	; 0x18
     888:	89 8d       	ldd	r24, Y+25	; 0x19
     88a:	9a 8d       	ldd	r25, Y+26	; 0x1a
     88c:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fixunssfsi>
     890:	dc 01       	movw	r26, r24
     892:	cb 01       	movw	r24, r22
     894:	9c 8f       	std	Y+28, r25	; 0x1c
     896:	8b 8f       	std	Y+27, r24	; 0x1b
     898:	8b 8d       	ldd	r24, Y+27	; 0x1b
     89a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     89c:	98 a3       	std	Y+32, r25	; 0x20
     89e:	8f 8f       	std	Y+31, r24	; 0x1f
     8a0:	8f 8d       	ldd	r24, Y+31	; 0x1f
     8a2:	98 a1       	ldd	r25, Y+32	; 0x20
     8a4:	8c 01       	movw	r16, r24
     8a6:	f8 01       	movw	r30, r16
     8a8:	31 97       	sbiw	r30, 0x01	; 1
     8aa:	f1 f7       	brne	.-4      	; 0x8a8 <get_key_presed+0x29e>
     8ac:	8f 01       	movw	r16, r30
     8ae:	18 a3       	std	Y+32, r17	; 0x20
     8b0:	0f 8f       	std	Y+31, r16	; 0x1f
     8b2:	88 e2       	ldi	r24, 0x28	; 40
     8b4:	90 e0       	ldi	r25, 0x00	; 0
     8b6:	2f ef       	ldi	r18, 0xFF	; 255
     8b8:	fc 01       	movw	r30, r24
     8ba:	20 83       	st	Z, r18
				for(int j=0;j<4;j++)
     8bc:	1b 82       	std	Y+3, r1	; 0x03
     8be:	1a 82       	std	Y+2, r1	; 0x02
     8c0:	3f c0       	rjmp	.+126    	; 0x940 <__stack+0x41>
				{
					if(tmp == (~(1<<i) & ~(1<<j))) return MyKeypad[i-4][j];
     8c2:	8c 81       	ldd	r24, Y+4	; 0x04
     8c4:	28 2f       	mov	r18, r24
     8c6:	30 e0       	ldi	r19, 0x00	; 0
     8c8:	89 81       	ldd	r24, Y+1	; 0x01
     8ca:	48 2f       	mov	r20, r24
     8cc:	50 e0       	ldi	r21, 0x00	; 0
     8ce:	81 e0       	ldi	r24, 0x01	; 1
     8d0:	90 e0       	ldi	r25, 0x00	; 0
     8d2:	bc 01       	movw	r22, r24
     8d4:	02 c0       	rjmp	.+4      	; 0x8da <get_key_presed+0x2d0>
     8d6:	66 0f       	add	r22, r22
     8d8:	77 1f       	adc	r23, r23
     8da:	4a 95       	dec	r20
     8dc:	e2 f7       	brpl	.-8      	; 0x8d6 <get_key_presed+0x2cc>
     8de:	ab 01       	movw	r20, r22
     8e0:	81 e0       	ldi	r24, 0x01	; 1
     8e2:	90 e0       	ldi	r25, 0x00	; 0
     8e4:	0a 80       	ldd	r0, Y+2	; 0x02
     8e6:	02 c0       	rjmp	.+4      	; 0x8ec <get_key_presed+0x2e2>
     8e8:	88 0f       	add	r24, r24
     8ea:	99 1f       	adc	r25, r25
     8ec:	0a 94       	dec	r0
     8ee:	e2 f7       	brpl	.-8      	; 0x8e8 <get_key_presed+0x2de>
     8f0:	84 2b       	or	r24, r20
     8f2:	95 2b       	or	r25, r21
     8f4:	80 95       	com	r24
     8f6:	90 95       	com	r25
     8f8:	28 17       	cp	r18, r24
     8fa:	39 07       	cpc	r19, r25
     8fc:	e1 f4       	brne	.+56     	; 0x936 <__stack+0x37>
     8fe:	89 81       	ldd	r24, Y+1	; 0x01
     900:	88 2f       	mov	r24, r24
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	04 97       	sbiw	r24, 0x04	; 4
     906:	9c 01       	movw	r18, r24
     908:	22 0f       	add	r18, r18
     90a:	33 1f       	adc	r19, r19
     90c:	22 0f       	add	r18, r18
     90e:	33 1f       	adc	r19, r19
     910:	8a 81       	ldd	r24, Y+2	; 0x02
     912:	9b 81       	ldd	r25, Y+3	; 0x03
     914:	82 0f       	add	r24, r18
     916:	93 1f       	adc	r25, r19
     918:	80 50       	subi	r24, 0x00	; 0
     91a:	9f 4f       	sbci	r25, 0xFF	; 255
     91c:	fc 01       	movw	r30, r24
     91e:	80 81       	ld	r24, Z
				}					
			}
	}
}
     920:	a0 96       	adiw	r28, 0x20	; 32
     922:	0f b6       	in	r0, 0x3f	; 63
     924:	f8 94       	cli
     926:	de bf       	out	0x3e, r29	; 62
     928:	0f be       	out	0x3f, r0	; 63
     92a:	cd bf       	out	0x3d, r28	; 61
     92c:	cf 91       	pop	r28
     92e:	df 91       	pop	r29
     930:	1f 91       	pop	r17
     932:	0f 91       	pop	r16
     934:	08 95       	ret
	{
			for (uint8_t i=4,tmp;i<8;i++)
			{
				write_to_calc(keypad_port,~(1<<i));
				read_from_calc(keypad_port,tmp);
				for(int j=0;j<4;j++)
     936:	8a 81       	ldd	r24, Y+2	; 0x02
     938:	9b 81       	ldd	r25, Y+3	; 0x03
     93a:	01 96       	adiw	r24, 0x01	; 1
     93c:	9b 83       	std	Y+3, r25	; 0x03
     93e:	8a 83       	std	Y+2, r24	; 0x02
     940:	8a 81       	ldd	r24, Y+2	; 0x02
     942:	9b 81       	ldd	r25, Y+3	; 0x03
     944:	84 30       	cpi	r24, 0x04	; 4
     946:	91 05       	cpc	r25, r1
     948:	0c f4       	brge	.+2      	; 0x94c <__stack+0x4d>
     94a:	bb cf       	rjmp	.-138    	; 0x8c2 <get_key_presed+0x2b8>
}

char get_key_presed(){
	while (1)
	{
			for (uint8_t i=4,tmp;i<8;i++)
     94c:	89 81       	ldd	r24, Y+1	; 0x01
     94e:	8f 5f       	subi	r24, 0xFF	; 255
     950:	89 83       	std	Y+1, r24	; 0x01
     952:	89 81       	ldd	r24, Y+1	; 0x01
     954:	88 30       	cpi	r24, 0x08	; 8
     956:	08 f4       	brcc	.+2      	; 0x95a <__stack+0x5b>
     958:	67 ce       	rjmp	.-818    	; 0x628 <get_key_presed+0x1e>
				for(int j=0;j<4;j++)
				{
					if(tmp == (~(1<<i) & ~(1<<j))) return MyKeypad[i-4][j];
				}					
			}
	}
     95a:	63 ce       	rjmp	.-826    	; 0x622 <get_key_presed+0x18>

0000095c <Sign_to_Unsign>:
}

int Sign_to_Unsign(char *sign,int Num ,int x){
     95c:	df 93       	push	r29
     95e:	cf 93       	push	r28
     960:	00 d0       	rcall	.+0      	; 0x962 <Sign_to_Unsign+0x6>
     962:	00 d0       	rcall	.+0      	; 0x964 <Sign_to_Unsign+0x8>
     964:	00 d0       	rcall	.+0      	; 0x966 <Sign_to_Unsign+0xa>
     966:	cd b7       	in	r28, 0x3d	; 61
     968:	de b7       	in	r29, 0x3e	; 62
     96a:	9a 83       	std	Y+2, r25	; 0x02
     96c:	89 83       	std	Y+1, r24	; 0x01
     96e:	7c 83       	std	Y+4, r23	; 0x04
     970:	6b 83       	std	Y+3, r22	; 0x03
     972:	5e 83       	std	Y+6, r21	; 0x06
     974:	4d 83       	std	Y+5, r20	; 0x05
		ret+=sign[Num]-'0';
		ret*=10;
		Num++;
	}
	return (ret/10)*mul;*/
}
     976:	26 96       	adiw	r28, 0x06	; 6
     978:	0f b6       	in	r0, 0x3f	; 63
     97a:	f8 94       	cli
     97c:	de bf       	out	0x3e, r29	; 62
     97e:	0f be       	out	0x3f, r0	; 63
     980:	cd bf       	out	0x3d, r28	; 61
     982:	cf 91       	pop	r28
     984:	df 91       	pop	r29
     986:	08 95       	ret

00000988 <res>:
 
int res(int firNum ,int SecNum,char op){
     988:	df 93       	push	r29
     98a:	cf 93       	push	r28
     98c:	00 d0       	rcall	.+0      	; 0x98e <res+0x6>
     98e:	00 d0       	rcall	.+0      	; 0x990 <res+0x8>
     990:	0f 92       	push	r0
     992:	cd b7       	in	r28, 0x3d	; 61
     994:	de b7       	in	r29, 0x3e	; 62
     996:	9a 83       	std	Y+2, r25	; 0x02
     998:	89 83       	std	Y+1, r24	; 0x01
     99a:	7c 83       	std	Y+4, r23	; 0x04
     99c:	6b 83       	std	Y+3, r22	; 0x03
     99e:	4d 83       	std	Y+5, r20	; 0x05
			if(SecNum=0)
			  write_to_LCD(Error);
			else
			  return firNum/SecNum;  
		} */			
}
     9a0:	0f 90       	pop	r0
     9a2:	0f 90       	pop	r0
     9a4:	0f 90       	pop	r0
     9a6:	0f 90       	pop	r0
     9a8:	0f 90       	pop	r0
     9aa:	cf 91       	pop	r28
     9ac:	df 91       	pop	r29
     9ae:	08 95       	ret

000009b0 <operate>:

void operate(){
     9b0:	df 93       	push	r29
     9b2:	cf 93       	push	r28
     9b4:	cd b7       	in	r28, 0x3d	; 61
     9b6:	de b7       	in	r29, 0x3e	; 62
				break;
			}
			if (arr[i]=='=') return ;
		}
	}*/
}
     9b8:	cf 91       	pop	r28
     9ba:	df 91       	pop	r29
     9bc:	08 95       	ret

000009be <to_string>:

void to_string(int in){ 
     9be:	df 93       	push	r29
     9c0:	cf 93       	push	r28
     9c2:	00 d0       	rcall	.+0      	; 0x9c4 <to_string+0x6>
     9c4:	cd b7       	in	r28, 0x3d	; 61
     9c6:	de b7       	in	r29, 0x3e	; 62
     9c8:	9a 83       	std	Y+2, r25	; 0x02
     9ca:	89 83       	std	Y+1, r24	; 0x01
		tarr[ptr++]=(in%10)+'0';
		in/=10;
	}
	if (tmp<0) tarr[ptr++]='-';
	for (int i=0;i<ptr;i++) arr[i]=tarr[ptr-1-i];*/
}
     9cc:	0f 90       	pop	r0
     9ce:	0f 90       	pop	r0
     9d0:	cf 91       	pop	r28
     9d2:	df 91       	pop	r29
     9d4:	08 95       	ret

000009d6 <calculate>:

int calculate(){
     9d6:	df 93       	push	r29
     9d8:	cf 93       	push	r28
     9da:	cd b7       	in	r28, 0x3d	; 61
     9dc:	de b7       	in	r29, 0x3e	; 62
		f=Sign_to_Unsign(arr,0,pos-1);
		s=Sign_to_Unsign(arr,pos+1,sz-2);
		return res(f,s,op);
	}
*/
}
     9de:	cf 91       	pop	r28
     9e0:	df 91       	pop	r29
     9e2:	08 95       	ret

000009e4 <main>:
	write_to_calc(lcd_ctrl_port,1);
	_delay_ms(1000);
}*/

int main(void)
{
     9e4:	0f 93       	push	r16
     9e6:	1f 93       	push	r17
     9e8:	df 93       	push	r29
     9ea:	cf 93       	push	r28
     9ec:	cd b7       	in	r28, 0x3d	; 61
     9ee:	de b7       	in	r29, 0x3e	; 62
     9f0:	2f 97       	sbiw	r28, 0x0f	; 15
     9f2:	0f b6       	in	r0, 0x3f	; 63
     9f4:	f8 94       	cli
     9f6:	de bf       	out	0x3e, r29	; 62
     9f8:	0f be       	out	0x3f, r0	; 63
     9fa:	cd bf       	out	0x3d, r28	; 61
	init_calc();
     9fc:	84 e2       	ldi	r24, 0x24	; 36
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	2f ef       	ldi	r18, 0xFF	; 255
     a02:	fc 01       	movw	r30, r24
     a04:	20 83       	st	Z, r18
     a06:	87 e2       	ldi	r24, 0x27	; 39
     a08:	90 e0       	ldi	r25, 0x00	; 0
     a0a:	2f ef       	ldi	r18, 0xFF	; 255
     a0c:	fc 01       	movw	r30, r24
     a0e:	20 83       	st	Z, r18
     a10:	88 e2       	ldi	r24, 0x28	; 40
     a12:	90 e0       	ldi	r25, 0x00	; 0
     a14:	2f ef       	ldi	r18, 0xFF	; 255
     a16:	fc 01       	movw	r30, r24
     a18:	20 83       	st	Z, r18
     a1a:	8a e2       	ldi	r24, 0x2A	; 42
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	2f ef       	ldi	r18, 0xFF	; 255
     a20:	fc 01       	movw	r30, r24
     a22:	20 83       	st	Z, r18
     a24:	85 e2       	ldi	r24, 0x25	; 37
     a26:	90 e0       	ldi	r25, 0x00	; 0
     a28:	23 e0       	ldi	r18, 0x03	; 3
     a2a:	fc 01       	movw	r30, r24
     a2c:	20 83       	st	Z, r18
     a2e:	8b e2       	ldi	r24, 0x2B	; 43
     a30:	90 e0       	ldi	r25, 0x00	; 0
     a32:	21 e8       	ldi	r18, 0x81	; 129
     a34:	fc 01       	movw	r30, r24
     a36:	20 83       	st	Z, r18
     a38:	88 e2       	ldi	r24, 0x28	; 40
     a3a:	90 e0       	ldi	r25, 0x00	; 0
     a3c:	2d ef       	ldi	r18, 0xFD	; 253
     a3e:	fc 01       	movw	r30, r24
     a40:	20 83       	st	Z, r18
     a42:	80 e0       	ldi	r24, 0x00	; 0
     a44:	90 e0       	ldi	r25, 0x00	; 0
     a46:	a0 e8       	ldi	r26, 0x80	; 128
     a48:	bf e3       	ldi	r27, 0x3F	; 63
     a4a:	8a 83       	std	Y+2, r24	; 0x02
     a4c:	9b 83       	std	Y+3, r25	; 0x03
     a4e:	ac 83       	std	Y+4, r26	; 0x04
     a50:	bd 83       	std	Y+5, r27	; 0x05
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     a52:	6a 81       	ldd	r22, Y+2	; 0x02
     a54:	7b 81       	ldd	r23, Y+3	; 0x03
     a56:	8c 81       	ldd	r24, Y+4	; 0x04
     a58:	9d 81       	ldd	r25, Y+5	; 0x05
     a5a:	20 e0       	ldi	r18, 0x00	; 0
     a5c:	30 e0       	ldi	r19, 0x00	; 0
     a5e:	4a e7       	ldi	r20, 0x7A	; 122
     a60:	55 e4       	ldi	r21, 0x45	; 69
     a62:	0e 94 97 07 	call	0xf2e	; 0xf2e <__mulsf3>
     a66:	dc 01       	movw	r26, r24
     a68:	cb 01       	movw	r24, r22
     a6a:	8e 83       	std	Y+6, r24	; 0x06
     a6c:	9f 83       	std	Y+7, r25	; 0x07
     a6e:	a8 87       	std	Y+8, r26	; 0x08
     a70:	b9 87       	std	Y+9, r27	; 0x09
	if (__tmp < 1.0)
     a72:	11 e0       	ldi	r17, 0x01	; 1
     a74:	6e 81       	ldd	r22, Y+6	; 0x06
     a76:	7f 81       	ldd	r23, Y+7	; 0x07
     a78:	88 85       	ldd	r24, Y+8	; 0x08
     a7a:	99 85       	ldd	r25, Y+9	; 0x09
     a7c:	20 e0       	ldi	r18, 0x00	; 0
     a7e:	30 e0       	ldi	r19, 0x00	; 0
     a80:	40 e8       	ldi	r20, 0x80	; 128
     a82:	5f e3       	ldi	r21, 0x3F	; 63
     a84:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__ltsf2>
     a88:	88 23       	and	r24, r24
     a8a:	0c f0       	brlt	.+2      	; 0xa8e <main+0xaa>
     a8c:	10 e0       	ldi	r17, 0x00	; 0
     a8e:	11 23       	and	r17, r17
     a90:	29 f0       	breq	.+10     	; 0xa9c <main+0xb8>
		__ticks = 1;
     a92:	81 e0       	ldi	r24, 0x01	; 1
     a94:	90 e0       	ldi	r25, 0x00	; 0
     a96:	9b 87       	std	Y+11, r25	; 0x0b
     a98:	8a 87       	std	Y+10, r24	; 0x0a
     a9a:	46 c0       	rjmp	.+140    	; 0xb28 <main+0x144>
	else if (__tmp > 65535)
     a9c:	11 e0       	ldi	r17, 0x01	; 1
     a9e:	6e 81       	ldd	r22, Y+6	; 0x06
     aa0:	7f 81       	ldd	r23, Y+7	; 0x07
     aa2:	88 85       	ldd	r24, Y+8	; 0x08
     aa4:	99 85       	ldd	r25, Y+9	; 0x09
     aa6:	20 e0       	ldi	r18, 0x00	; 0
     aa8:	3f ef       	ldi	r19, 0xFF	; 255
     aaa:	4f e7       	ldi	r20, 0x7F	; 127
     aac:	57 e4       	ldi	r21, 0x47	; 71
     aae:	0e 94 91 08 	call	0x1122	; 0x1122 <__gtsf2>
     ab2:	18 16       	cp	r1, r24
     ab4:	0c f0       	brlt	.+2      	; 0xab8 <main+0xd4>
     ab6:	10 e0       	ldi	r17, 0x00	; 0
     ab8:	11 23       	and	r17, r17
     aba:	61 f1       	breq	.+88     	; 0xb14 <main+0x130>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     abc:	6a 81       	ldd	r22, Y+2	; 0x02
     abe:	7b 81       	ldd	r23, Y+3	; 0x03
     ac0:	8c 81       	ldd	r24, Y+4	; 0x04
     ac2:	9d 81       	ldd	r25, Y+5	; 0x05
     ac4:	20 e0       	ldi	r18, 0x00	; 0
     ac6:	30 e0       	ldi	r19, 0x00	; 0
     ac8:	40 e2       	ldi	r20, 0x20	; 32
     aca:	51 e4       	ldi	r21, 0x41	; 65
     acc:	0e 94 97 07 	call	0xf2e	; 0xf2e <__mulsf3>
     ad0:	dc 01       	movw	r26, r24
     ad2:	cb 01       	movw	r24, r22
     ad4:	bc 01       	movw	r22, r24
     ad6:	cd 01       	movw	r24, r26
     ad8:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fixunssfsi>
     adc:	dc 01       	movw	r26, r24
     ade:	cb 01       	movw	r24, r22
     ae0:	9b 87       	std	Y+11, r25	; 0x0b
     ae2:	8a 87       	std	Y+10, r24	; 0x0a
     ae4:	12 c0       	rjmp	.+36     	; 0xb0a <main+0x126>
     ae6:	80 e9       	ldi	r24, 0x90	; 144
     ae8:	91 e0       	ldi	r25, 0x01	; 1
     aea:	9d 87       	std	Y+13, r25	; 0x0d
     aec:	8c 87       	std	Y+12, r24	; 0x0c
     aee:	8c 85       	ldd	r24, Y+12	; 0x0c
     af0:	9d 85       	ldd	r25, Y+13	; 0x0d
     af2:	8c 01       	movw	r16, r24
     af4:	c8 01       	movw	r24, r16
     af6:	01 97       	sbiw	r24, 0x01	; 1
     af8:	f1 f7       	brne	.-4      	; 0xaf6 <main+0x112>
     afa:	8c 01       	movw	r16, r24
     afc:	1d 87       	std	Y+13, r17	; 0x0d
     afe:	0c 87       	std	Y+12, r16	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b00:	8a 85       	ldd	r24, Y+10	; 0x0a
     b02:	9b 85       	ldd	r25, Y+11	; 0x0b
     b04:	01 97       	sbiw	r24, 0x01	; 1
     b06:	9b 87       	std	Y+11, r25	; 0x0b
     b08:	8a 87       	std	Y+10, r24	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b0a:	8a 85       	ldd	r24, Y+10	; 0x0a
     b0c:	9b 85       	ldd	r25, Y+11	; 0x0b
     b0e:	00 97       	sbiw	r24, 0x00	; 0
     b10:	51 f7       	brne	.-44     	; 0xae6 <main+0x102>
     b12:	17 c0       	rjmp	.+46     	; 0xb42 <main+0x15e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b14:	6e 81       	ldd	r22, Y+6	; 0x06
     b16:	7f 81       	ldd	r23, Y+7	; 0x07
     b18:	88 85       	ldd	r24, Y+8	; 0x08
     b1a:	99 85       	ldd	r25, Y+9	; 0x09
     b1c:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fixunssfsi>
     b20:	dc 01       	movw	r26, r24
     b22:	cb 01       	movw	r24, r22
     b24:	9b 87       	std	Y+11, r25	; 0x0b
     b26:	8a 87       	std	Y+10, r24	; 0x0a
     b28:	8a 85       	ldd	r24, Y+10	; 0x0a
     b2a:	9b 85       	ldd	r25, Y+11	; 0x0b
     b2c:	9f 87       	std	Y+15, r25	; 0x0f
     b2e:	8e 87       	std	Y+14, r24	; 0x0e
     b30:	8e 85       	ldd	r24, Y+14	; 0x0e
     b32:	9f 85       	ldd	r25, Y+15	; 0x0f
     b34:	8c 01       	movw	r16, r24
     b36:	f8 01       	movw	r30, r16
     b38:	31 97       	sbiw	r30, 0x01	; 1
     b3a:	f1 f7       	brne	.-4      	; 0xb38 <main+0x154>
     b3c:	8f 01       	movw	r16, r30
     b3e:	1f 87       	std	Y+15, r17	; 0x0f
     b40:	0e 87       	std	Y+14, r16	; 0x0e
     b42:	88 e2       	ldi	r24, 0x28	; 40
     b44:	90 e0       	ldi	r25, 0x00	; 0
     b46:	2f ef       	ldi	r18, 0xFF	; 255
     b48:	fc 01       	movw	r30, r24
     b4a:	20 83       	st	Z, r18
	INIT_LCD();
     b4c:	0e 94 c6 02 	call	0x58c	; 0x58c <INIT_LCD>
	print_to_LCD("hello");
     b50:	80 e1       	ldi	r24, 0x10	; 16
     b52:	91 e0       	ldi	r25, 0x01	; 1
     b54:	0e 94 e7 02 	call	0x5ce	; 0x5ce <print_to_LCD>
	SEND_TO_LCD(clr,CMD);
     b58:	81 e0       	ldi	r24, 0x01	; 1
     b5a:	60 e0       	ldi	r22, 0x00	; 0
     b5c:	0e 94 4b 00 	call	0x96	; 0x96 <SEND_TO_LCD>
	char ch = get_key_presed();
     b60:	0e 94 05 03 	call	0x60a	; 0x60a <get_key_presed>
     b64:	89 83       	std	Y+1, r24	; 0x01
	write_to_LCD(ch);
     b66:	89 81       	ldd	r24, Y+1	; 0x01
     b68:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <write_to_LCD>
	return 0;
     b6c:	80 e0       	ldi	r24, 0x00	; 0
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	2f 96       	adiw	r28, 0x0f	; 15
     b72:	0f b6       	in	r0, 0x3f	; 63
     b74:	f8 94       	cli
     b76:	de bf       	out	0x3e, r29	; 62
     b78:	0f be       	out	0x3f, r0	; 63
     b7a:	cd bf       	out	0x3d, r28	; 61
     b7c:	cf 91       	pop	r28
     b7e:	df 91       	pop	r29
     b80:	1f 91       	pop	r17
     b82:	0f 91       	pop	r16
     b84:	08 95       	ret

00000b86 <__fixunssfsi>:
     b86:	ef 92       	push	r14
     b88:	ff 92       	push	r15
     b8a:	0f 93       	push	r16
     b8c:	1f 93       	push	r17
     b8e:	7b 01       	movw	r14, r22
     b90:	8c 01       	movw	r16, r24
     b92:	20 e0       	ldi	r18, 0x00	; 0
     b94:	30 e0       	ldi	r19, 0x00	; 0
     b96:	40 e0       	ldi	r20, 0x00	; 0
     b98:	5f e4       	ldi	r21, 0x4F	; 79
     b9a:	0e 94 c1 08 	call	0x1182	; 0x1182 <__gesf2>
     b9e:	87 fd       	sbrc	r24, 7
     ba0:	11 c0       	rjmp	.+34     	; 0xbc4 <__fixunssfsi+0x3e>
     ba2:	c8 01       	movw	r24, r16
     ba4:	b7 01       	movw	r22, r14
     ba6:	20 e0       	ldi	r18, 0x00	; 0
     ba8:	30 e0       	ldi	r19, 0x00	; 0
     baa:	40 e0       	ldi	r20, 0x00	; 0
     bac:	5f e4       	ldi	r21, 0x4F	; 79
     bae:	0e 94 66 07 	call	0xecc	; 0xecc <__subsf3>
     bb2:	0e 94 21 09 	call	0x1242	; 0x1242 <__fixsfsi>
     bb6:	9b 01       	movw	r18, r22
     bb8:	ac 01       	movw	r20, r24
     bba:	20 50       	subi	r18, 0x00	; 0
     bbc:	30 40       	sbci	r19, 0x00	; 0
     bbe:	40 40       	sbci	r20, 0x00	; 0
     bc0:	50 48       	sbci	r21, 0x80	; 128
     bc2:	06 c0       	rjmp	.+12     	; 0xbd0 <__fixunssfsi+0x4a>
     bc4:	c8 01       	movw	r24, r16
     bc6:	b7 01       	movw	r22, r14
     bc8:	0e 94 21 09 	call	0x1242	; 0x1242 <__fixsfsi>
     bcc:	9b 01       	movw	r18, r22
     bce:	ac 01       	movw	r20, r24
     bd0:	b9 01       	movw	r22, r18
     bd2:	ca 01       	movw	r24, r20
     bd4:	1f 91       	pop	r17
     bd6:	0f 91       	pop	r16
     bd8:	ff 90       	pop	r15
     bda:	ef 90       	pop	r14
     bdc:	08 95       	ret

00000bde <_fpadd_parts>:
     bde:	a0 e0       	ldi	r26, 0x00	; 0
     be0:	b0 e0       	ldi	r27, 0x00	; 0
     be2:	e5 ef       	ldi	r30, 0xF5	; 245
     be4:	f5 e0       	ldi	r31, 0x05	; 5
     be6:	0c 94 07 0b 	jmp	0x160e	; 0x160e <__prologue_saves__+0x8>
     bea:	fc 01       	movw	r30, r24
     bec:	ea 01       	movw	r28, r20
     bee:	80 81       	ld	r24, Z
     bf0:	82 30       	cpi	r24, 0x02	; 2
     bf2:	08 f4       	brcc	.+2      	; 0xbf6 <_fpadd_parts+0x18>
     bf4:	38 c1       	rjmp	.+624    	; 0xe66 <_fpadd_parts+0x288>
     bf6:	db 01       	movw	r26, r22
     bf8:	9c 91       	ld	r25, X
     bfa:	92 30       	cpi	r25, 0x02	; 2
     bfc:	08 f4       	brcc	.+2      	; 0xc00 <_fpadd_parts+0x22>
     bfe:	30 c1       	rjmp	.+608    	; 0xe60 <_fpadd_parts+0x282>
     c00:	84 30       	cpi	r24, 0x04	; 4
     c02:	59 f4       	brne	.+22     	; 0xc1a <_fpadd_parts+0x3c>
     c04:	94 30       	cpi	r25, 0x04	; 4
     c06:	09 f0       	breq	.+2      	; 0xc0a <_fpadd_parts+0x2c>
     c08:	2e c1       	rjmp	.+604    	; 0xe66 <_fpadd_parts+0x288>
     c0a:	91 81       	ldd	r25, Z+1	; 0x01
     c0c:	11 96       	adiw	r26, 0x01	; 1
     c0e:	8c 91       	ld	r24, X
     c10:	11 97       	sbiw	r26, 0x01	; 1
     c12:	98 17       	cp	r25, r24
     c14:	09 f0       	breq	.+2      	; 0xc18 <_fpadd_parts+0x3a>
     c16:	21 c1       	rjmp	.+578    	; 0xe5a <_fpadd_parts+0x27c>
     c18:	26 c1       	rjmp	.+588    	; 0xe66 <_fpadd_parts+0x288>
     c1a:	94 30       	cpi	r25, 0x04	; 4
     c1c:	09 f4       	brne	.+2      	; 0xc20 <_fpadd_parts+0x42>
     c1e:	20 c1       	rjmp	.+576    	; 0xe60 <_fpadd_parts+0x282>
     c20:	92 30       	cpi	r25, 0x02	; 2
     c22:	b1 f4       	brne	.+44     	; 0xc50 <_fpadd_parts+0x72>
     c24:	82 30       	cpi	r24, 0x02	; 2
     c26:	09 f0       	breq	.+2      	; 0xc2a <_fpadd_parts+0x4c>
     c28:	1e c1       	rjmp	.+572    	; 0xe66 <_fpadd_parts+0x288>
     c2a:	ca 01       	movw	r24, r20
     c2c:	af 01       	movw	r20, r30
     c2e:	28 e0       	ldi	r18, 0x08	; 8
     c30:	da 01       	movw	r26, r20
     c32:	0d 90       	ld	r0, X+
     c34:	ad 01       	movw	r20, r26
     c36:	dc 01       	movw	r26, r24
     c38:	0d 92       	st	X+, r0
     c3a:	cd 01       	movw	r24, r26
     c3c:	21 50       	subi	r18, 0x01	; 1
     c3e:	c1 f7       	brne	.-16     	; 0xc30 <_fpadd_parts+0x52>
     c40:	db 01       	movw	r26, r22
     c42:	11 96       	adiw	r26, 0x01	; 1
     c44:	8c 91       	ld	r24, X
     c46:	11 97       	sbiw	r26, 0x01	; 1
     c48:	91 81       	ldd	r25, Z+1	; 0x01
     c4a:	89 23       	and	r24, r25
     c4c:	89 83       	std	Y+1, r24	; 0x01
     c4e:	0a c1       	rjmp	.+532    	; 0xe64 <_fpadd_parts+0x286>
     c50:	82 30       	cpi	r24, 0x02	; 2
     c52:	09 f4       	brne	.+2      	; 0xc56 <_fpadd_parts+0x78>
     c54:	05 c1       	rjmp	.+522    	; 0xe60 <_fpadd_parts+0x282>
     c56:	c2 80       	ldd	r12, Z+2	; 0x02
     c58:	d3 80       	ldd	r13, Z+3	; 0x03
     c5a:	db 01       	movw	r26, r22
     c5c:	12 96       	adiw	r26, 0x02	; 2
     c5e:	6d 90       	ld	r6, X+
     c60:	7c 90       	ld	r7, X
     c62:	13 97       	sbiw	r26, 0x03	; 3
     c64:	24 81       	ldd	r18, Z+4	; 0x04
     c66:	35 81       	ldd	r19, Z+5	; 0x05
     c68:	46 81       	ldd	r20, Z+6	; 0x06
     c6a:	57 81       	ldd	r21, Z+7	; 0x07
     c6c:	14 96       	adiw	r26, 0x04	; 4
     c6e:	ed 90       	ld	r14, X+
     c70:	fd 90       	ld	r15, X+
     c72:	0d 91       	ld	r16, X+
     c74:	1c 91       	ld	r17, X
     c76:	17 97       	sbiw	r26, 0x07	; 7
     c78:	c6 01       	movw	r24, r12
     c7a:	86 19       	sub	r24, r6
     c7c:	97 09       	sbc	r25, r7
     c7e:	5c 01       	movw	r10, r24
     c80:	97 ff       	sbrs	r25, 7
     c82:	04 c0       	rjmp	.+8      	; 0xc8c <_fpadd_parts+0xae>
     c84:	aa 24       	eor	r10, r10
     c86:	bb 24       	eor	r11, r11
     c88:	a8 1a       	sub	r10, r24
     c8a:	b9 0a       	sbc	r11, r25
     c8c:	b0 e2       	ldi	r27, 0x20	; 32
     c8e:	ab 16       	cp	r10, r27
     c90:	b1 04       	cpc	r11, r1
     c92:	0c f0       	brlt	.+2      	; 0xc96 <_fpadd_parts+0xb8>
     c94:	61 c0       	rjmp	.+194    	; 0xd58 <_fpadd_parts+0x17a>
     c96:	18 16       	cp	r1, r24
     c98:	19 06       	cpc	r1, r25
     c9a:	6c f5       	brge	.+90     	; 0xcf6 <_fpadd_parts+0x118>
     c9c:	37 01       	movw	r6, r14
     c9e:	48 01       	movw	r8, r16
     ca0:	0a 2c       	mov	r0, r10
     ca2:	04 c0       	rjmp	.+8      	; 0xcac <_fpadd_parts+0xce>
     ca4:	96 94       	lsr	r9
     ca6:	87 94       	ror	r8
     ca8:	77 94       	ror	r7
     caa:	67 94       	ror	r6
     cac:	0a 94       	dec	r0
     cae:	d2 f7       	brpl	.-12     	; 0xca4 <_fpadd_parts+0xc6>
     cb0:	81 e0       	ldi	r24, 0x01	; 1
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	a0 e0       	ldi	r26, 0x00	; 0
     cb6:	b0 e0       	ldi	r27, 0x00	; 0
     cb8:	0a 2c       	mov	r0, r10
     cba:	04 c0       	rjmp	.+8      	; 0xcc4 <_fpadd_parts+0xe6>
     cbc:	88 0f       	add	r24, r24
     cbe:	99 1f       	adc	r25, r25
     cc0:	aa 1f       	adc	r26, r26
     cc2:	bb 1f       	adc	r27, r27
     cc4:	0a 94       	dec	r0
     cc6:	d2 f7       	brpl	.-12     	; 0xcbc <_fpadd_parts+0xde>
     cc8:	01 97       	sbiw	r24, 0x01	; 1
     cca:	a1 09       	sbc	r26, r1
     ccc:	b1 09       	sbc	r27, r1
     cce:	8e 21       	and	r24, r14
     cd0:	9f 21       	and	r25, r15
     cd2:	a0 23       	and	r26, r16
     cd4:	b1 23       	and	r27, r17
     cd6:	ee 24       	eor	r14, r14
     cd8:	ff 24       	eor	r15, r15
     cda:	87 01       	movw	r16, r14
     cdc:	e3 94       	inc	r14
     cde:	00 97       	sbiw	r24, 0x00	; 0
     ce0:	a1 05       	cpc	r26, r1
     ce2:	b1 05       	cpc	r27, r1
     ce4:	19 f4       	brne	.+6      	; 0xcec <_fpadd_parts+0x10e>
     ce6:	ee 24       	eor	r14, r14
     ce8:	ff 24       	eor	r15, r15
     cea:	87 01       	movw	r16, r14
     cec:	e6 28       	or	r14, r6
     cee:	f7 28       	or	r15, r7
     cf0:	08 29       	or	r16, r8
     cf2:	19 29       	or	r17, r9
     cf4:	3c c0       	rjmp	.+120    	; 0xd6e <_fpadd_parts+0x190>
     cf6:	00 97       	sbiw	r24, 0x00	; 0
     cf8:	d1 f1       	breq	.+116    	; 0xd6e <_fpadd_parts+0x190>
     cfa:	ca 0c       	add	r12, r10
     cfc:	db 1c       	adc	r13, r11
     cfe:	39 01       	movw	r6, r18
     d00:	4a 01       	movw	r8, r20
     d02:	0a 2c       	mov	r0, r10
     d04:	04 c0       	rjmp	.+8      	; 0xd0e <_fpadd_parts+0x130>
     d06:	96 94       	lsr	r9
     d08:	87 94       	ror	r8
     d0a:	77 94       	ror	r7
     d0c:	67 94       	ror	r6
     d0e:	0a 94       	dec	r0
     d10:	d2 f7       	brpl	.-12     	; 0xd06 <_fpadd_parts+0x128>
     d12:	81 e0       	ldi	r24, 0x01	; 1
     d14:	90 e0       	ldi	r25, 0x00	; 0
     d16:	a0 e0       	ldi	r26, 0x00	; 0
     d18:	b0 e0       	ldi	r27, 0x00	; 0
     d1a:	0a 2c       	mov	r0, r10
     d1c:	04 c0       	rjmp	.+8      	; 0xd26 <_fpadd_parts+0x148>
     d1e:	88 0f       	add	r24, r24
     d20:	99 1f       	adc	r25, r25
     d22:	aa 1f       	adc	r26, r26
     d24:	bb 1f       	adc	r27, r27
     d26:	0a 94       	dec	r0
     d28:	d2 f7       	brpl	.-12     	; 0xd1e <_fpadd_parts+0x140>
     d2a:	01 97       	sbiw	r24, 0x01	; 1
     d2c:	a1 09       	sbc	r26, r1
     d2e:	b1 09       	sbc	r27, r1
     d30:	82 23       	and	r24, r18
     d32:	93 23       	and	r25, r19
     d34:	a4 23       	and	r26, r20
     d36:	b5 23       	and	r27, r21
     d38:	21 e0       	ldi	r18, 0x01	; 1
     d3a:	30 e0       	ldi	r19, 0x00	; 0
     d3c:	40 e0       	ldi	r20, 0x00	; 0
     d3e:	50 e0       	ldi	r21, 0x00	; 0
     d40:	00 97       	sbiw	r24, 0x00	; 0
     d42:	a1 05       	cpc	r26, r1
     d44:	b1 05       	cpc	r27, r1
     d46:	19 f4       	brne	.+6      	; 0xd4e <_fpadd_parts+0x170>
     d48:	20 e0       	ldi	r18, 0x00	; 0
     d4a:	30 e0       	ldi	r19, 0x00	; 0
     d4c:	a9 01       	movw	r20, r18
     d4e:	26 29       	or	r18, r6
     d50:	37 29       	or	r19, r7
     d52:	48 29       	or	r20, r8
     d54:	59 29       	or	r21, r9
     d56:	0b c0       	rjmp	.+22     	; 0xd6e <_fpadd_parts+0x190>
     d58:	6c 14       	cp	r6, r12
     d5a:	7d 04       	cpc	r7, r13
     d5c:	24 f4       	brge	.+8      	; 0xd66 <_fpadd_parts+0x188>
     d5e:	ee 24       	eor	r14, r14
     d60:	ff 24       	eor	r15, r15
     d62:	87 01       	movw	r16, r14
     d64:	04 c0       	rjmp	.+8      	; 0xd6e <_fpadd_parts+0x190>
     d66:	63 01       	movw	r12, r6
     d68:	20 e0       	ldi	r18, 0x00	; 0
     d6a:	30 e0       	ldi	r19, 0x00	; 0
     d6c:	a9 01       	movw	r20, r18
     d6e:	81 81       	ldd	r24, Z+1	; 0x01
     d70:	fb 01       	movw	r30, r22
     d72:	91 81       	ldd	r25, Z+1	; 0x01
     d74:	89 17       	cp	r24, r25
     d76:	09 f4       	brne	.+2      	; 0xd7a <_fpadd_parts+0x19c>
     d78:	45 c0       	rjmp	.+138    	; 0xe04 <_fpadd_parts+0x226>
     d7a:	88 23       	and	r24, r24
     d7c:	49 f0       	breq	.+18     	; 0xd90 <_fpadd_parts+0x1b2>
     d7e:	d8 01       	movw	r26, r16
     d80:	c7 01       	movw	r24, r14
     d82:	82 1b       	sub	r24, r18
     d84:	93 0b       	sbc	r25, r19
     d86:	a4 0b       	sbc	r26, r20
     d88:	b5 0b       	sbc	r27, r21
     d8a:	9c 01       	movw	r18, r24
     d8c:	ad 01       	movw	r20, r26
     d8e:	04 c0       	rjmp	.+8      	; 0xd98 <_fpadd_parts+0x1ba>
     d90:	2e 19       	sub	r18, r14
     d92:	3f 09       	sbc	r19, r15
     d94:	40 0b       	sbc	r20, r16
     d96:	51 0b       	sbc	r21, r17
     d98:	57 fd       	sbrc	r21, 7
     d9a:	04 c0       	rjmp	.+8      	; 0xda4 <_fpadd_parts+0x1c6>
     d9c:	19 82       	std	Y+1, r1	; 0x01
     d9e:	db 82       	std	Y+3, r13	; 0x03
     da0:	ca 82       	std	Y+2, r12	; 0x02
     da2:	0b c0       	rjmp	.+22     	; 0xdba <_fpadd_parts+0x1dc>
     da4:	81 e0       	ldi	r24, 0x01	; 1
     da6:	89 83       	std	Y+1, r24	; 0x01
     da8:	db 82       	std	Y+3, r13	; 0x03
     daa:	ca 82       	std	Y+2, r12	; 0x02
     dac:	50 95       	com	r21
     dae:	40 95       	com	r20
     db0:	30 95       	com	r19
     db2:	21 95       	neg	r18
     db4:	3f 4f       	sbci	r19, 0xFF	; 255
     db6:	4f 4f       	sbci	r20, 0xFF	; 255
     db8:	5f 4f       	sbci	r21, 0xFF	; 255
     dba:	2c 83       	std	Y+4, r18	; 0x04
     dbc:	3d 83       	std	Y+5, r19	; 0x05
     dbe:	4e 83       	std	Y+6, r20	; 0x06
     dc0:	5f 83       	std	Y+7, r21	; 0x07
     dc2:	0d c0       	rjmp	.+26     	; 0xdde <_fpadd_parts+0x200>
     dc4:	88 0f       	add	r24, r24
     dc6:	99 1f       	adc	r25, r25
     dc8:	aa 1f       	adc	r26, r26
     dca:	bb 1f       	adc	r27, r27
     dcc:	8c 83       	std	Y+4, r24	; 0x04
     dce:	9d 83       	std	Y+5, r25	; 0x05
     dd0:	ae 83       	std	Y+6, r26	; 0x06
     dd2:	bf 83       	std	Y+7, r27	; 0x07
     dd4:	8a 81       	ldd	r24, Y+2	; 0x02
     dd6:	9b 81       	ldd	r25, Y+3	; 0x03
     dd8:	01 97       	sbiw	r24, 0x01	; 1
     dda:	9b 83       	std	Y+3, r25	; 0x03
     ddc:	8a 83       	std	Y+2, r24	; 0x02
     dde:	8c 81       	ldd	r24, Y+4	; 0x04
     de0:	9d 81       	ldd	r25, Y+5	; 0x05
     de2:	ae 81       	ldd	r26, Y+6	; 0x06
     de4:	bf 81       	ldd	r27, Y+7	; 0x07
     de6:	9c 01       	movw	r18, r24
     de8:	ad 01       	movw	r20, r26
     dea:	21 50       	subi	r18, 0x01	; 1
     dec:	30 40       	sbci	r19, 0x00	; 0
     dee:	40 40       	sbci	r20, 0x00	; 0
     df0:	50 40       	sbci	r21, 0x00	; 0
     df2:	2f 3f       	cpi	r18, 0xFF	; 255
     df4:	ef ef       	ldi	r30, 0xFF	; 255
     df6:	3e 07       	cpc	r19, r30
     df8:	ef ef       	ldi	r30, 0xFF	; 255
     dfa:	4e 07       	cpc	r20, r30
     dfc:	ef e3       	ldi	r30, 0x3F	; 63
     dfe:	5e 07       	cpc	r21, r30
     e00:	08 f3       	brcs	.-62     	; 0xdc4 <_fpadd_parts+0x1e6>
     e02:	0b c0       	rjmp	.+22     	; 0xe1a <_fpadd_parts+0x23c>
     e04:	89 83       	std	Y+1, r24	; 0x01
     e06:	db 82       	std	Y+3, r13	; 0x03
     e08:	ca 82       	std	Y+2, r12	; 0x02
     e0a:	2e 0d       	add	r18, r14
     e0c:	3f 1d       	adc	r19, r15
     e0e:	40 1f       	adc	r20, r16
     e10:	51 1f       	adc	r21, r17
     e12:	2c 83       	std	Y+4, r18	; 0x04
     e14:	3d 83       	std	Y+5, r19	; 0x05
     e16:	4e 83       	std	Y+6, r20	; 0x06
     e18:	5f 83       	std	Y+7, r21	; 0x07
     e1a:	83 e0       	ldi	r24, 0x03	; 3
     e1c:	88 83       	st	Y, r24
     e1e:	2c 81       	ldd	r18, Y+4	; 0x04
     e20:	3d 81       	ldd	r19, Y+5	; 0x05
     e22:	4e 81       	ldd	r20, Y+6	; 0x06
     e24:	5f 81       	ldd	r21, Y+7	; 0x07
     e26:	57 ff       	sbrs	r21, 7
     e28:	1d c0       	rjmp	.+58     	; 0xe64 <_fpadd_parts+0x286>
     e2a:	da 01       	movw	r26, r20
     e2c:	c9 01       	movw	r24, r18
     e2e:	81 70       	andi	r24, 0x01	; 1
     e30:	90 70       	andi	r25, 0x00	; 0
     e32:	a0 70       	andi	r26, 0x00	; 0
     e34:	b0 70       	andi	r27, 0x00	; 0
     e36:	56 95       	lsr	r21
     e38:	47 95       	ror	r20
     e3a:	37 95       	ror	r19
     e3c:	27 95       	ror	r18
     e3e:	82 2b       	or	r24, r18
     e40:	93 2b       	or	r25, r19
     e42:	a4 2b       	or	r26, r20
     e44:	b5 2b       	or	r27, r21
     e46:	8c 83       	std	Y+4, r24	; 0x04
     e48:	9d 83       	std	Y+5, r25	; 0x05
     e4a:	ae 83       	std	Y+6, r26	; 0x06
     e4c:	bf 83       	std	Y+7, r27	; 0x07
     e4e:	8a 81       	ldd	r24, Y+2	; 0x02
     e50:	9b 81       	ldd	r25, Y+3	; 0x03
     e52:	01 96       	adiw	r24, 0x01	; 1
     e54:	9b 83       	std	Y+3, r25	; 0x03
     e56:	8a 83       	std	Y+2, r24	; 0x02
     e58:	05 c0       	rjmp	.+10     	; 0xe64 <_fpadd_parts+0x286>
     e5a:	e6 e1       	ldi	r30, 0x16	; 22
     e5c:	f1 e0       	ldi	r31, 0x01	; 1
     e5e:	03 c0       	rjmp	.+6      	; 0xe66 <_fpadd_parts+0x288>
     e60:	fb 01       	movw	r30, r22
     e62:	01 c0       	rjmp	.+2      	; 0xe66 <_fpadd_parts+0x288>
     e64:	fe 01       	movw	r30, r28
     e66:	cf 01       	movw	r24, r30
     e68:	cd b7       	in	r28, 0x3d	; 61
     e6a:	de b7       	in	r29, 0x3e	; 62
     e6c:	ee e0       	ldi	r30, 0x0E	; 14
     e6e:	0c 94 23 0b 	jmp	0x1646	; 0x1646 <__epilogue_restores__+0x8>

00000e72 <__addsf3>:
     e72:	a0 e2       	ldi	r26, 0x20	; 32
     e74:	b0 e0       	ldi	r27, 0x00	; 0
     e76:	ef e3       	ldi	r30, 0x3F	; 63
     e78:	f7 e0       	ldi	r31, 0x07	; 7
     e7a:	0c 94 0f 0b 	jmp	0x161e	; 0x161e <__prologue_saves__+0x18>
     e7e:	69 83       	std	Y+1, r22	; 0x01
     e80:	7a 83       	std	Y+2, r23	; 0x02
     e82:	8b 83       	std	Y+3, r24	; 0x03
     e84:	9c 83       	std	Y+4, r25	; 0x04
     e86:	2d 83       	std	Y+5, r18	; 0x05
     e88:	3e 83       	std	Y+6, r19	; 0x06
     e8a:	4f 83       	std	Y+7, r20	; 0x07
     e8c:	58 87       	std	Y+8, r21	; 0x08
     e8e:	89 e0       	ldi	r24, 0x09	; 9
     e90:	e8 2e       	mov	r14, r24
     e92:	f1 2c       	mov	r15, r1
     e94:	ec 0e       	add	r14, r28
     e96:	fd 1e       	adc	r15, r29
     e98:	ce 01       	movw	r24, r28
     e9a:	01 96       	adiw	r24, 0x01	; 1
     e9c:	b7 01       	movw	r22, r14
     e9e:	0e 94 41 0a 	call	0x1482	; 0x1482 <__unpack_f>
     ea2:	8e 01       	movw	r16, r28
     ea4:	0f 5e       	subi	r16, 0xEF	; 239
     ea6:	1f 4f       	sbci	r17, 0xFF	; 255
     ea8:	ce 01       	movw	r24, r28
     eaa:	05 96       	adiw	r24, 0x05	; 5
     eac:	b8 01       	movw	r22, r16
     eae:	0e 94 41 0a 	call	0x1482	; 0x1482 <__unpack_f>
     eb2:	c7 01       	movw	r24, r14
     eb4:	b8 01       	movw	r22, r16
     eb6:	ae 01       	movw	r20, r28
     eb8:	47 5e       	subi	r20, 0xE7	; 231
     eba:	5f 4f       	sbci	r21, 0xFF	; 255
     ebc:	0e 94 ef 05 	call	0xbde	; 0xbde <_fpadd_parts>
     ec0:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__pack_f>
     ec4:	a0 96       	adiw	r28, 0x20	; 32
     ec6:	e6 e0       	ldi	r30, 0x06	; 6
     ec8:	0c 94 2b 0b 	jmp	0x1656	; 0x1656 <__epilogue_restores__+0x18>

00000ecc <__subsf3>:
     ecc:	a0 e2       	ldi	r26, 0x20	; 32
     ece:	b0 e0       	ldi	r27, 0x00	; 0
     ed0:	ec e6       	ldi	r30, 0x6C	; 108
     ed2:	f7 e0       	ldi	r31, 0x07	; 7
     ed4:	0c 94 0f 0b 	jmp	0x161e	; 0x161e <__prologue_saves__+0x18>
     ed8:	69 83       	std	Y+1, r22	; 0x01
     eda:	7a 83       	std	Y+2, r23	; 0x02
     edc:	8b 83       	std	Y+3, r24	; 0x03
     ede:	9c 83       	std	Y+4, r25	; 0x04
     ee0:	2d 83       	std	Y+5, r18	; 0x05
     ee2:	3e 83       	std	Y+6, r19	; 0x06
     ee4:	4f 83       	std	Y+7, r20	; 0x07
     ee6:	58 87       	std	Y+8, r21	; 0x08
     ee8:	8e 01       	movw	r16, r28
     eea:	07 5f       	subi	r16, 0xF7	; 247
     eec:	1f 4f       	sbci	r17, 0xFF	; 255
     eee:	ce 01       	movw	r24, r28
     ef0:	01 96       	adiw	r24, 0x01	; 1
     ef2:	b8 01       	movw	r22, r16
     ef4:	0e 94 41 0a 	call	0x1482	; 0x1482 <__unpack_f>
     ef8:	91 e1       	ldi	r25, 0x11	; 17
     efa:	e9 2e       	mov	r14, r25
     efc:	f1 2c       	mov	r15, r1
     efe:	ec 0e       	add	r14, r28
     f00:	fd 1e       	adc	r15, r29
     f02:	ce 01       	movw	r24, r28
     f04:	05 96       	adiw	r24, 0x05	; 5
     f06:	b7 01       	movw	r22, r14
     f08:	0e 94 41 0a 	call	0x1482	; 0x1482 <__unpack_f>
     f0c:	8a 89       	ldd	r24, Y+18	; 0x12
     f0e:	91 e0       	ldi	r25, 0x01	; 1
     f10:	89 27       	eor	r24, r25
     f12:	8a 8b       	std	Y+18, r24	; 0x12
     f14:	c8 01       	movw	r24, r16
     f16:	b7 01       	movw	r22, r14
     f18:	ae 01       	movw	r20, r28
     f1a:	47 5e       	subi	r20, 0xE7	; 231
     f1c:	5f 4f       	sbci	r21, 0xFF	; 255
     f1e:	0e 94 ef 05 	call	0xbde	; 0xbde <_fpadd_parts>
     f22:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__pack_f>
     f26:	a0 96       	adiw	r28, 0x20	; 32
     f28:	e6 e0       	ldi	r30, 0x06	; 6
     f2a:	0c 94 2b 0b 	jmp	0x1656	; 0x1656 <__epilogue_restores__+0x18>

00000f2e <__mulsf3>:
     f2e:	a0 e2       	ldi	r26, 0x20	; 32
     f30:	b0 e0       	ldi	r27, 0x00	; 0
     f32:	ed e9       	ldi	r30, 0x9D	; 157
     f34:	f7 e0       	ldi	r31, 0x07	; 7
     f36:	0c 94 03 0b 	jmp	0x1606	; 0x1606 <__prologue_saves__>
     f3a:	69 83       	std	Y+1, r22	; 0x01
     f3c:	7a 83       	std	Y+2, r23	; 0x02
     f3e:	8b 83       	std	Y+3, r24	; 0x03
     f40:	9c 83       	std	Y+4, r25	; 0x04
     f42:	2d 83       	std	Y+5, r18	; 0x05
     f44:	3e 83       	std	Y+6, r19	; 0x06
     f46:	4f 83       	std	Y+7, r20	; 0x07
     f48:	58 87       	std	Y+8, r21	; 0x08
     f4a:	ce 01       	movw	r24, r28
     f4c:	01 96       	adiw	r24, 0x01	; 1
     f4e:	be 01       	movw	r22, r28
     f50:	67 5f       	subi	r22, 0xF7	; 247
     f52:	7f 4f       	sbci	r23, 0xFF	; 255
     f54:	0e 94 41 0a 	call	0x1482	; 0x1482 <__unpack_f>
     f58:	ce 01       	movw	r24, r28
     f5a:	05 96       	adiw	r24, 0x05	; 5
     f5c:	be 01       	movw	r22, r28
     f5e:	6f 5e       	subi	r22, 0xEF	; 239
     f60:	7f 4f       	sbci	r23, 0xFF	; 255
     f62:	0e 94 41 0a 	call	0x1482	; 0x1482 <__unpack_f>
     f66:	99 85       	ldd	r25, Y+9	; 0x09
     f68:	92 30       	cpi	r25, 0x02	; 2
     f6a:	78 f0       	brcs	.+30     	; 0xf8a <__mulsf3+0x5c>
     f6c:	89 89       	ldd	r24, Y+17	; 0x11
     f6e:	82 30       	cpi	r24, 0x02	; 2
     f70:	c0 f0       	brcs	.+48     	; 0xfa2 <__mulsf3+0x74>
     f72:	94 30       	cpi	r25, 0x04	; 4
     f74:	19 f4       	brne	.+6      	; 0xf7c <__mulsf3+0x4e>
     f76:	82 30       	cpi	r24, 0x02	; 2
     f78:	41 f4       	brne	.+16     	; 0xf8a <__mulsf3+0x5c>
     f7a:	cb c0       	rjmp	.+406    	; 0x1112 <__mulsf3+0x1e4>
     f7c:	84 30       	cpi	r24, 0x04	; 4
     f7e:	19 f4       	brne	.+6      	; 0xf86 <__mulsf3+0x58>
     f80:	92 30       	cpi	r25, 0x02	; 2
     f82:	79 f4       	brne	.+30     	; 0xfa2 <__mulsf3+0x74>
     f84:	c6 c0       	rjmp	.+396    	; 0x1112 <__mulsf3+0x1e4>
     f86:	92 30       	cpi	r25, 0x02	; 2
     f88:	51 f4       	brne	.+20     	; 0xf9e <__mulsf3+0x70>
     f8a:	81 e0       	ldi	r24, 0x01	; 1
     f8c:	2a 85       	ldd	r18, Y+10	; 0x0a
     f8e:	9a 89       	ldd	r25, Y+18	; 0x12
     f90:	29 17       	cp	r18, r25
     f92:	09 f4       	brne	.+2      	; 0xf96 <__mulsf3+0x68>
     f94:	80 e0       	ldi	r24, 0x00	; 0
     f96:	8a 87       	std	Y+10, r24	; 0x0a
     f98:	ce 01       	movw	r24, r28
     f9a:	09 96       	adiw	r24, 0x09	; 9
     f9c:	bc c0       	rjmp	.+376    	; 0x1116 <__mulsf3+0x1e8>
     f9e:	82 30       	cpi	r24, 0x02	; 2
     fa0:	51 f4       	brne	.+20     	; 0xfb6 <__mulsf3+0x88>
     fa2:	81 e0       	ldi	r24, 0x01	; 1
     fa4:	2a 85       	ldd	r18, Y+10	; 0x0a
     fa6:	9a 89       	ldd	r25, Y+18	; 0x12
     fa8:	29 17       	cp	r18, r25
     faa:	09 f4       	brne	.+2      	; 0xfae <__mulsf3+0x80>
     fac:	80 e0       	ldi	r24, 0x00	; 0
     fae:	8a 8b       	std	Y+18, r24	; 0x12
     fb0:	ce 01       	movw	r24, r28
     fb2:	41 96       	adiw	r24, 0x11	; 17
     fb4:	b0 c0       	rjmp	.+352    	; 0x1116 <__mulsf3+0x1e8>
     fb6:	6d 84       	ldd	r6, Y+13	; 0x0d
     fb8:	7e 84       	ldd	r7, Y+14	; 0x0e
     fba:	8f 84       	ldd	r8, Y+15	; 0x0f
     fbc:	98 88       	ldd	r9, Y+16	; 0x10
     fbe:	ed 88       	ldd	r14, Y+21	; 0x15
     fc0:	fe 88       	ldd	r15, Y+22	; 0x16
     fc2:	0f 89       	ldd	r16, Y+23	; 0x17
     fc4:	18 8d       	ldd	r17, Y+24	; 0x18
     fc6:	e0 e2       	ldi	r30, 0x20	; 32
     fc8:	f0 e0       	ldi	r31, 0x00	; 0
     fca:	80 e0       	ldi	r24, 0x00	; 0
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	dc 01       	movw	r26, r24
     fd0:	aa 24       	eor	r10, r10
     fd2:	bb 24       	eor	r11, r11
     fd4:	65 01       	movw	r12, r10
     fd6:	20 e0       	ldi	r18, 0x00	; 0
     fd8:	30 e0       	ldi	r19, 0x00	; 0
     fda:	a9 01       	movw	r20, r18
     fdc:	b3 01       	movw	r22, r6
     fde:	61 70       	andi	r22, 0x01	; 1
     fe0:	70 70       	andi	r23, 0x00	; 0
     fe2:	61 15       	cp	r22, r1
     fe4:	71 05       	cpc	r23, r1
     fe6:	d1 f0       	breq	.+52     	; 0x101c <__mulsf3+0xee>
     fe8:	2e 0d       	add	r18, r14
     fea:	3f 1d       	adc	r19, r15
     fec:	40 1f       	adc	r20, r16
     fee:	51 1f       	adc	r21, r17
     ff0:	15 01       	movw	r2, r10
     ff2:	26 01       	movw	r4, r12
     ff4:	28 0e       	add	r2, r24
     ff6:	39 1e       	adc	r3, r25
     ff8:	4a 1e       	adc	r4, r26
     ffa:	5b 1e       	adc	r5, r27
     ffc:	81 e0       	ldi	r24, 0x01	; 1
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	a0 e0       	ldi	r26, 0x00	; 0
    1002:	b0 e0       	ldi	r27, 0x00	; 0
    1004:	2e 15       	cp	r18, r14
    1006:	3f 05       	cpc	r19, r15
    1008:	40 07       	cpc	r20, r16
    100a:	51 07       	cpc	r21, r17
    100c:	18 f0       	brcs	.+6      	; 0x1014 <__mulsf3+0xe6>
    100e:	80 e0       	ldi	r24, 0x00	; 0
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	dc 01       	movw	r26, r24
    1014:	82 0d       	add	r24, r2
    1016:	93 1d       	adc	r25, r3
    1018:	a4 1d       	adc	r26, r4
    101a:	b5 1d       	adc	r27, r5
    101c:	aa 0c       	add	r10, r10
    101e:	bb 1c       	adc	r11, r11
    1020:	cc 1c       	adc	r12, r12
    1022:	dd 1c       	adc	r13, r13
    1024:	17 ff       	sbrs	r17, 7
    1026:	09 c0       	rjmp	.+18     	; 0x103a <__mulsf3+0x10c>
    1028:	61 e0       	ldi	r22, 0x01	; 1
    102a:	26 2e       	mov	r2, r22
    102c:	31 2c       	mov	r3, r1
    102e:	41 2c       	mov	r4, r1
    1030:	51 2c       	mov	r5, r1
    1032:	a2 28       	or	r10, r2
    1034:	b3 28       	or	r11, r3
    1036:	c4 28       	or	r12, r4
    1038:	d5 28       	or	r13, r5
    103a:	31 97       	sbiw	r30, 0x01	; 1
    103c:	49 f0       	breq	.+18     	; 0x1050 <__mulsf3+0x122>
    103e:	ee 0c       	add	r14, r14
    1040:	ff 1c       	adc	r15, r15
    1042:	00 1f       	adc	r16, r16
    1044:	11 1f       	adc	r17, r17
    1046:	96 94       	lsr	r9
    1048:	87 94       	ror	r8
    104a:	77 94       	ror	r7
    104c:	67 94       	ror	r6
    104e:	c6 cf       	rjmp	.-116    	; 0xfdc <__mulsf3+0xae>
    1050:	6b 89       	ldd	r22, Y+19	; 0x13
    1052:	7c 89       	ldd	r23, Y+20	; 0x14
    1054:	eb 85       	ldd	r30, Y+11	; 0x0b
    1056:	fc 85       	ldd	r31, Y+12	; 0x0c
    1058:	6e 0f       	add	r22, r30
    105a:	7f 1f       	adc	r23, r31
    105c:	6e 5f       	subi	r22, 0xFE	; 254
    105e:	7f 4f       	sbci	r23, 0xFF	; 255
    1060:	7c 8f       	std	Y+28, r23	; 0x1c
    1062:	6b 8f       	std	Y+27, r22	; 0x1b
    1064:	61 e0       	ldi	r22, 0x01	; 1
    1066:	ea 85       	ldd	r30, Y+10	; 0x0a
    1068:	7a 89       	ldd	r23, Y+18	; 0x12
    106a:	e7 17       	cp	r30, r23
    106c:	09 f4       	brne	.+2      	; 0x1070 <__mulsf3+0x142>
    106e:	60 e0       	ldi	r22, 0x00	; 0
    1070:	6a 8f       	std	Y+26, r22	; 0x1a
    1072:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1074:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1076:	10 c0       	rjmp	.+32     	; 0x1098 <__mulsf3+0x16a>
    1078:	fc 01       	movw	r30, r24
    107a:	e1 70       	andi	r30, 0x01	; 1
    107c:	f0 70       	andi	r31, 0x00	; 0
    107e:	30 97       	sbiw	r30, 0x00	; 0
    1080:	29 f0       	breq	.+10     	; 0x108c <__mulsf3+0x15e>
    1082:	56 95       	lsr	r21
    1084:	47 95       	ror	r20
    1086:	37 95       	ror	r19
    1088:	27 95       	ror	r18
    108a:	50 68       	ori	r21, 0x80	; 128
    108c:	b6 95       	lsr	r27
    108e:	a7 95       	ror	r26
    1090:	97 95       	ror	r25
    1092:	87 95       	ror	r24
    1094:	6f 5f       	subi	r22, 0xFF	; 255
    1096:	7f 4f       	sbci	r23, 0xFF	; 255
    1098:	b7 fd       	sbrc	r27, 7
    109a:	ee cf       	rjmp	.-36     	; 0x1078 <__mulsf3+0x14a>
    109c:	0c c0       	rjmp	.+24     	; 0x10b6 <__mulsf3+0x188>
    109e:	88 0f       	add	r24, r24
    10a0:	99 1f       	adc	r25, r25
    10a2:	aa 1f       	adc	r26, r26
    10a4:	bb 1f       	adc	r27, r27
    10a6:	57 fd       	sbrc	r21, 7
    10a8:	81 60       	ori	r24, 0x01	; 1
    10aa:	22 0f       	add	r18, r18
    10ac:	33 1f       	adc	r19, r19
    10ae:	44 1f       	adc	r20, r20
    10b0:	55 1f       	adc	r21, r21
    10b2:	61 50       	subi	r22, 0x01	; 1
    10b4:	70 40       	sbci	r23, 0x00	; 0
    10b6:	80 30       	cpi	r24, 0x00	; 0
    10b8:	e0 e0       	ldi	r30, 0x00	; 0
    10ba:	9e 07       	cpc	r25, r30
    10bc:	e0 e0       	ldi	r30, 0x00	; 0
    10be:	ae 07       	cpc	r26, r30
    10c0:	e0 e4       	ldi	r30, 0x40	; 64
    10c2:	be 07       	cpc	r27, r30
    10c4:	60 f3       	brcs	.-40     	; 0x109e <__mulsf3+0x170>
    10c6:	6b 8f       	std	Y+27, r22	; 0x1b
    10c8:	7c 8f       	std	Y+28, r23	; 0x1c
    10ca:	6f e7       	ldi	r22, 0x7F	; 127
    10cc:	e6 2e       	mov	r14, r22
    10ce:	f1 2c       	mov	r15, r1
    10d0:	01 2d       	mov	r16, r1
    10d2:	11 2d       	mov	r17, r1
    10d4:	e8 22       	and	r14, r24
    10d6:	f9 22       	and	r15, r25
    10d8:	0a 23       	and	r16, r26
    10da:	1b 23       	and	r17, r27
    10dc:	60 e4       	ldi	r22, 0x40	; 64
    10de:	e6 16       	cp	r14, r22
    10e0:	f1 04       	cpc	r15, r1
    10e2:	01 05       	cpc	r16, r1
    10e4:	11 05       	cpc	r17, r1
    10e6:	61 f4       	brne	.+24     	; 0x1100 <__mulsf3+0x1d2>
    10e8:	87 fd       	sbrc	r24, 7
    10ea:	0a c0       	rjmp	.+20     	; 0x1100 <__mulsf3+0x1d2>
    10ec:	21 15       	cp	r18, r1
    10ee:	31 05       	cpc	r19, r1
    10f0:	41 05       	cpc	r20, r1
    10f2:	51 05       	cpc	r21, r1
    10f4:	29 f0       	breq	.+10     	; 0x1100 <__mulsf3+0x1d2>
    10f6:	80 5c       	subi	r24, 0xC0	; 192
    10f8:	9f 4f       	sbci	r25, 0xFF	; 255
    10fa:	af 4f       	sbci	r26, 0xFF	; 255
    10fc:	bf 4f       	sbci	r27, 0xFF	; 255
    10fe:	80 78       	andi	r24, 0x80	; 128
    1100:	8d 8f       	std	Y+29, r24	; 0x1d
    1102:	9e 8f       	std	Y+30, r25	; 0x1e
    1104:	af 8f       	std	Y+31, r26	; 0x1f
    1106:	b8 a3       	std	Y+32, r27	; 0x20
    1108:	83 e0       	ldi	r24, 0x03	; 3
    110a:	89 8f       	std	Y+25, r24	; 0x19
    110c:	ce 01       	movw	r24, r28
    110e:	49 96       	adiw	r24, 0x19	; 25
    1110:	02 c0       	rjmp	.+4      	; 0x1116 <__mulsf3+0x1e8>
    1112:	86 e1       	ldi	r24, 0x16	; 22
    1114:	91 e0       	ldi	r25, 0x01	; 1
    1116:	0e 94 73 09 	call	0x12e6	; 0x12e6 <__pack_f>
    111a:	a0 96       	adiw	r28, 0x20	; 32
    111c:	e2 e1       	ldi	r30, 0x12	; 18
    111e:	0c 94 1f 0b 	jmp	0x163e	; 0x163e <__epilogue_restores__>

00001122 <__gtsf2>:
    1122:	a8 e1       	ldi	r26, 0x18	; 24
    1124:	b0 e0       	ldi	r27, 0x00	; 0
    1126:	e7 e9       	ldi	r30, 0x97	; 151
    1128:	f8 e0       	ldi	r31, 0x08	; 8
    112a:	0c 94 0f 0b 	jmp	0x161e	; 0x161e <__prologue_saves__+0x18>
    112e:	69 83       	std	Y+1, r22	; 0x01
    1130:	7a 83       	std	Y+2, r23	; 0x02
    1132:	8b 83       	std	Y+3, r24	; 0x03
    1134:	9c 83       	std	Y+4, r25	; 0x04
    1136:	2d 83       	std	Y+5, r18	; 0x05
    1138:	3e 83       	std	Y+6, r19	; 0x06
    113a:	4f 83       	std	Y+7, r20	; 0x07
    113c:	58 87       	std	Y+8, r21	; 0x08
    113e:	8e 01       	movw	r16, r28
    1140:	07 5f       	subi	r16, 0xF7	; 247
    1142:	1f 4f       	sbci	r17, 0xFF	; 255
    1144:	ce 01       	movw	r24, r28
    1146:	01 96       	adiw	r24, 0x01	; 1
    1148:	b8 01       	movw	r22, r16
    114a:	0e 94 41 0a 	call	0x1482	; 0x1482 <__unpack_f>
    114e:	81 e1       	ldi	r24, 0x11	; 17
    1150:	e8 2e       	mov	r14, r24
    1152:	f1 2c       	mov	r15, r1
    1154:	ec 0e       	add	r14, r28
    1156:	fd 1e       	adc	r15, r29
    1158:	ce 01       	movw	r24, r28
    115a:	05 96       	adiw	r24, 0x05	; 5
    115c:	b7 01       	movw	r22, r14
    115e:	0e 94 41 0a 	call	0x1482	; 0x1482 <__unpack_f>
    1162:	89 85       	ldd	r24, Y+9	; 0x09
    1164:	82 30       	cpi	r24, 0x02	; 2
    1166:	40 f0       	brcs	.+16     	; 0x1178 <__gtsf2+0x56>
    1168:	89 89       	ldd	r24, Y+17	; 0x11
    116a:	82 30       	cpi	r24, 0x02	; 2
    116c:	28 f0       	brcs	.+10     	; 0x1178 <__gtsf2+0x56>
    116e:	c8 01       	movw	r24, r16
    1170:	b7 01       	movw	r22, r14
    1172:	0e 94 aa 0a 	call	0x1554	; 0x1554 <__fpcmp_parts_f>
    1176:	01 c0       	rjmp	.+2      	; 0x117a <__gtsf2+0x58>
    1178:	8f ef       	ldi	r24, 0xFF	; 255
    117a:	68 96       	adiw	r28, 0x18	; 24
    117c:	e6 e0       	ldi	r30, 0x06	; 6
    117e:	0c 94 2b 0b 	jmp	0x1656	; 0x1656 <__epilogue_restores__+0x18>

00001182 <__gesf2>:
    1182:	a8 e1       	ldi	r26, 0x18	; 24
    1184:	b0 e0       	ldi	r27, 0x00	; 0
    1186:	e7 ec       	ldi	r30, 0xC7	; 199
    1188:	f8 e0       	ldi	r31, 0x08	; 8
    118a:	0c 94 0f 0b 	jmp	0x161e	; 0x161e <__prologue_saves__+0x18>
    118e:	69 83       	std	Y+1, r22	; 0x01
    1190:	7a 83       	std	Y+2, r23	; 0x02
    1192:	8b 83       	std	Y+3, r24	; 0x03
    1194:	9c 83       	std	Y+4, r25	; 0x04
    1196:	2d 83       	std	Y+5, r18	; 0x05
    1198:	3e 83       	std	Y+6, r19	; 0x06
    119a:	4f 83       	std	Y+7, r20	; 0x07
    119c:	58 87       	std	Y+8, r21	; 0x08
    119e:	8e 01       	movw	r16, r28
    11a0:	07 5f       	subi	r16, 0xF7	; 247
    11a2:	1f 4f       	sbci	r17, 0xFF	; 255
    11a4:	ce 01       	movw	r24, r28
    11a6:	01 96       	adiw	r24, 0x01	; 1
    11a8:	b8 01       	movw	r22, r16
    11aa:	0e 94 41 0a 	call	0x1482	; 0x1482 <__unpack_f>
    11ae:	81 e1       	ldi	r24, 0x11	; 17
    11b0:	e8 2e       	mov	r14, r24
    11b2:	f1 2c       	mov	r15, r1
    11b4:	ec 0e       	add	r14, r28
    11b6:	fd 1e       	adc	r15, r29
    11b8:	ce 01       	movw	r24, r28
    11ba:	05 96       	adiw	r24, 0x05	; 5
    11bc:	b7 01       	movw	r22, r14
    11be:	0e 94 41 0a 	call	0x1482	; 0x1482 <__unpack_f>
    11c2:	89 85       	ldd	r24, Y+9	; 0x09
    11c4:	82 30       	cpi	r24, 0x02	; 2
    11c6:	40 f0       	brcs	.+16     	; 0x11d8 <__gesf2+0x56>
    11c8:	89 89       	ldd	r24, Y+17	; 0x11
    11ca:	82 30       	cpi	r24, 0x02	; 2
    11cc:	28 f0       	brcs	.+10     	; 0x11d8 <__gesf2+0x56>
    11ce:	c8 01       	movw	r24, r16
    11d0:	b7 01       	movw	r22, r14
    11d2:	0e 94 aa 0a 	call	0x1554	; 0x1554 <__fpcmp_parts_f>
    11d6:	01 c0       	rjmp	.+2      	; 0x11da <__gesf2+0x58>
    11d8:	8f ef       	ldi	r24, 0xFF	; 255
    11da:	68 96       	adiw	r28, 0x18	; 24
    11dc:	e6 e0       	ldi	r30, 0x06	; 6
    11de:	0c 94 2b 0b 	jmp	0x1656	; 0x1656 <__epilogue_restores__+0x18>

000011e2 <__ltsf2>:
    11e2:	a8 e1       	ldi	r26, 0x18	; 24
    11e4:	b0 e0       	ldi	r27, 0x00	; 0
    11e6:	e7 ef       	ldi	r30, 0xF7	; 247
    11e8:	f8 e0       	ldi	r31, 0x08	; 8
    11ea:	0c 94 0f 0b 	jmp	0x161e	; 0x161e <__prologue_saves__+0x18>
    11ee:	69 83       	std	Y+1, r22	; 0x01
    11f0:	7a 83       	std	Y+2, r23	; 0x02
    11f2:	8b 83       	std	Y+3, r24	; 0x03
    11f4:	9c 83       	std	Y+4, r25	; 0x04
    11f6:	2d 83       	std	Y+5, r18	; 0x05
    11f8:	3e 83       	std	Y+6, r19	; 0x06
    11fa:	4f 83       	std	Y+7, r20	; 0x07
    11fc:	58 87       	std	Y+8, r21	; 0x08
    11fe:	8e 01       	movw	r16, r28
    1200:	07 5f       	subi	r16, 0xF7	; 247
    1202:	1f 4f       	sbci	r17, 0xFF	; 255
    1204:	ce 01       	movw	r24, r28
    1206:	01 96       	adiw	r24, 0x01	; 1
    1208:	b8 01       	movw	r22, r16
    120a:	0e 94 41 0a 	call	0x1482	; 0x1482 <__unpack_f>
    120e:	81 e1       	ldi	r24, 0x11	; 17
    1210:	e8 2e       	mov	r14, r24
    1212:	f1 2c       	mov	r15, r1
    1214:	ec 0e       	add	r14, r28
    1216:	fd 1e       	adc	r15, r29
    1218:	ce 01       	movw	r24, r28
    121a:	05 96       	adiw	r24, 0x05	; 5
    121c:	b7 01       	movw	r22, r14
    121e:	0e 94 41 0a 	call	0x1482	; 0x1482 <__unpack_f>
    1222:	89 85       	ldd	r24, Y+9	; 0x09
    1224:	82 30       	cpi	r24, 0x02	; 2
    1226:	40 f0       	brcs	.+16     	; 0x1238 <__ltsf2+0x56>
    1228:	89 89       	ldd	r24, Y+17	; 0x11
    122a:	82 30       	cpi	r24, 0x02	; 2
    122c:	28 f0       	brcs	.+10     	; 0x1238 <__ltsf2+0x56>
    122e:	c8 01       	movw	r24, r16
    1230:	b7 01       	movw	r22, r14
    1232:	0e 94 aa 0a 	call	0x1554	; 0x1554 <__fpcmp_parts_f>
    1236:	01 c0       	rjmp	.+2      	; 0x123a <__ltsf2+0x58>
    1238:	81 e0       	ldi	r24, 0x01	; 1
    123a:	68 96       	adiw	r28, 0x18	; 24
    123c:	e6 e0       	ldi	r30, 0x06	; 6
    123e:	0c 94 2b 0b 	jmp	0x1656	; 0x1656 <__epilogue_restores__+0x18>

00001242 <__fixsfsi>:
    1242:	ac e0       	ldi	r26, 0x0C	; 12
    1244:	b0 e0       	ldi	r27, 0x00	; 0
    1246:	e7 e2       	ldi	r30, 0x27	; 39
    1248:	f9 e0       	ldi	r31, 0x09	; 9
    124a:	0c 94 13 0b 	jmp	0x1626	; 0x1626 <__prologue_saves__+0x20>
    124e:	69 83       	std	Y+1, r22	; 0x01
    1250:	7a 83       	std	Y+2, r23	; 0x02
    1252:	8b 83       	std	Y+3, r24	; 0x03
    1254:	9c 83       	std	Y+4, r25	; 0x04
    1256:	ce 01       	movw	r24, r28
    1258:	01 96       	adiw	r24, 0x01	; 1
    125a:	be 01       	movw	r22, r28
    125c:	6b 5f       	subi	r22, 0xFB	; 251
    125e:	7f 4f       	sbci	r23, 0xFF	; 255
    1260:	0e 94 41 0a 	call	0x1482	; 0x1482 <__unpack_f>
    1264:	8d 81       	ldd	r24, Y+5	; 0x05
    1266:	82 30       	cpi	r24, 0x02	; 2
    1268:	81 f1       	breq	.+96     	; 0x12ca <__fixsfsi+0x88>
    126a:	82 30       	cpi	r24, 0x02	; 2
    126c:	70 f1       	brcs	.+92     	; 0x12ca <__fixsfsi+0x88>
    126e:	84 30       	cpi	r24, 0x04	; 4
    1270:	21 f4       	brne	.+8      	; 0x127a <__fixsfsi+0x38>
    1272:	8e 81       	ldd	r24, Y+6	; 0x06
    1274:	88 23       	and	r24, r24
    1276:	69 f1       	breq	.+90     	; 0x12d2 <__fixsfsi+0x90>
    1278:	0a c0       	rjmp	.+20     	; 0x128e <__fixsfsi+0x4c>
    127a:	2f 81       	ldd	r18, Y+7	; 0x07
    127c:	38 85       	ldd	r19, Y+8	; 0x08
    127e:	37 fd       	sbrc	r19, 7
    1280:	24 c0       	rjmp	.+72     	; 0x12ca <__fixsfsi+0x88>
    1282:	6e 81       	ldd	r22, Y+6	; 0x06
    1284:	2f 31       	cpi	r18, 0x1F	; 31
    1286:	31 05       	cpc	r19, r1
    1288:	3c f0       	brlt	.+14     	; 0x1298 <__fixsfsi+0x56>
    128a:	66 23       	and	r22, r22
    128c:	11 f1       	breq	.+68     	; 0x12d2 <__fixsfsi+0x90>
    128e:	20 e0       	ldi	r18, 0x00	; 0
    1290:	30 e0       	ldi	r19, 0x00	; 0
    1292:	40 e0       	ldi	r20, 0x00	; 0
    1294:	50 e8       	ldi	r21, 0x80	; 128
    1296:	21 c0       	rjmp	.+66     	; 0x12da <__fixsfsi+0x98>
    1298:	8e e1       	ldi	r24, 0x1E	; 30
    129a:	90 e0       	ldi	r25, 0x00	; 0
    129c:	82 1b       	sub	r24, r18
    129e:	93 0b       	sbc	r25, r19
    12a0:	29 85       	ldd	r18, Y+9	; 0x09
    12a2:	3a 85       	ldd	r19, Y+10	; 0x0a
    12a4:	4b 85       	ldd	r20, Y+11	; 0x0b
    12a6:	5c 85       	ldd	r21, Y+12	; 0x0c
    12a8:	04 c0       	rjmp	.+8      	; 0x12b2 <__fixsfsi+0x70>
    12aa:	56 95       	lsr	r21
    12ac:	47 95       	ror	r20
    12ae:	37 95       	ror	r19
    12b0:	27 95       	ror	r18
    12b2:	8a 95       	dec	r24
    12b4:	d2 f7       	brpl	.-12     	; 0x12aa <__fixsfsi+0x68>
    12b6:	66 23       	and	r22, r22
    12b8:	81 f0       	breq	.+32     	; 0x12da <__fixsfsi+0x98>
    12ba:	50 95       	com	r21
    12bc:	40 95       	com	r20
    12be:	30 95       	com	r19
    12c0:	21 95       	neg	r18
    12c2:	3f 4f       	sbci	r19, 0xFF	; 255
    12c4:	4f 4f       	sbci	r20, 0xFF	; 255
    12c6:	5f 4f       	sbci	r21, 0xFF	; 255
    12c8:	08 c0       	rjmp	.+16     	; 0x12da <__fixsfsi+0x98>
    12ca:	20 e0       	ldi	r18, 0x00	; 0
    12cc:	30 e0       	ldi	r19, 0x00	; 0
    12ce:	a9 01       	movw	r20, r18
    12d0:	04 c0       	rjmp	.+8      	; 0x12da <__fixsfsi+0x98>
    12d2:	2f ef       	ldi	r18, 0xFF	; 255
    12d4:	3f ef       	ldi	r19, 0xFF	; 255
    12d6:	4f ef       	ldi	r20, 0xFF	; 255
    12d8:	5f e7       	ldi	r21, 0x7F	; 127
    12da:	b9 01       	movw	r22, r18
    12dc:	ca 01       	movw	r24, r20
    12de:	2c 96       	adiw	r28, 0x0c	; 12
    12e0:	e2 e0       	ldi	r30, 0x02	; 2
    12e2:	0c 94 2f 0b 	jmp	0x165e	; 0x165e <__epilogue_restores__+0x20>

000012e6 <__pack_f>:
    12e6:	ef 92       	push	r14
    12e8:	ff 92       	push	r15
    12ea:	0f 93       	push	r16
    12ec:	1f 93       	push	r17
    12ee:	cf 93       	push	r28
    12f0:	df 93       	push	r29
    12f2:	fc 01       	movw	r30, r24
    12f4:	24 81       	ldd	r18, Z+4	; 0x04
    12f6:	35 81       	ldd	r19, Z+5	; 0x05
    12f8:	46 81       	ldd	r20, Z+6	; 0x06
    12fa:	57 81       	ldd	r21, Z+7	; 0x07
    12fc:	61 81       	ldd	r22, Z+1	; 0x01
    12fe:	80 81       	ld	r24, Z
    1300:	82 30       	cpi	r24, 0x02	; 2
    1302:	20 f4       	brcc	.+8      	; 0x130c <__pack_f+0x26>
    1304:	40 61       	ori	r20, 0x10	; 16
    1306:	ef ef       	ldi	r30, 0xFF	; 255
    1308:	f0 e0       	ldi	r31, 0x00	; 0
    130a:	a3 c0       	rjmp	.+326    	; 0x1452 <__pack_f+0x16c>
    130c:	84 30       	cpi	r24, 0x04	; 4
    130e:	09 f4       	brne	.+2      	; 0x1312 <__pack_f+0x2c>
    1310:	9b c0       	rjmp	.+310    	; 0x1448 <__pack_f+0x162>
    1312:	82 30       	cpi	r24, 0x02	; 2
    1314:	09 f4       	brne	.+2      	; 0x1318 <__pack_f+0x32>
    1316:	92 c0       	rjmp	.+292    	; 0x143c <__pack_f+0x156>
    1318:	21 15       	cp	r18, r1
    131a:	31 05       	cpc	r19, r1
    131c:	41 05       	cpc	r20, r1
    131e:	51 05       	cpc	r21, r1
    1320:	09 f4       	brne	.+2      	; 0x1324 <__pack_f+0x3e>
    1322:	8f c0       	rjmp	.+286    	; 0x1442 <__pack_f+0x15c>
    1324:	02 80       	ldd	r0, Z+2	; 0x02
    1326:	f3 81       	ldd	r31, Z+3	; 0x03
    1328:	e0 2d       	mov	r30, r0
    132a:	8f ef       	ldi	r24, 0xFF	; 255
    132c:	e2 38       	cpi	r30, 0x82	; 130
    132e:	f8 07       	cpc	r31, r24
    1330:	0c f0       	brlt	.+2      	; 0x1334 <__pack_f+0x4e>
    1332:	5a c0       	rjmp	.+180    	; 0x13e8 <__pack_f+0x102>
    1334:	c2 e8       	ldi	r28, 0x82	; 130
    1336:	df ef       	ldi	r29, 0xFF	; 255
    1338:	ce 1b       	sub	r28, r30
    133a:	df 0b       	sbc	r29, r31
    133c:	ca 31       	cpi	r28, 0x1A	; 26
    133e:	d1 05       	cpc	r29, r1
    1340:	6c f5       	brge	.+90     	; 0x139c <__pack_f+0xb6>
    1342:	79 01       	movw	r14, r18
    1344:	8a 01       	movw	r16, r20
    1346:	0c 2e       	mov	r0, r28
    1348:	04 c0       	rjmp	.+8      	; 0x1352 <__pack_f+0x6c>
    134a:	16 95       	lsr	r17
    134c:	07 95       	ror	r16
    134e:	f7 94       	ror	r15
    1350:	e7 94       	ror	r14
    1352:	0a 94       	dec	r0
    1354:	d2 f7       	brpl	.-12     	; 0x134a <__pack_f+0x64>
    1356:	81 e0       	ldi	r24, 0x01	; 1
    1358:	90 e0       	ldi	r25, 0x00	; 0
    135a:	a0 e0       	ldi	r26, 0x00	; 0
    135c:	b0 e0       	ldi	r27, 0x00	; 0
    135e:	0c 2e       	mov	r0, r28
    1360:	04 c0       	rjmp	.+8      	; 0x136a <__pack_f+0x84>
    1362:	88 0f       	add	r24, r24
    1364:	99 1f       	adc	r25, r25
    1366:	aa 1f       	adc	r26, r26
    1368:	bb 1f       	adc	r27, r27
    136a:	0a 94       	dec	r0
    136c:	d2 f7       	brpl	.-12     	; 0x1362 <__pack_f+0x7c>
    136e:	01 97       	sbiw	r24, 0x01	; 1
    1370:	a1 09       	sbc	r26, r1
    1372:	b1 09       	sbc	r27, r1
    1374:	82 23       	and	r24, r18
    1376:	93 23       	and	r25, r19
    1378:	a4 23       	and	r26, r20
    137a:	b5 23       	and	r27, r21
    137c:	21 e0       	ldi	r18, 0x01	; 1
    137e:	30 e0       	ldi	r19, 0x00	; 0
    1380:	40 e0       	ldi	r20, 0x00	; 0
    1382:	50 e0       	ldi	r21, 0x00	; 0
    1384:	00 97       	sbiw	r24, 0x00	; 0
    1386:	a1 05       	cpc	r26, r1
    1388:	b1 05       	cpc	r27, r1
    138a:	19 f4       	brne	.+6      	; 0x1392 <__pack_f+0xac>
    138c:	20 e0       	ldi	r18, 0x00	; 0
    138e:	30 e0       	ldi	r19, 0x00	; 0
    1390:	a9 01       	movw	r20, r18
    1392:	2e 29       	or	r18, r14
    1394:	3f 29       	or	r19, r15
    1396:	40 2b       	or	r20, r16
    1398:	51 2b       	or	r21, r17
    139a:	03 c0       	rjmp	.+6      	; 0x13a2 <__pack_f+0xbc>
    139c:	20 e0       	ldi	r18, 0x00	; 0
    139e:	30 e0       	ldi	r19, 0x00	; 0
    13a0:	a9 01       	movw	r20, r18
    13a2:	da 01       	movw	r26, r20
    13a4:	c9 01       	movw	r24, r18
    13a6:	8f 77       	andi	r24, 0x7F	; 127
    13a8:	90 70       	andi	r25, 0x00	; 0
    13aa:	a0 70       	andi	r26, 0x00	; 0
    13ac:	b0 70       	andi	r27, 0x00	; 0
    13ae:	80 34       	cpi	r24, 0x40	; 64
    13b0:	91 05       	cpc	r25, r1
    13b2:	a1 05       	cpc	r26, r1
    13b4:	b1 05       	cpc	r27, r1
    13b6:	39 f4       	brne	.+14     	; 0x13c6 <__pack_f+0xe0>
    13b8:	27 ff       	sbrs	r18, 7
    13ba:	09 c0       	rjmp	.+18     	; 0x13ce <__pack_f+0xe8>
    13bc:	20 5c       	subi	r18, 0xC0	; 192
    13be:	3f 4f       	sbci	r19, 0xFF	; 255
    13c0:	4f 4f       	sbci	r20, 0xFF	; 255
    13c2:	5f 4f       	sbci	r21, 0xFF	; 255
    13c4:	04 c0       	rjmp	.+8      	; 0x13ce <__pack_f+0xe8>
    13c6:	21 5c       	subi	r18, 0xC1	; 193
    13c8:	3f 4f       	sbci	r19, 0xFF	; 255
    13ca:	4f 4f       	sbci	r20, 0xFF	; 255
    13cc:	5f 4f       	sbci	r21, 0xFF	; 255
    13ce:	e1 e0       	ldi	r30, 0x01	; 1
    13d0:	f0 e0       	ldi	r31, 0x00	; 0
    13d2:	20 30       	cpi	r18, 0x00	; 0
    13d4:	80 e0       	ldi	r24, 0x00	; 0
    13d6:	38 07       	cpc	r19, r24
    13d8:	80 e0       	ldi	r24, 0x00	; 0
    13da:	48 07       	cpc	r20, r24
    13dc:	80 e4       	ldi	r24, 0x40	; 64
    13de:	58 07       	cpc	r21, r24
    13e0:	28 f5       	brcc	.+74     	; 0x142c <__pack_f+0x146>
    13e2:	e0 e0       	ldi	r30, 0x00	; 0
    13e4:	f0 e0       	ldi	r31, 0x00	; 0
    13e6:	22 c0       	rjmp	.+68     	; 0x142c <__pack_f+0x146>
    13e8:	e0 38       	cpi	r30, 0x80	; 128
    13ea:	f1 05       	cpc	r31, r1
    13ec:	6c f5       	brge	.+90     	; 0x1448 <__pack_f+0x162>
    13ee:	e1 58       	subi	r30, 0x81	; 129
    13f0:	ff 4f       	sbci	r31, 0xFF	; 255
    13f2:	da 01       	movw	r26, r20
    13f4:	c9 01       	movw	r24, r18
    13f6:	8f 77       	andi	r24, 0x7F	; 127
    13f8:	90 70       	andi	r25, 0x00	; 0
    13fa:	a0 70       	andi	r26, 0x00	; 0
    13fc:	b0 70       	andi	r27, 0x00	; 0
    13fe:	80 34       	cpi	r24, 0x40	; 64
    1400:	91 05       	cpc	r25, r1
    1402:	a1 05       	cpc	r26, r1
    1404:	b1 05       	cpc	r27, r1
    1406:	39 f4       	brne	.+14     	; 0x1416 <__pack_f+0x130>
    1408:	27 ff       	sbrs	r18, 7
    140a:	09 c0       	rjmp	.+18     	; 0x141e <__pack_f+0x138>
    140c:	20 5c       	subi	r18, 0xC0	; 192
    140e:	3f 4f       	sbci	r19, 0xFF	; 255
    1410:	4f 4f       	sbci	r20, 0xFF	; 255
    1412:	5f 4f       	sbci	r21, 0xFF	; 255
    1414:	04 c0       	rjmp	.+8      	; 0x141e <__pack_f+0x138>
    1416:	21 5c       	subi	r18, 0xC1	; 193
    1418:	3f 4f       	sbci	r19, 0xFF	; 255
    141a:	4f 4f       	sbci	r20, 0xFF	; 255
    141c:	5f 4f       	sbci	r21, 0xFF	; 255
    141e:	57 ff       	sbrs	r21, 7
    1420:	05 c0       	rjmp	.+10     	; 0x142c <__pack_f+0x146>
    1422:	56 95       	lsr	r21
    1424:	47 95       	ror	r20
    1426:	37 95       	ror	r19
    1428:	27 95       	ror	r18
    142a:	31 96       	adiw	r30, 0x01	; 1
    142c:	87 e0       	ldi	r24, 0x07	; 7
    142e:	56 95       	lsr	r21
    1430:	47 95       	ror	r20
    1432:	37 95       	ror	r19
    1434:	27 95       	ror	r18
    1436:	8a 95       	dec	r24
    1438:	d1 f7       	brne	.-12     	; 0x142e <__pack_f+0x148>
    143a:	0b c0       	rjmp	.+22     	; 0x1452 <__pack_f+0x16c>
    143c:	e0 e0       	ldi	r30, 0x00	; 0
    143e:	f0 e0       	ldi	r31, 0x00	; 0
    1440:	05 c0       	rjmp	.+10     	; 0x144c <__pack_f+0x166>
    1442:	e0 e0       	ldi	r30, 0x00	; 0
    1444:	f0 e0       	ldi	r31, 0x00	; 0
    1446:	05 c0       	rjmp	.+10     	; 0x1452 <__pack_f+0x16c>
    1448:	ef ef       	ldi	r30, 0xFF	; 255
    144a:	f0 e0       	ldi	r31, 0x00	; 0
    144c:	20 e0       	ldi	r18, 0x00	; 0
    144e:	30 e0       	ldi	r19, 0x00	; 0
    1450:	a9 01       	movw	r20, r18
    1452:	8e 2f       	mov	r24, r30
    1454:	87 95       	ror	r24
    1456:	88 27       	eor	r24, r24
    1458:	87 95       	ror	r24
    145a:	94 2f       	mov	r25, r20
    145c:	9f 77       	andi	r25, 0x7F	; 127
    145e:	67 95       	ror	r22
    1460:	66 27       	eor	r22, r22
    1462:	67 95       	ror	r22
    1464:	e6 95       	lsr	r30
    1466:	e2 2e       	mov	r14, r18
    1468:	a9 2f       	mov	r26, r25
    146a:	a8 2b       	or	r26, r24
    146c:	fe 2f       	mov	r31, r30
    146e:	f6 2b       	or	r31, r22
    1470:	62 2f       	mov	r22, r18
    1472:	73 2f       	mov	r23, r19
    1474:	8a 2f       	mov	r24, r26
    1476:	9f 2f       	mov	r25, r31
    1478:	cd b7       	in	r28, 0x3d	; 61
    147a:	de b7       	in	r29, 0x3e	; 62
    147c:	e6 e0       	ldi	r30, 0x06	; 6
    147e:	0c 94 2b 0b 	jmp	0x1656	; 0x1656 <__epilogue_restores__+0x18>

00001482 <__unpack_f>:
    1482:	dc 01       	movw	r26, r24
    1484:	fb 01       	movw	r30, r22
    1486:	2c 91       	ld	r18, X
    1488:	11 96       	adiw	r26, 0x01	; 1
    148a:	3c 91       	ld	r19, X
    148c:	11 97       	sbiw	r26, 0x01	; 1
    148e:	12 96       	adiw	r26, 0x02	; 2
    1490:	8c 91       	ld	r24, X
    1492:	12 97       	sbiw	r26, 0x02	; 2
    1494:	48 2f       	mov	r20, r24
    1496:	4f 77       	andi	r20, 0x7F	; 127
    1498:	50 e0       	ldi	r21, 0x00	; 0
    149a:	98 2f       	mov	r25, r24
    149c:	99 1f       	adc	r25, r25
    149e:	99 27       	eor	r25, r25
    14a0:	99 1f       	adc	r25, r25
    14a2:	13 96       	adiw	r26, 0x03	; 3
    14a4:	6c 91       	ld	r22, X
    14a6:	13 97       	sbiw	r26, 0x03	; 3
    14a8:	86 2f       	mov	r24, r22
    14aa:	88 0f       	add	r24, r24
    14ac:	89 2b       	or	r24, r25
    14ae:	90 e0       	ldi	r25, 0x00	; 0
    14b0:	66 1f       	adc	r22, r22
    14b2:	66 27       	eor	r22, r22
    14b4:	66 1f       	adc	r22, r22
    14b6:	61 83       	std	Z+1, r22	; 0x01
    14b8:	00 97       	sbiw	r24, 0x00	; 0
    14ba:	39 f5       	brne	.+78     	; 0x150a <__unpack_f+0x88>
    14bc:	21 15       	cp	r18, r1
    14be:	31 05       	cpc	r19, r1
    14c0:	41 05       	cpc	r20, r1
    14c2:	51 05       	cpc	r21, r1
    14c4:	11 f4       	brne	.+4      	; 0x14ca <__unpack_f+0x48>
    14c6:	82 e0       	ldi	r24, 0x02	; 2
    14c8:	29 c0       	rjmp	.+82     	; 0x151c <__unpack_f+0x9a>
    14ca:	82 e8       	ldi	r24, 0x82	; 130
    14cc:	9f ef       	ldi	r25, 0xFF	; 255
    14ce:	93 83       	std	Z+3, r25	; 0x03
    14d0:	82 83       	std	Z+2, r24	; 0x02
    14d2:	67 e0       	ldi	r22, 0x07	; 7
    14d4:	22 0f       	add	r18, r18
    14d6:	33 1f       	adc	r19, r19
    14d8:	44 1f       	adc	r20, r20
    14da:	55 1f       	adc	r21, r21
    14dc:	6a 95       	dec	r22
    14de:	d1 f7       	brne	.-12     	; 0x14d4 <__unpack_f+0x52>
    14e0:	83 e0       	ldi	r24, 0x03	; 3
    14e2:	80 83       	st	Z, r24
    14e4:	09 c0       	rjmp	.+18     	; 0x14f8 <__unpack_f+0x76>
    14e6:	22 0f       	add	r18, r18
    14e8:	33 1f       	adc	r19, r19
    14ea:	44 1f       	adc	r20, r20
    14ec:	55 1f       	adc	r21, r21
    14ee:	82 81       	ldd	r24, Z+2	; 0x02
    14f0:	93 81       	ldd	r25, Z+3	; 0x03
    14f2:	01 97       	sbiw	r24, 0x01	; 1
    14f4:	93 83       	std	Z+3, r25	; 0x03
    14f6:	82 83       	std	Z+2, r24	; 0x02
    14f8:	20 30       	cpi	r18, 0x00	; 0
    14fa:	80 e0       	ldi	r24, 0x00	; 0
    14fc:	38 07       	cpc	r19, r24
    14fe:	80 e0       	ldi	r24, 0x00	; 0
    1500:	48 07       	cpc	r20, r24
    1502:	80 e4       	ldi	r24, 0x40	; 64
    1504:	58 07       	cpc	r21, r24
    1506:	78 f3       	brcs	.-34     	; 0x14e6 <__unpack_f+0x64>
    1508:	20 c0       	rjmp	.+64     	; 0x154a <__unpack_f+0xc8>
    150a:	8f 3f       	cpi	r24, 0xFF	; 255
    150c:	91 05       	cpc	r25, r1
    150e:	79 f4       	brne	.+30     	; 0x152e <__unpack_f+0xac>
    1510:	21 15       	cp	r18, r1
    1512:	31 05       	cpc	r19, r1
    1514:	41 05       	cpc	r20, r1
    1516:	51 05       	cpc	r21, r1
    1518:	19 f4       	brne	.+6      	; 0x1520 <__unpack_f+0x9e>
    151a:	84 e0       	ldi	r24, 0x04	; 4
    151c:	80 83       	st	Z, r24
    151e:	08 95       	ret
    1520:	44 ff       	sbrs	r20, 4
    1522:	03 c0       	rjmp	.+6      	; 0x152a <__unpack_f+0xa8>
    1524:	81 e0       	ldi	r24, 0x01	; 1
    1526:	80 83       	st	Z, r24
    1528:	10 c0       	rjmp	.+32     	; 0x154a <__unpack_f+0xc8>
    152a:	10 82       	st	Z, r1
    152c:	0e c0       	rjmp	.+28     	; 0x154a <__unpack_f+0xc8>
    152e:	8f 57       	subi	r24, 0x7F	; 127
    1530:	90 40       	sbci	r25, 0x00	; 0
    1532:	93 83       	std	Z+3, r25	; 0x03
    1534:	82 83       	std	Z+2, r24	; 0x02
    1536:	83 e0       	ldi	r24, 0x03	; 3
    1538:	80 83       	st	Z, r24
    153a:	87 e0       	ldi	r24, 0x07	; 7
    153c:	22 0f       	add	r18, r18
    153e:	33 1f       	adc	r19, r19
    1540:	44 1f       	adc	r20, r20
    1542:	55 1f       	adc	r21, r21
    1544:	8a 95       	dec	r24
    1546:	d1 f7       	brne	.-12     	; 0x153c <__unpack_f+0xba>
    1548:	50 64       	ori	r21, 0x40	; 64
    154a:	24 83       	std	Z+4, r18	; 0x04
    154c:	35 83       	std	Z+5, r19	; 0x05
    154e:	46 83       	std	Z+6, r20	; 0x06
    1550:	57 83       	std	Z+7, r21	; 0x07
    1552:	08 95       	ret

00001554 <__fpcmp_parts_f>:
    1554:	fc 01       	movw	r30, r24
    1556:	db 01       	movw	r26, r22
    1558:	90 81       	ld	r25, Z
    155a:	92 30       	cpi	r25, 0x02	; 2
    155c:	08 f4       	brcc	.+2      	; 0x1560 <__fpcmp_parts_f+0xc>
    155e:	49 c0       	rjmp	.+146    	; 0x15f2 <__fpcmp_parts_f+0x9e>
    1560:	8c 91       	ld	r24, X
    1562:	82 30       	cpi	r24, 0x02	; 2
    1564:	08 f4       	brcc	.+2      	; 0x1568 <__fpcmp_parts_f+0x14>
    1566:	45 c0       	rjmp	.+138    	; 0x15f2 <__fpcmp_parts_f+0x9e>
    1568:	94 30       	cpi	r25, 0x04	; 4
    156a:	51 f4       	brne	.+20     	; 0x1580 <__fpcmp_parts_f+0x2c>
    156c:	61 81       	ldd	r22, Z+1	; 0x01
    156e:	84 30       	cpi	r24, 0x04	; 4
    1570:	b1 f5       	brne	.+108    	; 0x15de <__fpcmp_parts_f+0x8a>
    1572:	11 96       	adiw	r26, 0x01	; 1
    1574:	2c 91       	ld	r18, X
    1576:	11 97       	sbiw	r26, 0x01	; 1
    1578:	30 e0       	ldi	r19, 0x00	; 0
    157a:	26 1b       	sub	r18, r22
    157c:	31 09       	sbc	r19, r1
    157e:	41 c0       	rjmp	.+130    	; 0x1602 <__fpcmp_parts_f+0xae>
    1580:	84 30       	cpi	r24, 0x04	; 4
    1582:	21 f0       	breq	.+8      	; 0x158c <__fpcmp_parts_f+0x38>
    1584:	92 30       	cpi	r25, 0x02	; 2
    1586:	41 f4       	brne	.+16     	; 0x1598 <__fpcmp_parts_f+0x44>
    1588:	82 30       	cpi	r24, 0x02	; 2
    158a:	b1 f1       	breq	.+108    	; 0x15f8 <__fpcmp_parts_f+0xa4>
    158c:	11 96       	adiw	r26, 0x01	; 1
    158e:	8c 91       	ld	r24, X
    1590:	11 97       	sbiw	r26, 0x01	; 1
    1592:	88 23       	and	r24, r24
    1594:	a1 f1       	breq	.+104    	; 0x15fe <__fpcmp_parts_f+0xaa>
    1596:	2d c0       	rjmp	.+90     	; 0x15f2 <__fpcmp_parts_f+0x9e>
    1598:	61 81       	ldd	r22, Z+1	; 0x01
    159a:	82 30       	cpi	r24, 0x02	; 2
    159c:	01 f1       	breq	.+64     	; 0x15de <__fpcmp_parts_f+0x8a>
    159e:	11 96       	adiw	r26, 0x01	; 1
    15a0:	8c 91       	ld	r24, X
    15a2:	11 97       	sbiw	r26, 0x01	; 1
    15a4:	68 17       	cp	r22, r24
    15a6:	d9 f4       	brne	.+54     	; 0x15de <__fpcmp_parts_f+0x8a>
    15a8:	22 81       	ldd	r18, Z+2	; 0x02
    15aa:	33 81       	ldd	r19, Z+3	; 0x03
    15ac:	12 96       	adiw	r26, 0x02	; 2
    15ae:	8d 91       	ld	r24, X+
    15b0:	9c 91       	ld	r25, X
    15b2:	13 97       	sbiw	r26, 0x03	; 3
    15b4:	82 17       	cp	r24, r18
    15b6:	93 07       	cpc	r25, r19
    15b8:	94 f0       	brlt	.+36     	; 0x15de <__fpcmp_parts_f+0x8a>
    15ba:	28 17       	cp	r18, r24
    15bc:	39 07       	cpc	r19, r25
    15be:	bc f0       	brlt	.+46     	; 0x15ee <__fpcmp_parts_f+0x9a>
    15c0:	24 81       	ldd	r18, Z+4	; 0x04
    15c2:	35 81       	ldd	r19, Z+5	; 0x05
    15c4:	46 81       	ldd	r20, Z+6	; 0x06
    15c6:	57 81       	ldd	r21, Z+7	; 0x07
    15c8:	14 96       	adiw	r26, 0x04	; 4
    15ca:	8d 91       	ld	r24, X+
    15cc:	9d 91       	ld	r25, X+
    15ce:	0d 90       	ld	r0, X+
    15d0:	bc 91       	ld	r27, X
    15d2:	a0 2d       	mov	r26, r0
    15d4:	82 17       	cp	r24, r18
    15d6:	93 07       	cpc	r25, r19
    15d8:	a4 07       	cpc	r26, r20
    15da:	b5 07       	cpc	r27, r21
    15dc:	18 f4       	brcc	.+6      	; 0x15e4 <__fpcmp_parts_f+0x90>
    15de:	66 23       	and	r22, r22
    15e0:	41 f0       	breq	.+16     	; 0x15f2 <__fpcmp_parts_f+0x9e>
    15e2:	0d c0       	rjmp	.+26     	; 0x15fe <__fpcmp_parts_f+0xaa>
    15e4:	28 17       	cp	r18, r24
    15e6:	39 07       	cpc	r19, r25
    15e8:	4a 07       	cpc	r20, r26
    15ea:	5b 07       	cpc	r21, r27
    15ec:	28 f4       	brcc	.+10     	; 0x15f8 <__fpcmp_parts_f+0xa4>
    15ee:	66 23       	and	r22, r22
    15f0:	31 f0       	breq	.+12     	; 0x15fe <__fpcmp_parts_f+0xaa>
    15f2:	21 e0       	ldi	r18, 0x01	; 1
    15f4:	30 e0       	ldi	r19, 0x00	; 0
    15f6:	05 c0       	rjmp	.+10     	; 0x1602 <__fpcmp_parts_f+0xae>
    15f8:	20 e0       	ldi	r18, 0x00	; 0
    15fa:	30 e0       	ldi	r19, 0x00	; 0
    15fc:	02 c0       	rjmp	.+4      	; 0x1602 <__fpcmp_parts_f+0xae>
    15fe:	2f ef       	ldi	r18, 0xFF	; 255
    1600:	3f ef       	ldi	r19, 0xFF	; 255
    1602:	c9 01       	movw	r24, r18
    1604:	08 95       	ret

00001606 <__prologue_saves__>:
    1606:	2f 92       	push	r2
    1608:	3f 92       	push	r3
    160a:	4f 92       	push	r4
    160c:	5f 92       	push	r5
    160e:	6f 92       	push	r6
    1610:	7f 92       	push	r7
    1612:	8f 92       	push	r8
    1614:	9f 92       	push	r9
    1616:	af 92       	push	r10
    1618:	bf 92       	push	r11
    161a:	cf 92       	push	r12
    161c:	df 92       	push	r13
    161e:	ef 92       	push	r14
    1620:	ff 92       	push	r15
    1622:	0f 93       	push	r16
    1624:	1f 93       	push	r17
    1626:	cf 93       	push	r28
    1628:	df 93       	push	r29
    162a:	cd b7       	in	r28, 0x3d	; 61
    162c:	de b7       	in	r29, 0x3e	; 62
    162e:	ca 1b       	sub	r28, r26
    1630:	db 0b       	sbc	r29, r27
    1632:	0f b6       	in	r0, 0x3f	; 63
    1634:	f8 94       	cli
    1636:	de bf       	out	0x3e, r29	; 62
    1638:	0f be       	out	0x3f, r0	; 63
    163a:	cd bf       	out	0x3d, r28	; 61
    163c:	09 94       	ijmp

0000163e <__epilogue_restores__>:
    163e:	2a 88       	ldd	r2, Y+18	; 0x12
    1640:	39 88       	ldd	r3, Y+17	; 0x11
    1642:	48 88       	ldd	r4, Y+16	; 0x10
    1644:	5f 84       	ldd	r5, Y+15	; 0x0f
    1646:	6e 84       	ldd	r6, Y+14	; 0x0e
    1648:	7d 84       	ldd	r7, Y+13	; 0x0d
    164a:	8c 84       	ldd	r8, Y+12	; 0x0c
    164c:	9b 84       	ldd	r9, Y+11	; 0x0b
    164e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1650:	b9 84       	ldd	r11, Y+9	; 0x09
    1652:	c8 84       	ldd	r12, Y+8	; 0x08
    1654:	df 80       	ldd	r13, Y+7	; 0x07
    1656:	ee 80       	ldd	r14, Y+6	; 0x06
    1658:	fd 80       	ldd	r15, Y+5	; 0x05
    165a:	0c 81       	ldd	r16, Y+4	; 0x04
    165c:	1b 81       	ldd	r17, Y+3	; 0x03
    165e:	aa 81       	ldd	r26, Y+2	; 0x02
    1660:	b9 81       	ldd	r27, Y+1	; 0x01
    1662:	ce 0f       	add	r28, r30
    1664:	d1 1d       	adc	r29, r1
    1666:	0f b6       	in	r0, 0x3f	; 63
    1668:	f8 94       	cli
    166a:	de bf       	out	0x3e, r29	; 62
    166c:	0f be       	out	0x3f, r0	; 63
    166e:	cd bf       	out	0x3d, r28	; 61
    1670:	ed 01       	movw	r28, r26
    1672:	08 95       	ret

00001674 <_exit>:
    1674:	f8 94       	cli

00001676 <__stop_program>:
    1676:	ff cf       	rjmp	.-2      	; 0x1676 <__stop_program>
