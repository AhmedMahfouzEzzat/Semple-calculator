
Semple calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  000014ca  0000153e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014ca  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         000006cc  00000000  00000000  0000155c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00001c28  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000160  00000000  00000000  00001cad  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000022b  00000000  00000000  00001e0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000020f8  00000000  00000000  00002038  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f4c  00000000  00000000  00004130  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000153a  00000000  00000000  0000507c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000220  00000000  00000000  000065b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000431  00000000  00000000  000067d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a79  00000000  00000000  00006c09  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 00000588  00000000  00000000  00007682  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000030  00000000  00000000  00007c0a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ea ec       	ldi	r30, 0xCA	; 202
      7c:	f4 e1       	ldi	r31, 0x14	; 20
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ae 31       	cpi	r26, 0x1E	; 30
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
      8a:	0e 94 25 04 	call	0x84a	; 0x84a <main>
      8e:	0c 94 63 0a 	jmp	0x14c6	; 0x14c6 <_exit>

00000092 <__bad_interrupt>:
      92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <SEND_TO_LCD>:
					   {'9','6','3','='},
					   {'/','x','-','+'}
					   };

void SEND_TO_LCD(char data , uint8_t mode )
{
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	df 93       	push	r29
      9c:	cf 93       	push	r28
      9e:	cd b7       	in	r28, 0x3d	; 61
      a0:	de b7       	in	r29, 0x3e	; 62
      a2:	c9 54       	subi	r28, 0x49	; 73
      a4:	d0 40       	sbci	r29, 0x00	; 0
      a6:	0f b6       	in	r0, 0x3f	; 63
      a8:	f8 94       	cli
      aa:	de bf       	out	0x3e, r29	; 62
      ac:	0f be       	out	0x3f, r0	; 63
      ae:	cd bf       	out	0x3d, r28	; 61
      b0:	9e 01       	movw	r18, r28
      b2:	28 5b       	subi	r18, 0xB8	; 184
      b4:	3f 4f       	sbci	r19, 0xFF	; 255
      b6:	f9 01       	movw	r30, r18
      b8:	80 83       	st	Z, r24
      ba:	ce 01       	movw	r24, r28
      bc:	87 5b       	subi	r24, 0xB7	; 183
      be:	9f 4f       	sbci	r25, 0xFF	; 255
      c0:	fc 01       	movw	r30, r24
      c2:	60 83       	st	Z, r22
	uint8_t control_lcd = 0 ;
      c4:	19 82       	std	Y+1, r1	; 0x01
	write_to_calc(lcd_data_port,data);
      c6:	88 e2       	ldi	r24, 0x28	; 40
      c8:	90 e0       	ldi	r25, 0x00	; 0
      ca:	2f ef       	ldi	r18, 0xFF	; 255
      cc:	fc 01       	movw	r30, r24
      ce:	20 83       	st	Z, r18
      d0:	8a e2       	ldi	r24, 0x2A	; 42
      d2:	90 e0       	ldi	r25, 0x00	; 0
      d4:	2f ef       	ldi	r18, 0xFF	; 255
      d6:	fc 01       	movw	r30, r24
      d8:	20 83       	st	Z, r18
      da:	85 e2       	ldi	r24, 0x25	; 37
      dc:	90 e0       	ldi	r25, 0x00	; 0
      de:	fc 01       	movw	r30, r24
      e0:	10 82       	st	Z, r1
      e2:	8b e2       	ldi	r24, 0x2B	; 43
      e4:	90 e0       	ldi	r25, 0x00	; 0
      e6:	9e 01       	movw	r18, r28
      e8:	28 5b       	subi	r18, 0xB8	; 184
      ea:	3f 4f       	sbci	r19, 0xFF	; 255
      ec:	f9 01       	movw	r30, r18
      ee:	20 81       	ld	r18, Z
      f0:	fc 01       	movw	r30, r24
      f2:	20 83       	st	Z, r18
      f4:	88 e2       	ldi	r24, 0x28	; 40
      f6:	90 e0       	ldi	r25, 0x00	; 0
      f8:	2d ef       	ldi	r18, 0xFD	; 253
      fa:	fc 01       	movw	r30, r24
      fc:	20 83       	st	Z, r18
      fe:	80 e0       	ldi	r24, 0x00	; 0
     100:	90 e0       	ldi	r25, 0x00	; 0
     102:	a0 e2       	ldi	r26, 0x20	; 32
     104:	b1 e4       	ldi	r27, 0x41	; 65
     106:	8a 83       	std	Y+2, r24	; 0x02
     108:	9b 83       	std	Y+3, r25	; 0x03
     10a:	ac 83       	std	Y+4, r26	; 0x04
     10c:	bd 83       	std	Y+5, r27	; 0x05
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     10e:	6a 81       	ldd	r22, Y+2	; 0x02
     110:	7b 81       	ldd	r23, Y+3	; 0x03
     112:	8c 81       	ldd	r24, Y+4	; 0x04
     114:	9d 81       	ldd	r25, Y+5	; 0x05
     116:	20 e0       	ldi	r18, 0x00	; 0
     118:	30 e0       	ldi	r19, 0x00	; 0
     11a:	4a e7       	ldi	r20, 0x7A	; 122
     11c:	55 e4       	ldi	r21, 0x45	; 69
     11e:	0e 94 c0 06 	call	0xd80	; 0xd80 <__mulsf3>
     122:	dc 01       	movw	r26, r24
     124:	cb 01       	movw	r24, r22
     126:	8e 83       	std	Y+6, r24	; 0x06
     128:	9f 83       	std	Y+7, r25	; 0x07
     12a:	a8 87       	std	Y+8, r26	; 0x08
     12c:	b9 87       	std	Y+9, r27	; 0x09
	if (__tmp < 1.0)
     12e:	11 e0       	ldi	r17, 0x01	; 1
     130:	6e 81       	ldd	r22, Y+6	; 0x06
     132:	7f 81       	ldd	r23, Y+7	; 0x07
     134:	88 85       	ldd	r24, Y+8	; 0x08
     136:	99 85       	ldd	r25, Y+9	; 0x09
     138:	20 e0       	ldi	r18, 0x00	; 0
     13a:	30 e0       	ldi	r19, 0x00	; 0
     13c:	40 e8       	ldi	r20, 0x80	; 128
     13e:	5f e3       	ldi	r21, 0x3F	; 63
     140:	0e 94 1a 08 	call	0x1034	; 0x1034 <__ltsf2>
     144:	88 23       	and	r24, r24
     146:	0c f0       	brlt	.+2      	; 0x14a <SEND_TO_LCD+0xb4>
     148:	10 e0       	ldi	r17, 0x00	; 0
     14a:	11 23       	and	r17, r17
     14c:	29 f0       	breq	.+10     	; 0x158 <SEND_TO_LCD+0xc2>
		__ticks = 1;
     14e:	81 e0       	ldi	r24, 0x01	; 1
     150:	90 e0       	ldi	r25, 0x00	; 0
     152:	9b 87       	std	Y+11, r25	; 0x0b
     154:	8a 87       	std	Y+10, r24	; 0x0a
     156:	46 c0       	rjmp	.+140    	; 0x1e4 <SEND_TO_LCD+0x14e>
	else if (__tmp > 65535)
     158:	11 e0       	ldi	r17, 0x01	; 1
     15a:	6e 81       	ldd	r22, Y+6	; 0x06
     15c:	7f 81       	ldd	r23, Y+7	; 0x07
     15e:	88 85       	ldd	r24, Y+8	; 0x08
     160:	99 85       	ldd	r25, Y+9	; 0x09
     162:	20 e0       	ldi	r18, 0x00	; 0
     164:	3f ef       	ldi	r19, 0xFF	; 255
     166:	4f e7       	ldi	r20, 0x7F	; 127
     168:	57 e4       	ldi	r21, 0x47	; 71
     16a:	0e 94 ba 07 	call	0xf74	; 0xf74 <__gtsf2>
     16e:	18 16       	cp	r1, r24
     170:	0c f0       	brlt	.+2      	; 0x174 <SEND_TO_LCD+0xde>
     172:	10 e0       	ldi	r17, 0x00	; 0
     174:	11 23       	and	r17, r17
     176:	61 f1       	breq	.+88     	; 0x1d0 <SEND_TO_LCD+0x13a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     178:	6a 81       	ldd	r22, Y+2	; 0x02
     17a:	7b 81       	ldd	r23, Y+3	; 0x03
     17c:	8c 81       	ldd	r24, Y+4	; 0x04
     17e:	9d 81       	ldd	r25, Y+5	; 0x05
     180:	20 e0       	ldi	r18, 0x00	; 0
     182:	30 e0       	ldi	r19, 0x00	; 0
     184:	40 e2       	ldi	r20, 0x20	; 32
     186:	51 e4       	ldi	r21, 0x41	; 65
     188:	0e 94 c0 06 	call	0xd80	; 0xd80 <__mulsf3>
     18c:	dc 01       	movw	r26, r24
     18e:	cb 01       	movw	r24, r22
     190:	bc 01       	movw	r22, r24
     192:	cd 01       	movw	r24, r26
     194:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__fixunssfsi>
     198:	dc 01       	movw	r26, r24
     19a:	cb 01       	movw	r24, r22
     19c:	9b 87       	std	Y+11, r25	; 0x0b
     19e:	8a 87       	std	Y+10, r24	; 0x0a
     1a0:	12 c0       	rjmp	.+36     	; 0x1c6 <SEND_TO_LCD+0x130>
     1a2:	80 e9       	ldi	r24, 0x90	; 144
     1a4:	91 e0       	ldi	r25, 0x01	; 1
     1a6:	9d 87       	std	Y+13, r25	; 0x0d
     1a8:	8c 87       	std	Y+12, r24	; 0x0c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1aa:	8c 85       	ldd	r24, Y+12	; 0x0c
     1ac:	9d 85       	ldd	r25, Y+13	; 0x0d
     1ae:	8c 01       	movw	r16, r24
     1b0:	c8 01       	movw	r24, r16
     1b2:	01 97       	sbiw	r24, 0x01	; 1
     1b4:	f1 f7       	brne	.-4      	; 0x1b2 <SEND_TO_LCD+0x11c>
     1b6:	8c 01       	movw	r16, r24
     1b8:	1d 87       	std	Y+13, r17	; 0x0d
     1ba:	0c 87       	std	Y+12, r16	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1bc:	8a 85       	ldd	r24, Y+10	; 0x0a
     1be:	9b 85       	ldd	r25, Y+11	; 0x0b
     1c0:	01 97       	sbiw	r24, 0x01	; 1
     1c2:	9b 87       	std	Y+11, r25	; 0x0b
     1c4:	8a 87       	std	Y+10, r24	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1c6:	8a 85       	ldd	r24, Y+10	; 0x0a
     1c8:	9b 85       	ldd	r25, Y+11	; 0x0b
     1ca:	00 97       	sbiw	r24, 0x00	; 0
     1cc:	51 f7       	brne	.-44     	; 0x1a2 <SEND_TO_LCD+0x10c>
     1ce:	17 c0       	rjmp	.+46     	; 0x1fe <SEND_TO_LCD+0x168>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1d0:	6e 81       	ldd	r22, Y+6	; 0x06
     1d2:	7f 81       	ldd	r23, Y+7	; 0x07
     1d4:	88 85       	ldd	r24, Y+8	; 0x08
     1d6:	99 85       	ldd	r25, Y+9	; 0x09
     1d8:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__fixunssfsi>
     1dc:	dc 01       	movw	r26, r24
     1de:	cb 01       	movw	r24, r22
     1e0:	9b 87       	std	Y+11, r25	; 0x0b
     1e2:	8a 87       	std	Y+10, r24	; 0x0a
     1e4:	8a 85       	ldd	r24, Y+10	; 0x0a
     1e6:	9b 85       	ldd	r25, Y+11	; 0x0b
     1e8:	9f 87       	std	Y+15, r25	; 0x0f
     1ea:	8e 87       	std	Y+14, r24	; 0x0e
     1ec:	8e 85       	ldd	r24, Y+14	; 0x0e
     1ee:	9f 85       	ldd	r25, Y+15	; 0x0f
     1f0:	8c 01       	movw	r16, r24
     1f2:	f8 01       	movw	r30, r16
     1f4:	31 97       	sbiw	r30, 0x01	; 1
     1f6:	f1 f7       	brne	.-4      	; 0x1f4 <SEND_TO_LCD+0x15e>
     1f8:	8f 01       	movw	r16, r30
     1fa:	1f 87       	std	Y+15, r17	; 0x0f
     1fc:	0e 87       	std	Y+14, r16	; 0x0e
     1fe:	88 e2       	ldi	r24, 0x28	; 40
     200:	90 e0       	ldi	r25, 0x00	; 0
     202:	2f ef       	ldi	r18, 0xFF	; 255
     204:	fc 01       	movw	r30, r24
     206:	20 83       	st	Z, r18
	control_lcd = mode ;			//CMD => RS=0 ,DATA =>RS =1 
     208:	ce 01       	movw	r24, r28
     20a:	87 5b       	subi	r24, 0xB7	; 183
     20c:	9f 4f       	sbci	r25, 0xFF	; 255
     20e:	fc 01       	movw	r30, r24
     210:	80 81       	ld	r24, Z
     212:	89 83       	std	Y+1, r24	; 0x01
	control_lcd |= 2;				// EN = 1
     214:	89 81       	ldd	r24, Y+1	; 0x01
     216:	82 60       	ori	r24, 0x02	; 2
     218:	89 83       	std	Y+1, r24	; 0x01
	write_to_calc(lcd_ctrl_port,control_lcd);
     21a:	88 e2       	ldi	r24, 0x28	; 40
     21c:	90 e0       	ldi	r25, 0x00	; 0
     21e:	2f ef       	ldi	r18, 0xFF	; 255
     220:	fc 01       	movw	r30, r24
     222:	20 83       	st	Z, r18
     224:	8a e2       	ldi	r24, 0x2A	; 42
     226:	90 e0       	ldi	r25, 0x00	; 0
     228:	2f ef       	ldi	r18, 0xFF	; 255
     22a:	fc 01       	movw	r30, r24
     22c:	20 83       	st	Z, r18
     22e:	85 e2       	ldi	r24, 0x25	; 37
     230:	90 e0       	ldi	r25, 0x00	; 0
     232:	21 e0       	ldi	r18, 0x01	; 1
     234:	fc 01       	movw	r30, r24
     236:	20 83       	st	Z, r18
     238:	8b e2       	ldi	r24, 0x2B	; 43
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	29 81       	ldd	r18, Y+1	; 0x01
     23e:	fc 01       	movw	r30, r24
     240:	20 83       	st	Z, r18
     242:	88 e2       	ldi	r24, 0x28	; 40
     244:	90 e0       	ldi	r25, 0x00	; 0
     246:	2d ef       	ldi	r18, 0xFD	; 253
     248:	fc 01       	movw	r30, r24
     24a:	20 83       	st	Z, r18
     24c:	80 e0       	ldi	r24, 0x00	; 0
     24e:	90 e0       	ldi	r25, 0x00	; 0
     250:	a0 e2       	ldi	r26, 0x20	; 32
     252:	b1 e4       	ldi	r27, 0x41	; 65
     254:	88 8b       	std	Y+16, r24	; 0x10
     256:	99 8b       	std	Y+17, r25	; 0x11
     258:	aa 8b       	std	Y+18, r26	; 0x12
     25a:	bb 8b       	std	Y+19, r27	; 0x13
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     25c:	68 89       	ldd	r22, Y+16	; 0x10
     25e:	79 89       	ldd	r23, Y+17	; 0x11
     260:	8a 89       	ldd	r24, Y+18	; 0x12
     262:	9b 89       	ldd	r25, Y+19	; 0x13
     264:	20 e0       	ldi	r18, 0x00	; 0
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	4a e7       	ldi	r20, 0x7A	; 122
     26a:	55 e4       	ldi	r21, 0x45	; 69
     26c:	0e 94 c0 06 	call	0xd80	; 0xd80 <__mulsf3>
     270:	dc 01       	movw	r26, r24
     272:	cb 01       	movw	r24, r22
     274:	8c 8b       	std	Y+20, r24	; 0x14
     276:	9d 8b       	std	Y+21, r25	; 0x15
     278:	ae 8b       	std	Y+22, r26	; 0x16
     27a:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
     27c:	11 e0       	ldi	r17, 0x01	; 1
     27e:	6c 89       	ldd	r22, Y+20	; 0x14
     280:	7d 89       	ldd	r23, Y+21	; 0x15
     282:	8e 89       	ldd	r24, Y+22	; 0x16
     284:	9f 89       	ldd	r25, Y+23	; 0x17
     286:	20 e0       	ldi	r18, 0x00	; 0
     288:	30 e0       	ldi	r19, 0x00	; 0
     28a:	40 e8       	ldi	r20, 0x80	; 128
     28c:	5f e3       	ldi	r21, 0x3F	; 63
     28e:	0e 94 1a 08 	call	0x1034	; 0x1034 <__ltsf2>
     292:	88 23       	and	r24, r24
     294:	0c f0       	brlt	.+2      	; 0x298 <SEND_TO_LCD+0x202>
     296:	10 e0       	ldi	r17, 0x00	; 0
     298:	11 23       	and	r17, r17
     29a:	29 f0       	breq	.+10     	; 0x2a6 <SEND_TO_LCD+0x210>
		__ticks = 1;
     29c:	81 e0       	ldi	r24, 0x01	; 1
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	99 8f       	std	Y+25, r25	; 0x19
     2a2:	88 8f       	std	Y+24, r24	; 0x18
     2a4:	46 c0       	rjmp	.+140    	; 0x332 <SEND_TO_LCD+0x29c>
	else if (__tmp > 65535)
     2a6:	11 e0       	ldi	r17, 0x01	; 1
     2a8:	6c 89       	ldd	r22, Y+20	; 0x14
     2aa:	7d 89       	ldd	r23, Y+21	; 0x15
     2ac:	8e 89       	ldd	r24, Y+22	; 0x16
     2ae:	9f 89       	ldd	r25, Y+23	; 0x17
     2b0:	20 e0       	ldi	r18, 0x00	; 0
     2b2:	3f ef       	ldi	r19, 0xFF	; 255
     2b4:	4f e7       	ldi	r20, 0x7F	; 127
     2b6:	57 e4       	ldi	r21, 0x47	; 71
     2b8:	0e 94 ba 07 	call	0xf74	; 0xf74 <__gtsf2>
     2bc:	18 16       	cp	r1, r24
     2be:	0c f0       	brlt	.+2      	; 0x2c2 <SEND_TO_LCD+0x22c>
     2c0:	10 e0       	ldi	r17, 0x00	; 0
     2c2:	11 23       	and	r17, r17
     2c4:	61 f1       	breq	.+88     	; 0x31e <SEND_TO_LCD+0x288>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2c6:	68 89       	ldd	r22, Y+16	; 0x10
     2c8:	79 89       	ldd	r23, Y+17	; 0x11
     2ca:	8a 89       	ldd	r24, Y+18	; 0x12
     2cc:	9b 89       	ldd	r25, Y+19	; 0x13
     2ce:	20 e0       	ldi	r18, 0x00	; 0
     2d0:	30 e0       	ldi	r19, 0x00	; 0
     2d2:	40 e2       	ldi	r20, 0x20	; 32
     2d4:	51 e4       	ldi	r21, 0x41	; 65
     2d6:	0e 94 c0 06 	call	0xd80	; 0xd80 <__mulsf3>
     2da:	dc 01       	movw	r26, r24
     2dc:	cb 01       	movw	r24, r22
     2de:	bc 01       	movw	r22, r24
     2e0:	cd 01       	movw	r24, r26
     2e2:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__fixunssfsi>
     2e6:	dc 01       	movw	r26, r24
     2e8:	cb 01       	movw	r24, r22
     2ea:	99 8f       	std	Y+25, r25	; 0x19
     2ec:	88 8f       	std	Y+24, r24	; 0x18
     2ee:	12 c0       	rjmp	.+36     	; 0x314 <SEND_TO_LCD+0x27e>
     2f0:	80 e9       	ldi	r24, 0x90	; 144
     2f2:	91 e0       	ldi	r25, 0x01	; 1
     2f4:	9b 8f       	std	Y+27, r25	; 0x1b
     2f6:	8a 8f       	std	Y+26, r24	; 0x1a
     2f8:	8a 8d       	ldd	r24, Y+26	; 0x1a
     2fa:	9b 8d       	ldd	r25, Y+27	; 0x1b
     2fc:	8c 01       	movw	r16, r24
     2fe:	c8 01       	movw	r24, r16
     300:	01 97       	sbiw	r24, 0x01	; 1
     302:	f1 f7       	brne	.-4      	; 0x300 <SEND_TO_LCD+0x26a>
     304:	8c 01       	movw	r16, r24
     306:	1b 8f       	std	Y+27, r17	; 0x1b
     308:	0a 8f       	std	Y+26, r16	; 0x1a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     30a:	88 8d       	ldd	r24, Y+24	; 0x18
     30c:	99 8d       	ldd	r25, Y+25	; 0x19
     30e:	01 97       	sbiw	r24, 0x01	; 1
     310:	99 8f       	std	Y+25, r25	; 0x19
     312:	88 8f       	std	Y+24, r24	; 0x18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     314:	88 8d       	ldd	r24, Y+24	; 0x18
     316:	99 8d       	ldd	r25, Y+25	; 0x19
     318:	00 97       	sbiw	r24, 0x00	; 0
     31a:	51 f7       	brne	.-44     	; 0x2f0 <SEND_TO_LCD+0x25a>
     31c:	17 c0       	rjmp	.+46     	; 0x34c <SEND_TO_LCD+0x2b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     31e:	6c 89       	ldd	r22, Y+20	; 0x14
     320:	7d 89       	ldd	r23, Y+21	; 0x15
     322:	8e 89       	ldd	r24, Y+22	; 0x16
     324:	9f 89       	ldd	r25, Y+23	; 0x17
     326:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__fixunssfsi>
     32a:	dc 01       	movw	r26, r24
     32c:	cb 01       	movw	r24, r22
     32e:	99 8f       	std	Y+25, r25	; 0x19
     330:	88 8f       	std	Y+24, r24	; 0x18
     332:	88 8d       	ldd	r24, Y+24	; 0x18
     334:	99 8d       	ldd	r25, Y+25	; 0x19
     336:	9d 8f       	std	Y+29, r25	; 0x1d
     338:	8c 8f       	std	Y+28, r24	; 0x1c
     33a:	8c 8d       	ldd	r24, Y+28	; 0x1c
     33c:	9d 8d       	ldd	r25, Y+29	; 0x1d
     33e:	8c 01       	movw	r16, r24
     340:	f8 01       	movw	r30, r16
     342:	31 97       	sbiw	r30, 0x01	; 1
     344:	f1 f7       	brne	.-4      	; 0x342 <SEND_TO_LCD+0x2ac>
     346:	8f 01       	movw	r16, r30
     348:	1d 8f       	std	Y+29, r17	; 0x1d
     34a:	0c 8f       	std	Y+28, r16	; 0x1c
     34c:	88 e2       	ldi	r24, 0x28	; 40
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	2f ef       	ldi	r18, 0xFF	; 255
     352:	fc 01       	movw	r30, r24
     354:	20 83       	st	Z, r18
     356:	80 e0       	ldi	r24, 0x00	; 0
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	a0 e2       	ldi	r26, 0x20	; 32
     35c:	b1 e4       	ldi	r27, 0x41	; 65
     35e:	8e 8f       	std	Y+30, r24	; 0x1e
     360:	9f 8f       	std	Y+31, r25	; 0x1f
     362:	a8 a3       	std	Y+32, r26	; 0x20
     364:	b9 a3       	std	Y+33, r27	; 0x21
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     366:	6e 8d       	ldd	r22, Y+30	; 0x1e
     368:	7f 8d       	ldd	r23, Y+31	; 0x1f
     36a:	88 a1       	ldd	r24, Y+32	; 0x20
     36c:	99 a1       	ldd	r25, Y+33	; 0x21
     36e:	20 e0       	ldi	r18, 0x00	; 0
     370:	30 e0       	ldi	r19, 0x00	; 0
     372:	4a e7       	ldi	r20, 0x7A	; 122
     374:	55 e4       	ldi	r21, 0x45	; 69
     376:	0e 94 c0 06 	call	0xd80	; 0xd80 <__mulsf3>
     37a:	dc 01       	movw	r26, r24
     37c:	cb 01       	movw	r24, r22
     37e:	8a a3       	std	Y+34, r24	; 0x22
     380:	9b a3       	std	Y+35, r25	; 0x23
     382:	ac a3       	std	Y+36, r26	; 0x24
     384:	bd a3       	std	Y+37, r27	; 0x25
	if (__tmp < 1.0)
     386:	11 e0       	ldi	r17, 0x01	; 1
     388:	6a a1       	ldd	r22, Y+34	; 0x22
     38a:	7b a1       	ldd	r23, Y+35	; 0x23
     38c:	8c a1       	ldd	r24, Y+36	; 0x24
     38e:	9d a1       	ldd	r25, Y+37	; 0x25
     390:	20 e0       	ldi	r18, 0x00	; 0
     392:	30 e0       	ldi	r19, 0x00	; 0
     394:	40 e8       	ldi	r20, 0x80	; 128
     396:	5f e3       	ldi	r21, 0x3F	; 63
     398:	0e 94 1a 08 	call	0x1034	; 0x1034 <__ltsf2>
     39c:	88 23       	and	r24, r24
     39e:	0c f0       	brlt	.+2      	; 0x3a2 <SEND_TO_LCD+0x30c>
     3a0:	10 e0       	ldi	r17, 0x00	; 0
     3a2:	11 23       	and	r17, r17
     3a4:	29 f0       	breq	.+10     	; 0x3b0 <SEND_TO_LCD+0x31a>
		__ticks = 1;
     3a6:	81 e0       	ldi	r24, 0x01	; 1
     3a8:	90 e0       	ldi	r25, 0x00	; 0
     3aa:	9f a3       	std	Y+39, r25	; 0x27
     3ac:	8e a3       	std	Y+38, r24	; 0x26
     3ae:	46 c0       	rjmp	.+140    	; 0x43c <SEND_TO_LCD+0x3a6>
	else if (__tmp > 65535)
     3b0:	11 e0       	ldi	r17, 0x01	; 1
     3b2:	6a a1       	ldd	r22, Y+34	; 0x22
     3b4:	7b a1       	ldd	r23, Y+35	; 0x23
     3b6:	8c a1       	ldd	r24, Y+36	; 0x24
     3b8:	9d a1       	ldd	r25, Y+37	; 0x25
     3ba:	20 e0       	ldi	r18, 0x00	; 0
     3bc:	3f ef       	ldi	r19, 0xFF	; 255
     3be:	4f e7       	ldi	r20, 0x7F	; 127
     3c0:	57 e4       	ldi	r21, 0x47	; 71
     3c2:	0e 94 ba 07 	call	0xf74	; 0xf74 <__gtsf2>
     3c6:	18 16       	cp	r1, r24
     3c8:	0c f0       	brlt	.+2      	; 0x3cc <SEND_TO_LCD+0x336>
     3ca:	10 e0       	ldi	r17, 0x00	; 0
     3cc:	11 23       	and	r17, r17
     3ce:	61 f1       	breq	.+88     	; 0x428 <SEND_TO_LCD+0x392>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3d0:	6e 8d       	ldd	r22, Y+30	; 0x1e
     3d2:	7f 8d       	ldd	r23, Y+31	; 0x1f
     3d4:	88 a1       	ldd	r24, Y+32	; 0x20
     3d6:	99 a1       	ldd	r25, Y+33	; 0x21
     3d8:	20 e0       	ldi	r18, 0x00	; 0
     3da:	30 e0       	ldi	r19, 0x00	; 0
     3dc:	40 e2       	ldi	r20, 0x20	; 32
     3de:	51 e4       	ldi	r21, 0x41	; 65
     3e0:	0e 94 c0 06 	call	0xd80	; 0xd80 <__mulsf3>
     3e4:	dc 01       	movw	r26, r24
     3e6:	cb 01       	movw	r24, r22
     3e8:	bc 01       	movw	r22, r24
     3ea:	cd 01       	movw	r24, r26
     3ec:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__fixunssfsi>
     3f0:	dc 01       	movw	r26, r24
     3f2:	cb 01       	movw	r24, r22
     3f4:	9f a3       	std	Y+39, r25	; 0x27
     3f6:	8e a3       	std	Y+38, r24	; 0x26
     3f8:	12 c0       	rjmp	.+36     	; 0x41e <SEND_TO_LCD+0x388>
     3fa:	80 e9       	ldi	r24, 0x90	; 144
     3fc:	91 e0       	ldi	r25, 0x01	; 1
     3fe:	99 a7       	std	Y+41, r25	; 0x29
     400:	88 a7       	std	Y+40, r24	; 0x28
     402:	88 a5       	ldd	r24, Y+40	; 0x28
     404:	99 a5       	ldd	r25, Y+41	; 0x29
     406:	8c 01       	movw	r16, r24
     408:	c8 01       	movw	r24, r16
     40a:	01 97       	sbiw	r24, 0x01	; 1
     40c:	f1 f7       	brne	.-4      	; 0x40a <SEND_TO_LCD+0x374>
     40e:	8c 01       	movw	r16, r24
     410:	19 a7       	std	Y+41, r17	; 0x29
     412:	08 a7       	std	Y+40, r16	; 0x28
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     414:	8e a1       	ldd	r24, Y+38	; 0x26
     416:	9f a1       	ldd	r25, Y+39	; 0x27
     418:	01 97       	sbiw	r24, 0x01	; 1
     41a:	9f a3       	std	Y+39, r25	; 0x27
     41c:	8e a3       	std	Y+38, r24	; 0x26
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     41e:	8e a1       	ldd	r24, Y+38	; 0x26
     420:	9f a1       	ldd	r25, Y+39	; 0x27
     422:	00 97       	sbiw	r24, 0x00	; 0
     424:	51 f7       	brne	.-44     	; 0x3fa <SEND_TO_LCD+0x364>
     426:	17 c0       	rjmp	.+46     	; 0x456 <SEND_TO_LCD+0x3c0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     428:	6a a1       	ldd	r22, Y+34	; 0x22
     42a:	7b a1       	ldd	r23, Y+35	; 0x23
     42c:	8c a1       	ldd	r24, Y+36	; 0x24
     42e:	9d a1       	ldd	r25, Y+37	; 0x25
     430:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__fixunssfsi>
     434:	dc 01       	movw	r26, r24
     436:	cb 01       	movw	r24, r22
     438:	9f a3       	std	Y+39, r25	; 0x27
     43a:	8e a3       	std	Y+38, r24	; 0x26
     43c:	8e a1       	ldd	r24, Y+38	; 0x26
     43e:	9f a1       	ldd	r25, Y+39	; 0x27
     440:	9b a7       	std	Y+43, r25	; 0x2b
     442:	8a a7       	std	Y+42, r24	; 0x2a
     444:	8a a5       	ldd	r24, Y+42	; 0x2a
     446:	9b a5       	ldd	r25, Y+43	; 0x2b
     448:	8c 01       	movw	r16, r24
     44a:	f8 01       	movw	r30, r16
     44c:	31 97       	sbiw	r30, 0x01	; 1
     44e:	f1 f7       	brne	.-4      	; 0x44c <SEND_TO_LCD+0x3b6>
     450:	8f 01       	movw	r16, r30
     452:	1b a7       	std	Y+43, r17	; 0x2b
     454:	0a a7       	std	Y+42, r16	; 0x2a
	_delay_ms(10);
	control_lcd &= ~2 ;				// EN =0
     456:	89 81       	ldd	r24, Y+1	; 0x01
     458:	8d 7f       	andi	r24, 0xFD	; 253
     45a:	89 83       	std	Y+1, r24	; 0x01
	write_to_calc(lcd_ctrl_port,control_lcd);
     45c:	88 e2       	ldi	r24, 0x28	; 40
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	2f ef       	ldi	r18, 0xFF	; 255
     462:	fc 01       	movw	r30, r24
     464:	20 83       	st	Z, r18
     466:	8a e2       	ldi	r24, 0x2A	; 42
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	2f ef       	ldi	r18, 0xFF	; 255
     46c:	fc 01       	movw	r30, r24
     46e:	20 83       	st	Z, r18
     470:	85 e2       	ldi	r24, 0x25	; 37
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	21 e0       	ldi	r18, 0x01	; 1
     476:	fc 01       	movw	r30, r24
     478:	20 83       	st	Z, r18
     47a:	8b e2       	ldi	r24, 0x2B	; 43
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	29 81       	ldd	r18, Y+1	; 0x01
     480:	fc 01       	movw	r30, r24
     482:	20 83       	st	Z, r18
     484:	88 e2       	ldi	r24, 0x28	; 40
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	2d ef       	ldi	r18, 0xFD	; 253
     48a:	fc 01       	movw	r30, r24
     48c:	20 83       	st	Z, r18
     48e:	80 e0       	ldi	r24, 0x00	; 0
     490:	90 e0       	ldi	r25, 0x00	; 0
     492:	a0 e2       	ldi	r26, 0x20	; 32
     494:	b1 e4       	ldi	r27, 0x41	; 65
     496:	8c a7       	std	Y+44, r24	; 0x2c
     498:	9d a7       	std	Y+45, r25	; 0x2d
     49a:	ae a7       	std	Y+46, r26	; 0x2e
     49c:	bf a7       	std	Y+47, r27	; 0x2f
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     49e:	6c a5       	ldd	r22, Y+44	; 0x2c
     4a0:	7d a5       	ldd	r23, Y+45	; 0x2d
     4a2:	8e a5       	ldd	r24, Y+46	; 0x2e
     4a4:	9f a5       	ldd	r25, Y+47	; 0x2f
     4a6:	20 e0       	ldi	r18, 0x00	; 0
     4a8:	30 e0       	ldi	r19, 0x00	; 0
     4aa:	4a e7       	ldi	r20, 0x7A	; 122
     4ac:	55 e4       	ldi	r21, 0x45	; 69
     4ae:	0e 94 c0 06 	call	0xd80	; 0xd80 <__mulsf3>
     4b2:	dc 01       	movw	r26, r24
     4b4:	cb 01       	movw	r24, r22
     4b6:	88 ab       	std	Y+48, r24	; 0x30
     4b8:	99 ab       	std	Y+49, r25	; 0x31
     4ba:	aa ab       	std	Y+50, r26	; 0x32
     4bc:	bb ab       	std	Y+51, r27	; 0x33
	if (__tmp < 1.0)
     4be:	11 e0       	ldi	r17, 0x01	; 1
     4c0:	68 a9       	ldd	r22, Y+48	; 0x30
     4c2:	79 a9       	ldd	r23, Y+49	; 0x31
     4c4:	8a a9       	ldd	r24, Y+50	; 0x32
     4c6:	9b a9       	ldd	r25, Y+51	; 0x33
     4c8:	20 e0       	ldi	r18, 0x00	; 0
     4ca:	30 e0       	ldi	r19, 0x00	; 0
     4cc:	40 e8       	ldi	r20, 0x80	; 128
     4ce:	5f e3       	ldi	r21, 0x3F	; 63
     4d0:	0e 94 1a 08 	call	0x1034	; 0x1034 <__ltsf2>
     4d4:	88 23       	and	r24, r24
     4d6:	0c f0       	brlt	.+2      	; 0x4da <SEND_TO_LCD+0x444>
     4d8:	10 e0       	ldi	r17, 0x00	; 0
     4da:	11 23       	and	r17, r17
     4dc:	29 f0       	breq	.+10     	; 0x4e8 <SEND_TO_LCD+0x452>
		__ticks = 1;
     4de:	81 e0       	ldi	r24, 0x01	; 1
     4e0:	90 e0       	ldi	r25, 0x00	; 0
     4e2:	9d ab       	std	Y+53, r25	; 0x35
     4e4:	8c ab       	std	Y+52, r24	; 0x34
     4e6:	46 c0       	rjmp	.+140    	; 0x574 <SEND_TO_LCD+0x4de>
	else if (__tmp > 65535)
     4e8:	11 e0       	ldi	r17, 0x01	; 1
     4ea:	68 a9       	ldd	r22, Y+48	; 0x30
     4ec:	79 a9       	ldd	r23, Y+49	; 0x31
     4ee:	8a a9       	ldd	r24, Y+50	; 0x32
     4f0:	9b a9       	ldd	r25, Y+51	; 0x33
     4f2:	20 e0       	ldi	r18, 0x00	; 0
     4f4:	3f ef       	ldi	r19, 0xFF	; 255
     4f6:	4f e7       	ldi	r20, 0x7F	; 127
     4f8:	57 e4       	ldi	r21, 0x47	; 71
     4fa:	0e 94 ba 07 	call	0xf74	; 0xf74 <__gtsf2>
     4fe:	18 16       	cp	r1, r24
     500:	0c f0       	brlt	.+2      	; 0x504 <SEND_TO_LCD+0x46e>
     502:	10 e0       	ldi	r17, 0x00	; 0
     504:	11 23       	and	r17, r17
     506:	61 f1       	breq	.+88     	; 0x560 <SEND_TO_LCD+0x4ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     508:	6c a5       	ldd	r22, Y+44	; 0x2c
     50a:	7d a5       	ldd	r23, Y+45	; 0x2d
     50c:	8e a5       	ldd	r24, Y+46	; 0x2e
     50e:	9f a5       	ldd	r25, Y+47	; 0x2f
     510:	20 e0       	ldi	r18, 0x00	; 0
     512:	30 e0       	ldi	r19, 0x00	; 0
     514:	40 e2       	ldi	r20, 0x20	; 32
     516:	51 e4       	ldi	r21, 0x41	; 65
     518:	0e 94 c0 06 	call	0xd80	; 0xd80 <__mulsf3>
     51c:	dc 01       	movw	r26, r24
     51e:	cb 01       	movw	r24, r22
     520:	bc 01       	movw	r22, r24
     522:	cd 01       	movw	r24, r26
     524:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__fixunssfsi>
     528:	dc 01       	movw	r26, r24
     52a:	cb 01       	movw	r24, r22
     52c:	9d ab       	std	Y+53, r25	; 0x35
     52e:	8c ab       	std	Y+52, r24	; 0x34
     530:	12 c0       	rjmp	.+36     	; 0x556 <SEND_TO_LCD+0x4c0>
     532:	80 e9       	ldi	r24, 0x90	; 144
     534:	91 e0       	ldi	r25, 0x01	; 1
     536:	9f ab       	std	Y+55, r25	; 0x37
     538:	8e ab       	std	Y+54, r24	; 0x36
     53a:	8e a9       	ldd	r24, Y+54	; 0x36
     53c:	9f a9       	ldd	r25, Y+55	; 0x37
     53e:	8c 01       	movw	r16, r24
     540:	c8 01       	movw	r24, r16
     542:	01 97       	sbiw	r24, 0x01	; 1
     544:	f1 f7       	brne	.-4      	; 0x542 <SEND_TO_LCD+0x4ac>
     546:	8c 01       	movw	r16, r24
     548:	1f ab       	std	Y+55, r17	; 0x37
     54a:	0e ab       	std	Y+54, r16	; 0x36
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     54c:	8c a9       	ldd	r24, Y+52	; 0x34
     54e:	9d a9       	ldd	r25, Y+53	; 0x35
     550:	01 97       	sbiw	r24, 0x01	; 1
     552:	9d ab       	std	Y+53, r25	; 0x35
     554:	8c ab       	std	Y+52, r24	; 0x34
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     556:	8c a9       	ldd	r24, Y+52	; 0x34
     558:	9d a9       	ldd	r25, Y+53	; 0x35
     55a:	00 97       	sbiw	r24, 0x00	; 0
     55c:	51 f7       	brne	.-44     	; 0x532 <SEND_TO_LCD+0x49c>
     55e:	17 c0       	rjmp	.+46     	; 0x58e <SEND_TO_LCD+0x4f8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     560:	68 a9       	ldd	r22, Y+48	; 0x30
     562:	79 a9       	ldd	r23, Y+49	; 0x31
     564:	8a a9       	ldd	r24, Y+50	; 0x32
     566:	9b a9       	ldd	r25, Y+51	; 0x33
     568:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__fixunssfsi>
     56c:	dc 01       	movw	r26, r24
     56e:	cb 01       	movw	r24, r22
     570:	9d ab       	std	Y+53, r25	; 0x35
     572:	8c ab       	std	Y+52, r24	; 0x34
     574:	8c a9       	ldd	r24, Y+52	; 0x34
     576:	9d a9       	ldd	r25, Y+53	; 0x35
     578:	99 af       	std	Y+57, r25	; 0x39
     57a:	88 af       	std	Y+56, r24	; 0x38
     57c:	88 ad       	ldd	r24, Y+56	; 0x38
     57e:	99 ad       	ldd	r25, Y+57	; 0x39
     580:	8c 01       	movw	r16, r24
     582:	f8 01       	movw	r30, r16
     584:	31 97       	sbiw	r30, 0x01	; 1
     586:	f1 f7       	brne	.-4      	; 0x584 <SEND_TO_LCD+0x4ee>
     588:	8f 01       	movw	r16, r30
     58a:	19 af       	std	Y+57, r17	; 0x39
     58c:	08 af       	std	Y+56, r16	; 0x38
     58e:	88 e2       	ldi	r24, 0x28	; 40
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	2f ef       	ldi	r18, 0xFF	; 255
     594:	fc 01       	movw	r30, r24
     596:	20 83       	st	Z, r18
     598:	80 e0       	ldi	r24, 0x00	; 0
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	a8 ec       	ldi	r26, 0xC8	; 200
     59e:	b2 e4       	ldi	r27, 0x42	; 66
     5a0:	8a af       	std	Y+58, r24	; 0x3a
     5a2:	9b af       	std	Y+59, r25	; 0x3b
     5a4:	ac af       	std	Y+60, r26	; 0x3c
     5a6:	bd af       	std	Y+61, r27	; 0x3d
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     5a8:	8e 01       	movw	r16, r28
     5aa:	02 5c       	subi	r16, 0xC2	; 194
     5ac:	1f 4f       	sbci	r17, 0xFF	; 255
     5ae:	6a ad       	ldd	r22, Y+58	; 0x3a
     5b0:	7b ad       	ldd	r23, Y+59	; 0x3b
     5b2:	8c ad       	ldd	r24, Y+60	; 0x3c
     5b4:	9d ad       	ldd	r25, Y+61	; 0x3d
     5b6:	20 e0       	ldi	r18, 0x00	; 0
     5b8:	30 e0       	ldi	r19, 0x00	; 0
     5ba:	4a e7       	ldi	r20, 0x7A	; 122
     5bc:	55 e4       	ldi	r21, 0x45	; 69
     5be:	0e 94 c0 06 	call	0xd80	; 0xd80 <__mulsf3>
     5c2:	dc 01       	movw	r26, r24
     5c4:	cb 01       	movw	r24, r22
     5c6:	f8 01       	movw	r30, r16
     5c8:	80 83       	st	Z, r24
     5ca:	91 83       	std	Z+1, r25	; 0x01
     5cc:	a2 83       	std	Z+2, r26	; 0x02
     5ce:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     5d0:	ce 01       	movw	r24, r28
     5d2:	ce 96       	adiw	r24, 0x3e	; 62
     5d4:	11 e0       	ldi	r17, 0x01	; 1
     5d6:	fc 01       	movw	r30, r24
     5d8:	60 81       	ld	r22, Z
     5da:	71 81       	ldd	r23, Z+1	; 0x01
     5dc:	82 81       	ldd	r24, Z+2	; 0x02
     5de:	93 81       	ldd	r25, Z+3	; 0x03
     5e0:	20 e0       	ldi	r18, 0x00	; 0
     5e2:	30 e0       	ldi	r19, 0x00	; 0
     5e4:	40 e8       	ldi	r20, 0x80	; 128
     5e6:	5f e3       	ldi	r21, 0x3F	; 63
     5e8:	0e 94 1a 08 	call	0x1034	; 0x1034 <__ltsf2>
     5ec:	88 23       	and	r24, r24
     5ee:	0c f0       	brlt	.+2      	; 0x5f2 <SEND_TO_LCD+0x55c>
     5f0:	10 e0       	ldi	r17, 0x00	; 0
     5f2:	11 23       	and	r17, r17
     5f4:	49 f0       	breq	.+18     	; 0x608 <SEND_TO_LCD+0x572>
		__ticks = 1;
     5f6:	ce 01       	movw	r24, r28
     5f8:	8e 5b       	subi	r24, 0xBE	; 190
     5fa:	9f 4f       	sbci	r25, 0xFF	; 255
     5fc:	21 e0       	ldi	r18, 0x01	; 1
     5fe:	30 e0       	ldi	r19, 0x00	; 0
     600:	fc 01       	movw	r30, r24
     602:	31 83       	std	Z+1, r19	; 0x01
     604:	20 83       	st	Z, r18
     606:	6e c0       	rjmp	.+220    	; 0x6e4 <SEND_TO_LCD+0x64e>
	else if (__tmp > 65535)
     608:	ce 01       	movw	r24, r28
     60a:	ce 96       	adiw	r24, 0x3e	; 62
     60c:	11 e0       	ldi	r17, 0x01	; 1
     60e:	fc 01       	movw	r30, r24
     610:	60 81       	ld	r22, Z
     612:	71 81       	ldd	r23, Z+1	; 0x01
     614:	82 81       	ldd	r24, Z+2	; 0x02
     616:	93 81       	ldd	r25, Z+3	; 0x03
     618:	20 e0       	ldi	r18, 0x00	; 0
     61a:	3f ef       	ldi	r19, 0xFF	; 255
     61c:	4f e7       	ldi	r20, 0x7F	; 127
     61e:	57 e4       	ldi	r21, 0x47	; 71
     620:	0e 94 ba 07 	call	0xf74	; 0xf74 <__gtsf2>
     624:	18 16       	cp	r1, r24
     626:	0c f0       	brlt	.+2      	; 0x62a <SEND_TO_LCD+0x594>
     628:	10 e0       	ldi	r17, 0x00	; 0
     62a:	11 23       	and	r17, r17
     62c:	09 f4       	brne	.+2      	; 0x630 <SEND_TO_LCD+0x59a>
     62e:	49 c0       	rjmp	.+146    	; 0x6c2 <SEND_TO_LCD+0x62c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     630:	6a ad       	ldd	r22, Y+58	; 0x3a
     632:	7b ad       	ldd	r23, Y+59	; 0x3b
     634:	8c ad       	ldd	r24, Y+60	; 0x3c
     636:	9d ad       	ldd	r25, Y+61	; 0x3d
     638:	20 e0       	ldi	r18, 0x00	; 0
     63a:	30 e0       	ldi	r19, 0x00	; 0
     63c:	40 e2       	ldi	r20, 0x20	; 32
     63e:	51 e4       	ldi	r21, 0x41	; 65
     640:	0e 94 c0 06 	call	0xd80	; 0xd80 <__mulsf3>
     644:	dc 01       	movw	r26, r24
     646:	cb 01       	movw	r24, r22
     648:	8e 01       	movw	r16, r28
     64a:	0e 5b       	subi	r16, 0xBE	; 190
     64c:	1f 4f       	sbci	r17, 0xFF	; 255
     64e:	bc 01       	movw	r22, r24
     650:	cd 01       	movw	r24, r26
     652:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__fixunssfsi>
     656:	dc 01       	movw	r26, r24
     658:	cb 01       	movw	r24, r22
     65a:	f8 01       	movw	r30, r16
     65c:	91 83       	std	Z+1, r25	; 0x01
     65e:	80 83       	st	Z, r24
     660:	27 c0       	rjmp	.+78     	; 0x6b0 <SEND_TO_LCD+0x61a>
     662:	ce 01       	movw	r24, r28
     664:	8c 5b       	subi	r24, 0xBC	; 188
     666:	9f 4f       	sbci	r25, 0xFF	; 255
     668:	20 e9       	ldi	r18, 0x90	; 144
     66a:	31 e0       	ldi	r19, 0x01	; 1
     66c:	fc 01       	movw	r30, r24
     66e:	31 83       	std	Z+1, r19	; 0x01
     670:	20 83       	st	Z, r18
     672:	ce 01       	movw	r24, r28
     674:	8c 5b       	subi	r24, 0xBC	; 188
     676:	9f 4f       	sbci	r25, 0xFF	; 255
     678:	fc 01       	movw	r30, r24
     67a:	80 81       	ld	r24, Z
     67c:	91 81       	ldd	r25, Z+1	; 0x01
     67e:	8c 01       	movw	r16, r24
     680:	c8 01       	movw	r24, r16
     682:	01 97       	sbiw	r24, 0x01	; 1
     684:	f1 f7       	brne	.-4      	; 0x682 <SEND_TO_LCD+0x5ec>
     686:	8c 01       	movw	r16, r24
     688:	ce 01       	movw	r24, r28
     68a:	8c 5b       	subi	r24, 0xBC	; 188
     68c:	9f 4f       	sbci	r25, 0xFF	; 255
     68e:	fc 01       	movw	r30, r24
     690:	11 83       	std	Z+1, r17	; 0x01
     692:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     694:	ce 01       	movw	r24, r28
     696:	8e 5b       	subi	r24, 0xBE	; 190
     698:	9f 4f       	sbci	r25, 0xFF	; 255
     69a:	9e 01       	movw	r18, r28
     69c:	2e 5b       	subi	r18, 0xBE	; 190
     69e:	3f 4f       	sbci	r19, 0xFF	; 255
     6a0:	f9 01       	movw	r30, r18
     6a2:	20 81       	ld	r18, Z
     6a4:	31 81       	ldd	r19, Z+1	; 0x01
     6a6:	21 50       	subi	r18, 0x01	; 1
     6a8:	30 40       	sbci	r19, 0x00	; 0
     6aa:	fc 01       	movw	r30, r24
     6ac:	31 83       	std	Z+1, r19	; 0x01
     6ae:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6b0:	ce 01       	movw	r24, r28
     6b2:	8e 5b       	subi	r24, 0xBE	; 190
     6b4:	9f 4f       	sbci	r25, 0xFF	; 255
     6b6:	fc 01       	movw	r30, r24
     6b8:	80 81       	ld	r24, Z
     6ba:	91 81       	ldd	r25, Z+1	; 0x01
     6bc:	00 97       	sbiw	r24, 0x00	; 0
     6be:	89 f6       	brne	.-94     	; 0x662 <SEND_TO_LCD+0x5cc>
     6c0:	2e c0       	rjmp	.+92     	; 0x71e <SEND_TO_LCD+0x688>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     6c2:	8e 01       	movw	r16, r28
     6c4:	0e 5b       	subi	r16, 0xBE	; 190
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	ce 96       	adiw	r24, 0x3e	; 62
     6cc:	fc 01       	movw	r30, r24
     6ce:	60 81       	ld	r22, Z
     6d0:	71 81       	ldd	r23, Z+1	; 0x01
     6d2:	82 81       	ldd	r24, Z+2	; 0x02
     6d4:	93 81       	ldd	r25, Z+3	; 0x03
     6d6:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__fixunssfsi>
     6da:	dc 01       	movw	r26, r24
     6dc:	cb 01       	movw	r24, r22
     6de:	f8 01       	movw	r30, r16
     6e0:	91 83       	std	Z+1, r25	; 0x01
     6e2:	80 83       	st	Z, r24
     6e4:	ce 01       	movw	r24, r28
     6e6:	8a 5b       	subi	r24, 0xBA	; 186
     6e8:	9f 4f       	sbci	r25, 0xFF	; 255
     6ea:	9e 01       	movw	r18, r28
     6ec:	2e 5b       	subi	r18, 0xBE	; 190
     6ee:	3f 4f       	sbci	r19, 0xFF	; 255
     6f0:	f9 01       	movw	r30, r18
     6f2:	20 81       	ld	r18, Z
     6f4:	31 81       	ldd	r19, Z+1	; 0x01
     6f6:	fc 01       	movw	r30, r24
     6f8:	31 83       	std	Z+1, r19	; 0x01
     6fa:	20 83       	st	Z, r18
     6fc:	ce 01       	movw	r24, r28
     6fe:	8a 5b       	subi	r24, 0xBA	; 186
     700:	9f 4f       	sbci	r25, 0xFF	; 255
     702:	fc 01       	movw	r30, r24
     704:	80 81       	ld	r24, Z
     706:	91 81       	ldd	r25, Z+1	; 0x01
     708:	8c 01       	movw	r16, r24
     70a:	c8 01       	movw	r24, r16
     70c:	01 97       	sbiw	r24, 0x01	; 1
     70e:	f1 f7       	brne	.-4      	; 0x70c <SEND_TO_LCD+0x676>
     710:	8c 01       	movw	r16, r24
     712:	ce 01       	movw	r24, r28
     714:	8a 5b       	subi	r24, 0xBA	; 186
     716:	9f 4f       	sbci	r25, 0xFF	; 255
     718:	fc 01       	movw	r30, r24
     71a:	11 83       	std	Z+1, r17	; 0x01
     71c:	00 83       	st	Z, r16
	_delay_ms(100);
}
     71e:	c7 5b       	subi	r28, 0xB7	; 183
     720:	df 4f       	sbci	r29, 0xFF	; 255
     722:	0f b6       	in	r0, 0x3f	; 63
     724:	f8 94       	cli
     726:	de bf       	out	0x3e, r29	; 62
     728:	0f be       	out	0x3f, r0	; 63
     72a:	cd bf       	out	0x3d, r28	; 61
     72c:	cf 91       	pop	r28
     72e:	df 91       	pop	r29
     730:	1f 91       	pop	r17
     732:	0f 91       	pop	r16
     734:	08 95       	ret

00000736 <INIT_LCD>:

void INIT_LCD()
{
     736:	df 93       	push	r29
     738:	cf 93       	push	r28
     73a:	cd b7       	in	r28, 0x3d	; 61
     73c:	de b7       	in	r29, 0x3e	; 62
	SEND_TO_LCD(set_size,CMD);
     73e:	88 e3       	ldi	r24, 0x38	; 56
     740:	60 e0       	ldi	r22, 0x00	; 0
     742:	0e 94 4b 00 	call	0x96	; 0x96 <SEND_TO_LCD>
	SEND_TO_LCD(clr,CMD);
     746:	81 e0       	ldi	r24, 0x01	; 1
     748:	60 e0       	ldi	r22, 0x00	; 0
     74a:	0e 94 4b 00 	call	0x96	; 0x96 <SEND_TO_LCD>
	SEND_TO_LCD(display_on,CMD)	;
     74e:	8e e0       	ldi	r24, 0x0E	; 14
     750:	60 e0       	ldi	r22, 0x00	; 0
     752:	0e 94 4b 00 	call	0x96	; 0x96 <SEND_TO_LCD>
}
     756:	cf 91       	pop	r28
     758:	df 91       	pop	r29
     75a:	08 95       	ret

0000075c <write_to_LCD>:

void write_to_LCD(char ch){
     75c:	df 93       	push	r29
     75e:	cf 93       	push	r28
     760:	0f 92       	push	r0
     762:	cd b7       	in	r28, 0x3d	; 61
     764:	de b7       	in	r29, 0x3e	; 62
     766:	89 83       	std	Y+1, r24	; 0x01
	SEND_TO_LCD(ch,DATA);
     768:	89 81       	ldd	r24, Y+1	; 0x01
     76a:	61 e0       	ldi	r22, 0x01	; 1
     76c:	0e 94 4b 00 	call	0x96	; 0x96 <SEND_TO_LCD>
}
     770:	0f 90       	pop	r0
     772:	cf 91       	pop	r28
     774:	df 91       	pop	r29
     776:	08 95       	ret

00000778 <print_to_LCD>:

void print_to_LCD(char *str){
     778:	df 93       	push	r29
     77a:	cf 93       	push	r28
     77c:	00 d0       	rcall	.+0      	; 0x77e <print_to_LCD+0x6>
     77e:	cd b7       	in	r28, 0x3d	; 61
     780:	de b7       	in	r29, 0x3e	; 62
     782:	9a 83       	std	Y+2, r25	; 0x02
     784:	89 83       	std	Y+1, r24	; 0x01
	while(*str != '\0')
     786:	0b c0       	rjmp	.+22     	; 0x79e <print_to_LCD+0x26>
	{
		write_to_LCD(*str);
     788:	89 81       	ldd	r24, Y+1	; 0x01
     78a:	9a 81       	ldd	r25, Y+2	; 0x02
     78c:	fc 01       	movw	r30, r24
     78e:	80 81       	ld	r24, Z
     790:	0e 94 ae 03 	call	0x75c	; 0x75c <write_to_LCD>
		str++;
     794:	89 81       	ldd	r24, Y+1	; 0x01
     796:	9a 81       	ldd	r25, Y+2	; 0x02
     798:	01 96       	adiw	r24, 0x01	; 1
     79a:	9a 83       	std	Y+2, r25	; 0x02
     79c:	89 83       	std	Y+1, r24	; 0x01
void write_to_LCD(char ch){
	SEND_TO_LCD(ch,DATA);
}

void print_to_LCD(char *str){
	while(*str != '\0')
     79e:	89 81       	ldd	r24, Y+1	; 0x01
     7a0:	9a 81       	ldd	r25, Y+2	; 0x02
     7a2:	fc 01       	movw	r30, r24
     7a4:	80 81       	ld	r24, Z
     7a6:	88 23       	and	r24, r24
     7a8:	79 f7       	brne	.-34     	; 0x788 <print_to_LCD+0x10>
	{
		write_to_LCD(*str);
		str++;
	}
}
     7aa:	0f 90       	pop	r0
     7ac:	0f 90       	pop	r0
     7ae:	cf 91       	pop	r28
     7b0:	df 91       	pop	r29
     7b2:	08 95       	ret

000007b4 <Read_from_keypad>:

char Read_from_keypad(){
     7b4:	df 93       	push	r29
     7b6:	cf 93       	push	r28
     7b8:	cd b7       	in	r28, 0x3d	; 61
     7ba:	de b7       	in	r29, 0x3e	; 62
				write_to_port(255-(1<<i),Control);
				tmp=read_from_port(Key);
				for(int j=0;j<4;j++)if(tmp==(255-(1<<j)))  return keys[i-4][j];
			}
	}*/
}
     7bc:	cf 91       	pop	r28
     7be:	df 91       	pop	r29
     7c0:	08 95       	ret

000007c2 <Sign_to_Unsign>:

int Sign_to_Unsign(char *sign,int Num ,int x){
     7c2:	df 93       	push	r29
     7c4:	cf 93       	push	r28
     7c6:	00 d0       	rcall	.+0      	; 0x7c8 <Sign_to_Unsign+0x6>
     7c8:	00 d0       	rcall	.+0      	; 0x7ca <Sign_to_Unsign+0x8>
     7ca:	00 d0       	rcall	.+0      	; 0x7cc <Sign_to_Unsign+0xa>
     7cc:	cd b7       	in	r28, 0x3d	; 61
     7ce:	de b7       	in	r29, 0x3e	; 62
     7d0:	9a 83       	std	Y+2, r25	; 0x02
     7d2:	89 83       	std	Y+1, r24	; 0x01
     7d4:	7c 83       	std	Y+4, r23	; 0x04
     7d6:	6b 83       	std	Y+3, r22	; 0x03
     7d8:	5e 83       	std	Y+6, r21	; 0x06
     7da:	4d 83       	std	Y+5, r20	; 0x05
		ret+=sign[Num]-'0';
		ret*=10;
		Num++;
	}
	return (ret/10)*mul;*/
}
     7dc:	26 96       	adiw	r28, 0x06	; 6
     7de:	0f b6       	in	r0, 0x3f	; 63
     7e0:	f8 94       	cli
     7e2:	de bf       	out	0x3e, r29	; 62
     7e4:	0f be       	out	0x3f, r0	; 63
     7e6:	cd bf       	out	0x3d, r28	; 61
     7e8:	cf 91       	pop	r28
     7ea:	df 91       	pop	r29
     7ec:	08 95       	ret

000007ee <res>:
 
int res(int firNum ,int SecNum,char op){
     7ee:	df 93       	push	r29
     7f0:	cf 93       	push	r28
     7f2:	00 d0       	rcall	.+0      	; 0x7f4 <res+0x6>
     7f4:	00 d0       	rcall	.+0      	; 0x7f6 <res+0x8>
     7f6:	0f 92       	push	r0
     7f8:	cd b7       	in	r28, 0x3d	; 61
     7fa:	de b7       	in	r29, 0x3e	; 62
     7fc:	9a 83       	std	Y+2, r25	; 0x02
     7fe:	89 83       	std	Y+1, r24	; 0x01
     800:	7c 83       	std	Y+4, r23	; 0x04
     802:	6b 83       	std	Y+3, r22	; 0x03
     804:	4d 83       	std	Y+5, r20	; 0x05
			if(SecNum=0)
			  write_to_LCD(Error);
			else
			  return firNum/SecNum;  
		} */			
}
     806:	0f 90       	pop	r0
     808:	0f 90       	pop	r0
     80a:	0f 90       	pop	r0
     80c:	0f 90       	pop	r0
     80e:	0f 90       	pop	r0
     810:	cf 91       	pop	r28
     812:	df 91       	pop	r29
     814:	08 95       	ret

00000816 <operate>:

void operate(){
     816:	df 93       	push	r29
     818:	cf 93       	push	r28
     81a:	cd b7       	in	r28, 0x3d	; 61
     81c:	de b7       	in	r29, 0x3e	; 62
				break;
			}
			if (arr[i]=='=') return ;
		}
	}*/
}
     81e:	cf 91       	pop	r28
     820:	df 91       	pop	r29
     822:	08 95       	ret

00000824 <to_string>:

void to_string(int in){ 
     824:	df 93       	push	r29
     826:	cf 93       	push	r28
     828:	00 d0       	rcall	.+0      	; 0x82a <to_string+0x6>
     82a:	cd b7       	in	r28, 0x3d	; 61
     82c:	de b7       	in	r29, 0x3e	; 62
     82e:	9a 83       	std	Y+2, r25	; 0x02
     830:	89 83       	std	Y+1, r24	; 0x01
		tarr[ptr++]=(in%10)+'0';
		in/=10;
	}
	if (tmp<0) tarr[ptr++]='-';
	for (int i=0;i<ptr;i++) arr[i]=tarr[ptr-1-i];*/
}
     832:	0f 90       	pop	r0
     834:	0f 90       	pop	r0
     836:	cf 91       	pop	r28
     838:	df 91       	pop	r29
     83a:	08 95       	ret

0000083c <calculate>:

int calculate(){
     83c:	df 93       	push	r29
     83e:	cf 93       	push	r28
     840:	cd b7       	in	r28, 0x3d	; 61
     842:	de b7       	in	r29, 0x3e	; 62
		f=Sign_to_Unsign(arr,0,pos-1);
		s=Sign_to_Unsign(arr,pos+1,sz-2);
		return res(f,s,op);
	}
*/
}
     844:	cf 91       	pop	r28
     846:	df 91       	pop	r29
     848:	08 95       	ret

0000084a <main>:
	write_to_calc(lcd_ctrl_port,1);
	_delay_ms(1000);
}*/

int main(void)
{
     84a:	0f 93       	push	r16
     84c:	1f 93       	push	r17
     84e:	df 93       	push	r29
     850:	cf 93       	push	r28
     852:	cd b7       	in	r28, 0x3d	; 61
     854:	de b7       	in	r29, 0x3e	; 62
     856:	2e 97       	sbiw	r28, 0x0e	; 14
     858:	0f b6       	in	r0, 0x3f	; 63
     85a:	f8 94       	cli
     85c:	de bf       	out	0x3e, r29	; 62
     85e:	0f be       	out	0x3f, r0	; 63
     860:	cd bf       	out	0x3d, r28	; 61
	init_calc();
     862:	84 e2       	ldi	r24, 0x24	; 36
     864:	90 e0       	ldi	r25, 0x00	; 0
     866:	2f ef       	ldi	r18, 0xFF	; 255
     868:	fc 01       	movw	r30, r24
     86a:	20 83       	st	Z, r18
     86c:	87 e2       	ldi	r24, 0x27	; 39
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	2f ef       	ldi	r18, 0xFF	; 255
     872:	fc 01       	movw	r30, r24
     874:	20 83       	st	Z, r18
     876:	88 e2       	ldi	r24, 0x28	; 40
     878:	90 e0       	ldi	r25, 0x00	; 0
     87a:	2f ef       	ldi	r18, 0xFF	; 255
     87c:	fc 01       	movw	r30, r24
     87e:	20 83       	st	Z, r18
     880:	8a e2       	ldi	r24, 0x2A	; 42
     882:	90 e0       	ldi	r25, 0x00	; 0
     884:	2f ef       	ldi	r18, 0xFF	; 255
     886:	fc 01       	movw	r30, r24
     888:	20 83       	st	Z, r18
     88a:	85 e2       	ldi	r24, 0x25	; 37
     88c:	90 e0       	ldi	r25, 0x00	; 0
     88e:	23 e0       	ldi	r18, 0x03	; 3
     890:	fc 01       	movw	r30, r24
     892:	20 83       	st	Z, r18
     894:	8b e2       	ldi	r24, 0x2B	; 43
     896:	90 e0       	ldi	r25, 0x00	; 0
     898:	21 e8       	ldi	r18, 0x81	; 129
     89a:	fc 01       	movw	r30, r24
     89c:	20 83       	st	Z, r18
     89e:	88 e2       	ldi	r24, 0x28	; 40
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	2d ef       	ldi	r18, 0xFD	; 253
     8a4:	fc 01       	movw	r30, r24
     8a6:	20 83       	st	Z, r18
     8a8:	80 e0       	ldi	r24, 0x00	; 0
     8aa:	90 e0       	ldi	r25, 0x00	; 0
     8ac:	a0 e2       	ldi	r26, 0x20	; 32
     8ae:	b1 e4       	ldi	r27, 0x41	; 65
     8b0:	89 83       	std	Y+1, r24	; 0x01
     8b2:	9a 83       	std	Y+2, r25	; 0x02
     8b4:	ab 83       	std	Y+3, r26	; 0x03
     8b6:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     8b8:	69 81       	ldd	r22, Y+1	; 0x01
     8ba:	7a 81       	ldd	r23, Y+2	; 0x02
     8bc:	8b 81       	ldd	r24, Y+3	; 0x03
     8be:	9c 81       	ldd	r25, Y+4	; 0x04
     8c0:	20 e0       	ldi	r18, 0x00	; 0
     8c2:	30 e0       	ldi	r19, 0x00	; 0
     8c4:	4a e7       	ldi	r20, 0x7A	; 122
     8c6:	55 e4       	ldi	r21, 0x45	; 69
     8c8:	0e 94 c0 06 	call	0xd80	; 0xd80 <__mulsf3>
     8cc:	dc 01       	movw	r26, r24
     8ce:	cb 01       	movw	r24, r22
     8d0:	8d 83       	std	Y+5, r24	; 0x05
     8d2:	9e 83       	std	Y+6, r25	; 0x06
     8d4:	af 83       	std	Y+7, r26	; 0x07
     8d6:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     8d8:	11 e0       	ldi	r17, 0x01	; 1
     8da:	6d 81       	ldd	r22, Y+5	; 0x05
     8dc:	7e 81       	ldd	r23, Y+6	; 0x06
     8de:	8f 81       	ldd	r24, Y+7	; 0x07
     8e0:	98 85       	ldd	r25, Y+8	; 0x08
     8e2:	20 e0       	ldi	r18, 0x00	; 0
     8e4:	30 e0       	ldi	r19, 0x00	; 0
     8e6:	40 e8       	ldi	r20, 0x80	; 128
     8e8:	5f e3       	ldi	r21, 0x3F	; 63
     8ea:	0e 94 1a 08 	call	0x1034	; 0x1034 <__ltsf2>
     8ee:	88 23       	and	r24, r24
     8f0:	0c f0       	brlt	.+2      	; 0x8f4 <main+0xaa>
     8f2:	10 e0       	ldi	r17, 0x00	; 0
     8f4:	11 23       	and	r17, r17
     8f6:	29 f0       	breq	.+10     	; 0x902 <__stack+0x3>
		__ticks = 1;
     8f8:	81 e0       	ldi	r24, 0x01	; 1
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	9a 87       	std	Y+10, r25	; 0x0a
     8fe:	89 87       	std	Y+9, r24	; 0x09
     900:	46 c0       	rjmp	.+140    	; 0x98e <__stack+0x8f>
	else if (__tmp > 65535)
     902:	11 e0       	ldi	r17, 0x01	; 1
     904:	6d 81       	ldd	r22, Y+5	; 0x05
     906:	7e 81       	ldd	r23, Y+6	; 0x06
     908:	8f 81       	ldd	r24, Y+7	; 0x07
     90a:	98 85       	ldd	r25, Y+8	; 0x08
     90c:	20 e0       	ldi	r18, 0x00	; 0
     90e:	3f ef       	ldi	r19, 0xFF	; 255
     910:	4f e7       	ldi	r20, 0x7F	; 127
     912:	57 e4       	ldi	r21, 0x47	; 71
     914:	0e 94 ba 07 	call	0xf74	; 0xf74 <__gtsf2>
     918:	18 16       	cp	r1, r24
     91a:	0c f0       	brlt	.+2      	; 0x91e <__stack+0x1f>
     91c:	10 e0       	ldi	r17, 0x00	; 0
     91e:	11 23       	and	r17, r17
     920:	61 f1       	breq	.+88     	; 0x97a <__stack+0x7b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     922:	69 81       	ldd	r22, Y+1	; 0x01
     924:	7a 81       	ldd	r23, Y+2	; 0x02
     926:	8b 81       	ldd	r24, Y+3	; 0x03
     928:	9c 81       	ldd	r25, Y+4	; 0x04
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 e2       	ldi	r20, 0x20	; 32
     930:	51 e4       	ldi	r21, 0x41	; 65
     932:	0e 94 c0 06 	call	0xd80	; 0xd80 <__mulsf3>
     936:	dc 01       	movw	r26, r24
     938:	cb 01       	movw	r24, r22
     93a:	bc 01       	movw	r22, r24
     93c:	cd 01       	movw	r24, r26
     93e:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__fixunssfsi>
     942:	dc 01       	movw	r26, r24
     944:	cb 01       	movw	r24, r22
     946:	9a 87       	std	Y+10, r25	; 0x0a
     948:	89 87       	std	Y+9, r24	; 0x09
     94a:	12 c0       	rjmp	.+36     	; 0x970 <__stack+0x71>
     94c:	80 e9       	ldi	r24, 0x90	; 144
     94e:	91 e0       	ldi	r25, 0x01	; 1
     950:	9c 87       	std	Y+12, r25	; 0x0c
     952:	8b 87       	std	Y+11, r24	; 0x0b
     954:	8b 85       	ldd	r24, Y+11	; 0x0b
     956:	9c 85       	ldd	r25, Y+12	; 0x0c
     958:	8c 01       	movw	r16, r24
     95a:	c8 01       	movw	r24, r16
     95c:	01 97       	sbiw	r24, 0x01	; 1
     95e:	f1 f7       	brne	.-4      	; 0x95c <__stack+0x5d>
     960:	8c 01       	movw	r16, r24
     962:	1c 87       	std	Y+12, r17	; 0x0c
     964:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     966:	89 85       	ldd	r24, Y+9	; 0x09
     968:	9a 85       	ldd	r25, Y+10	; 0x0a
     96a:	01 97       	sbiw	r24, 0x01	; 1
     96c:	9a 87       	std	Y+10, r25	; 0x0a
     96e:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     970:	89 85       	ldd	r24, Y+9	; 0x09
     972:	9a 85       	ldd	r25, Y+10	; 0x0a
     974:	00 97       	sbiw	r24, 0x00	; 0
     976:	51 f7       	brne	.-44     	; 0x94c <__stack+0x4d>
     978:	17 c0       	rjmp	.+46     	; 0x9a8 <__stack+0xa9>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     97a:	6d 81       	ldd	r22, Y+5	; 0x05
     97c:	7e 81       	ldd	r23, Y+6	; 0x06
     97e:	8f 81       	ldd	r24, Y+7	; 0x07
     980:	98 85       	ldd	r25, Y+8	; 0x08
     982:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__fixunssfsi>
     986:	dc 01       	movw	r26, r24
     988:	cb 01       	movw	r24, r22
     98a:	9a 87       	std	Y+10, r25	; 0x0a
     98c:	89 87       	std	Y+9, r24	; 0x09
     98e:	89 85       	ldd	r24, Y+9	; 0x09
     990:	9a 85       	ldd	r25, Y+10	; 0x0a
     992:	9e 87       	std	Y+14, r25	; 0x0e
     994:	8d 87       	std	Y+13, r24	; 0x0d
     996:	8d 85       	ldd	r24, Y+13	; 0x0d
     998:	9e 85       	ldd	r25, Y+14	; 0x0e
     99a:	8c 01       	movw	r16, r24
     99c:	f8 01       	movw	r30, r16
     99e:	31 97       	sbiw	r30, 0x01	; 1
     9a0:	f1 f7       	brne	.-4      	; 0x99e <__stack+0x9f>
     9a2:	8f 01       	movw	r16, r30
     9a4:	1e 87       	std	Y+14, r17	; 0x0e
     9a6:	0d 87       	std	Y+13, r16	; 0x0d
     9a8:	88 e2       	ldi	r24, 0x28	; 40
     9aa:	90 e0       	ldi	r25, 0x00	; 0
     9ac:	2f ef       	ldi	r18, 0xFF	; 255
     9ae:	fc 01       	movw	r30, r24
     9b0:	20 83       	st	Z, r18
	INIT_LCD();
     9b2:	0e 94 9b 03 	call	0x736	; 0x736 <INIT_LCD>
	print_to_LCD("hello");
     9b6:	80 e1       	ldi	r24, 0x10	; 16
     9b8:	91 e0       	ldi	r25, 0x01	; 1
     9ba:	0e 94 bc 03 	call	0x778	; 0x778 <print_to_LCD>
	return 0;
     9be:	80 e0       	ldi	r24, 0x00	; 0
     9c0:	90 e0       	ldi	r25, 0x00	; 0
     9c2:	2e 96       	adiw	r28, 0x0e	; 14
     9c4:	0f b6       	in	r0, 0x3f	; 63
     9c6:	f8 94       	cli
     9c8:	de bf       	out	0x3e, r29	; 62
     9ca:	0f be       	out	0x3f, r0	; 63
     9cc:	cd bf       	out	0x3d, r28	; 61
     9ce:	cf 91       	pop	r28
     9d0:	df 91       	pop	r29
     9d2:	1f 91       	pop	r17
     9d4:	0f 91       	pop	r16
     9d6:	08 95       	ret

000009d8 <__fixunssfsi>:
     9d8:	ef 92       	push	r14
     9da:	ff 92       	push	r15
     9dc:	0f 93       	push	r16
     9de:	1f 93       	push	r17
     9e0:	7b 01       	movw	r14, r22
     9e2:	8c 01       	movw	r16, r24
     9e4:	20 e0       	ldi	r18, 0x00	; 0
     9e6:	30 e0       	ldi	r19, 0x00	; 0
     9e8:	40 e0       	ldi	r20, 0x00	; 0
     9ea:	5f e4       	ldi	r21, 0x4F	; 79
     9ec:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <__gesf2>
     9f0:	87 fd       	sbrc	r24, 7
     9f2:	11 c0       	rjmp	.+34     	; 0xa16 <__fixunssfsi+0x3e>
     9f4:	c8 01       	movw	r24, r16
     9f6:	b7 01       	movw	r22, r14
     9f8:	20 e0       	ldi	r18, 0x00	; 0
     9fa:	30 e0       	ldi	r19, 0x00	; 0
     9fc:	40 e0       	ldi	r20, 0x00	; 0
     9fe:	5f e4       	ldi	r21, 0x4F	; 79
     a00:	0e 94 8f 06 	call	0xd1e	; 0xd1e <__subsf3>
     a04:	0e 94 4a 08 	call	0x1094	; 0x1094 <__fixsfsi>
     a08:	9b 01       	movw	r18, r22
     a0a:	ac 01       	movw	r20, r24
     a0c:	20 50       	subi	r18, 0x00	; 0
     a0e:	30 40       	sbci	r19, 0x00	; 0
     a10:	40 40       	sbci	r20, 0x00	; 0
     a12:	50 48       	sbci	r21, 0x80	; 128
     a14:	06 c0       	rjmp	.+12     	; 0xa22 <__fixunssfsi+0x4a>
     a16:	c8 01       	movw	r24, r16
     a18:	b7 01       	movw	r22, r14
     a1a:	0e 94 4a 08 	call	0x1094	; 0x1094 <__fixsfsi>
     a1e:	9b 01       	movw	r18, r22
     a20:	ac 01       	movw	r20, r24
     a22:	b9 01       	movw	r22, r18
     a24:	ca 01       	movw	r24, r20
     a26:	1f 91       	pop	r17
     a28:	0f 91       	pop	r16
     a2a:	ff 90       	pop	r15
     a2c:	ef 90       	pop	r14
     a2e:	08 95       	ret

00000a30 <_fpadd_parts>:
     a30:	a0 e0       	ldi	r26, 0x00	; 0
     a32:	b0 e0       	ldi	r27, 0x00	; 0
     a34:	ee e1       	ldi	r30, 0x1E	; 30
     a36:	f5 e0       	ldi	r31, 0x05	; 5
     a38:	0c 94 30 0a 	jmp	0x1460	; 0x1460 <__prologue_saves__+0x8>
     a3c:	fc 01       	movw	r30, r24
     a3e:	ea 01       	movw	r28, r20
     a40:	80 81       	ld	r24, Z
     a42:	82 30       	cpi	r24, 0x02	; 2
     a44:	08 f4       	brcc	.+2      	; 0xa48 <_fpadd_parts+0x18>
     a46:	38 c1       	rjmp	.+624    	; 0xcb8 <_fpadd_parts+0x288>
     a48:	db 01       	movw	r26, r22
     a4a:	9c 91       	ld	r25, X
     a4c:	92 30       	cpi	r25, 0x02	; 2
     a4e:	08 f4       	brcc	.+2      	; 0xa52 <_fpadd_parts+0x22>
     a50:	30 c1       	rjmp	.+608    	; 0xcb2 <_fpadd_parts+0x282>
     a52:	84 30       	cpi	r24, 0x04	; 4
     a54:	59 f4       	brne	.+22     	; 0xa6c <_fpadd_parts+0x3c>
     a56:	94 30       	cpi	r25, 0x04	; 4
     a58:	09 f0       	breq	.+2      	; 0xa5c <_fpadd_parts+0x2c>
     a5a:	2e c1       	rjmp	.+604    	; 0xcb8 <_fpadd_parts+0x288>
     a5c:	91 81       	ldd	r25, Z+1	; 0x01
     a5e:	11 96       	adiw	r26, 0x01	; 1
     a60:	8c 91       	ld	r24, X
     a62:	11 97       	sbiw	r26, 0x01	; 1
     a64:	98 17       	cp	r25, r24
     a66:	09 f0       	breq	.+2      	; 0xa6a <_fpadd_parts+0x3a>
     a68:	21 c1       	rjmp	.+578    	; 0xcac <_fpadd_parts+0x27c>
     a6a:	26 c1       	rjmp	.+588    	; 0xcb8 <_fpadd_parts+0x288>
     a6c:	94 30       	cpi	r25, 0x04	; 4
     a6e:	09 f4       	brne	.+2      	; 0xa72 <_fpadd_parts+0x42>
     a70:	20 c1       	rjmp	.+576    	; 0xcb2 <_fpadd_parts+0x282>
     a72:	92 30       	cpi	r25, 0x02	; 2
     a74:	b1 f4       	brne	.+44     	; 0xaa2 <_fpadd_parts+0x72>
     a76:	82 30       	cpi	r24, 0x02	; 2
     a78:	09 f0       	breq	.+2      	; 0xa7c <_fpadd_parts+0x4c>
     a7a:	1e c1       	rjmp	.+572    	; 0xcb8 <_fpadd_parts+0x288>
     a7c:	ca 01       	movw	r24, r20
     a7e:	af 01       	movw	r20, r30
     a80:	28 e0       	ldi	r18, 0x08	; 8
     a82:	da 01       	movw	r26, r20
     a84:	0d 90       	ld	r0, X+
     a86:	ad 01       	movw	r20, r26
     a88:	dc 01       	movw	r26, r24
     a8a:	0d 92       	st	X+, r0
     a8c:	cd 01       	movw	r24, r26
     a8e:	21 50       	subi	r18, 0x01	; 1
     a90:	c1 f7       	brne	.-16     	; 0xa82 <_fpadd_parts+0x52>
     a92:	db 01       	movw	r26, r22
     a94:	11 96       	adiw	r26, 0x01	; 1
     a96:	8c 91       	ld	r24, X
     a98:	11 97       	sbiw	r26, 0x01	; 1
     a9a:	91 81       	ldd	r25, Z+1	; 0x01
     a9c:	89 23       	and	r24, r25
     a9e:	89 83       	std	Y+1, r24	; 0x01
     aa0:	0a c1       	rjmp	.+532    	; 0xcb6 <_fpadd_parts+0x286>
     aa2:	82 30       	cpi	r24, 0x02	; 2
     aa4:	09 f4       	brne	.+2      	; 0xaa8 <_fpadd_parts+0x78>
     aa6:	05 c1       	rjmp	.+522    	; 0xcb2 <_fpadd_parts+0x282>
     aa8:	c2 80       	ldd	r12, Z+2	; 0x02
     aaa:	d3 80       	ldd	r13, Z+3	; 0x03
     aac:	db 01       	movw	r26, r22
     aae:	12 96       	adiw	r26, 0x02	; 2
     ab0:	6d 90       	ld	r6, X+
     ab2:	7c 90       	ld	r7, X
     ab4:	13 97       	sbiw	r26, 0x03	; 3
     ab6:	24 81       	ldd	r18, Z+4	; 0x04
     ab8:	35 81       	ldd	r19, Z+5	; 0x05
     aba:	46 81       	ldd	r20, Z+6	; 0x06
     abc:	57 81       	ldd	r21, Z+7	; 0x07
     abe:	14 96       	adiw	r26, 0x04	; 4
     ac0:	ed 90       	ld	r14, X+
     ac2:	fd 90       	ld	r15, X+
     ac4:	0d 91       	ld	r16, X+
     ac6:	1c 91       	ld	r17, X
     ac8:	17 97       	sbiw	r26, 0x07	; 7
     aca:	c6 01       	movw	r24, r12
     acc:	86 19       	sub	r24, r6
     ace:	97 09       	sbc	r25, r7
     ad0:	5c 01       	movw	r10, r24
     ad2:	97 ff       	sbrs	r25, 7
     ad4:	04 c0       	rjmp	.+8      	; 0xade <_fpadd_parts+0xae>
     ad6:	aa 24       	eor	r10, r10
     ad8:	bb 24       	eor	r11, r11
     ada:	a8 1a       	sub	r10, r24
     adc:	b9 0a       	sbc	r11, r25
     ade:	b0 e2       	ldi	r27, 0x20	; 32
     ae0:	ab 16       	cp	r10, r27
     ae2:	b1 04       	cpc	r11, r1
     ae4:	0c f0       	brlt	.+2      	; 0xae8 <_fpadd_parts+0xb8>
     ae6:	61 c0       	rjmp	.+194    	; 0xbaa <_fpadd_parts+0x17a>
     ae8:	18 16       	cp	r1, r24
     aea:	19 06       	cpc	r1, r25
     aec:	6c f5       	brge	.+90     	; 0xb48 <_fpadd_parts+0x118>
     aee:	37 01       	movw	r6, r14
     af0:	48 01       	movw	r8, r16
     af2:	0a 2c       	mov	r0, r10
     af4:	04 c0       	rjmp	.+8      	; 0xafe <_fpadd_parts+0xce>
     af6:	96 94       	lsr	r9
     af8:	87 94       	ror	r8
     afa:	77 94       	ror	r7
     afc:	67 94       	ror	r6
     afe:	0a 94       	dec	r0
     b00:	d2 f7       	brpl	.-12     	; 0xaf6 <_fpadd_parts+0xc6>
     b02:	81 e0       	ldi	r24, 0x01	; 1
     b04:	90 e0       	ldi	r25, 0x00	; 0
     b06:	a0 e0       	ldi	r26, 0x00	; 0
     b08:	b0 e0       	ldi	r27, 0x00	; 0
     b0a:	0a 2c       	mov	r0, r10
     b0c:	04 c0       	rjmp	.+8      	; 0xb16 <_fpadd_parts+0xe6>
     b0e:	88 0f       	add	r24, r24
     b10:	99 1f       	adc	r25, r25
     b12:	aa 1f       	adc	r26, r26
     b14:	bb 1f       	adc	r27, r27
     b16:	0a 94       	dec	r0
     b18:	d2 f7       	brpl	.-12     	; 0xb0e <_fpadd_parts+0xde>
     b1a:	01 97       	sbiw	r24, 0x01	; 1
     b1c:	a1 09       	sbc	r26, r1
     b1e:	b1 09       	sbc	r27, r1
     b20:	8e 21       	and	r24, r14
     b22:	9f 21       	and	r25, r15
     b24:	a0 23       	and	r26, r16
     b26:	b1 23       	and	r27, r17
     b28:	ee 24       	eor	r14, r14
     b2a:	ff 24       	eor	r15, r15
     b2c:	87 01       	movw	r16, r14
     b2e:	e3 94       	inc	r14
     b30:	00 97       	sbiw	r24, 0x00	; 0
     b32:	a1 05       	cpc	r26, r1
     b34:	b1 05       	cpc	r27, r1
     b36:	19 f4       	brne	.+6      	; 0xb3e <_fpadd_parts+0x10e>
     b38:	ee 24       	eor	r14, r14
     b3a:	ff 24       	eor	r15, r15
     b3c:	87 01       	movw	r16, r14
     b3e:	e6 28       	or	r14, r6
     b40:	f7 28       	or	r15, r7
     b42:	08 29       	or	r16, r8
     b44:	19 29       	or	r17, r9
     b46:	3c c0       	rjmp	.+120    	; 0xbc0 <_fpadd_parts+0x190>
     b48:	00 97       	sbiw	r24, 0x00	; 0
     b4a:	d1 f1       	breq	.+116    	; 0xbc0 <_fpadd_parts+0x190>
     b4c:	ca 0c       	add	r12, r10
     b4e:	db 1c       	adc	r13, r11
     b50:	39 01       	movw	r6, r18
     b52:	4a 01       	movw	r8, r20
     b54:	0a 2c       	mov	r0, r10
     b56:	04 c0       	rjmp	.+8      	; 0xb60 <_fpadd_parts+0x130>
     b58:	96 94       	lsr	r9
     b5a:	87 94       	ror	r8
     b5c:	77 94       	ror	r7
     b5e:	67 94       	ror	r6
     b60:	0a 94       	dec	r0
     b62:	d2 f7       	brpl	.-12     	; 0xb58 <_fpadd_parts+0x128>
     b64:	81 e0       	ldi	r24, 0x01	; 1
     b66:	90 e0       	ldi	r25, 0x00	; 0
     b68:	a0 e0       	ldi	r26, 0x00	; 0
     b6a:	b0 e0       	ldi	r27, 0x00	; 0
     b6c:	0a 2c       	mov	r0, r10
     b6e:	04 c0       	rjmp	.+8      	; 0xb78 <_fpadd_parts+0x148>
     b70:	88 0f       	add	r24, r24
     b72:	99 1f       	adc	r25, r25
     b74:	aa 1f       	adc	r26, r26
     b76:	bb 1f       	adc	r27, r27
     b78:	0a 94       	dec	r0
     b7a:	d2 f7       	brpl	.-12     	; 0xb70 <_fpadd_parts+0x140>
     b7c:	01 97       	sbiw	r24, 0x01	; 1
     b7e:	a1 09       	sbc	r26, r1
     b80:	b1 09       	sbc	r27, r1
     b82:	82 23       	and	r24, r18
     b84:	93 23       	and	r25, r19
     b86:	a4 23       	and	r26, r20
     b88:	b5 23       	and	r27, r21
     b8a:	21 e0       	ldi	r18, 0x01	; 1
     b8c:	30 e0       	ldi	r19, 0x00	; 0
     b8e:	40 e0       	ldi	r20, 0x00	; 0
     b90:	50 e0       	ldi	r21, 0x00	; 0
     b92:	00 97       	sbiw	r24, 0x00	; 0
     b94:	a1 05       	cpc	r26, r1
     b96:	b1 05       	cpc	r27, r1
     b98:	19 f4       	brne	.+6      	; 0xba0 <_fpadd_parts+0x170>
     b9a:	20 e0       	ldi	r18, 0x00	; 0
     b9c:	30 e0       	ldi	r19, 0x00	; 0
     b9e:	a9 01       	movw	r20, r18
     ba0:	26 29       	or	r18, r6
     ba2:	37 29       	or	r19, r7
     ba4:	48 29       	or	r20, r8
     ba6:	59 29       	or	r21, r9
     ba8:	0b c0       	rjmp	.+22     	; 0xbc0 <_fpadd_parts+0x190>
     baa:	6c 14       	cp	r6, r12
     bac:	7d 04       	cpc	r7, r13
     bae:	24 f4       	brge	.+8      	; 0xbb8 <_fpadd_parts+0x188>
     bb0:	ee 24       	eor	r14, r14
     bb2:	ff 24       	eor	r15, r15
     bb4:	87 01       	movw	r16, r14
     bb6:	04 c0       	rjmp	.+8      	; 0xbc0 <_fpadd_parts+0x190>
     bb8:	63 01       	movw	r12, r6
     bba:	20 e0       	ldi	r18, 0x00	; 0
     bbc:	30 e0       	ldi	r19, 0x00	; 0
     bbe:	a9 01       	movw	r20, r18
     bc0:	81 81       	ldd	r24, Z+1	; 0x01
     bc2:	fb 01       	movw	r30, r22
     bc4:	91 81       	ldd	r25, Z+1	; 0x01
     bc6:	89 17       	cp	r24, r25
     bc8:	09 f4       	brne	.+2      	; 0xbcc <_fpadd_parts+0x19c>
     bca:	45 c0       	rjmp	.+138    	; 0xc56 <_fpadd_parts+0x226>
     bcc:	88 23       	and	r24, r24
     bce:	49 f0       	breq	.+18     	; 0xbe2 <_fpadd_parts+0x1b2>
     bd0:	d8 01       	movw	r26, r16
     bd2:	c7 01       	movw	r24, r14
     bd4:	82 1b       	sub	r24, r18
     bd6:	93 0b       	sbc	r25, r19
     bd8:	a4 0b       	sbc	r26, r20
     bda:	b5 0b       	sbc	r27, r21
     bdc:	9c 01       	movw	r18, r24
     bde:	ad 01       	movw	r20, r26
     be0:	04 c0       	rjmp	.+8      	; 0xbea <_fpadd_parts+0x1ba>
     be2:	2e 19       	sub	r18, r14
     be4:	3f 09       	sbc	r19, r15
     be6:	40 0b       	sbc	r20, r16
     be8:	51 0b       	sbc	r21, r17
     bea:	57 fd       	sbrc	r21, 7
     bec:	04 c0       	rjmp	.+8      	; 0xbf6 <_fpadd_parts+0x1c6>
     bee:	19 82       	std	Y+1, r1	; 0x01
     bf0:	db 82       	std	Y+3, r13	; 0x03
     bf2:	ca 82       	std	Y+2, r12	; 0x02
     bf4:	0b c0       	rjmp	.+22     	; 0xc0c <_fpadd_parts+0x1dc>
     bf6:	81 e0       	ldi	r24, 0x01	; 1
     bf8:	89 83       	std	Y+1, r24	; 0x01
     bfa:	db 82       	std	Y+3, r13	; 0x03
     bfc:	ca 82       	std	Y+2, r12	; 0x02
     bfe:	50 95       	com	r21
     c00:	40 95       	com	r20
     c02:	30 95       	com	r19
     c04:	21 95       	neg	r18
     c06:	3f 4f       	sbci	r19, 0xFF	; 255
     c08:	4f 4f       	sbci	r20, 0xFF	; 255
     c0a:	5f 4f       	sbci	r21, 0xFF	; 255
     c0c:	2c 83       	std	Y+4, r18	; 0x04
     c0e:	3d 83       	std	Y+5, r19	; 0x05
     c10:	4e 83       	std	Y+6, r20	; 0x06
     c12:	5f 83       	std	Y+7, r21	; 0x07
     c14:	0d c0       	rjmp	.+26     	; 0xc30 <_fpadd_parts+0x200>
     c16:	88 0f       	add	r24, r24
     c18:	99 1f       	adc	r25, r25
     c1a:	aa 1f       	adc	r26, r26
     c1c:	bb 1f       	adc	r27, r27
     c1e:	8c 83       	std	Y+4, r24	; 0x04
     c20:	9d 83       	std	Y+5, r25	; 0x05
     c22:	ae 83       	std	Y+6, r26	; 0x06
     c24:	bf 83       	std	Y+7, r27	; 0x07
     c26:	8a 81       	ldd	r24, Y+2	; 0x02
     c28:	9b 81       	ldd	r25, Y+3	; 0x03
     c2a:	01 97       	sbiw	r24, 0x01	; 1
     c2c:	9b 83       	std	Y+3, r25	; 0x03
     c2e:	8a 83       	std	Y+2, r24	; 0x02
     c30:	8c 81       	ldd	r24, Y+4	; 0x04
     c32:	9d 81       	ldd	r25, Y+5	; 0x05
     c34:	ae 81       	ldd	r26, Y+6	; 0x06
     c36:	bf 81       	ldd	r27, Y+7	; 0x07
     c38:	9c 01       	movw	r18, r24
     c3a:	ad 01       	movw	r20, r26
     c3c:	21 50       	subi	r18, 0x01	; 1
     c3e:	30 40       	sbci	r19, 0x00	; 0
     c40:	40 40       	sbci	r20, 0x00	; 0
     c42:	50 40       	sbci	r21, 0x00	; 0
     c44:	2f 3f       	cpi	r18, 0xFF	; 255
     c46:	ef ef       	ldi	r30, 0xFF	; 255
     c48:	3e 07       	cpc	r19, r30
     c4a:	ef ef       	ldi	r30, 0xFF	; 255
     c4c:	4e 07       	cpc	r20, r30
     c4e:	ef e3       	ldi	r30, 0x3F	; 63
     c50:	5e 07       	cpc	r21, r30
     c52:	08 f3       	brcs	.-62     	; 0xc16 <_fpadd_parts+0x1e6>
     c54:	0b c0       	rjmp	.+22     	; 0xc6c <_fpadd_parts+0x23c>
     c56:	89 83       	std	Y+1, r24	; 0x01
     c58:	db 82       	std	Y+3, r13	; 0x03
     c5a:	ca 82       	std	Y+2, r12	; 0x02
     c5c:	2e 0d       	add	r18, r14
     c5e:	3f 1d       	adc	r19, r15
     c60:	40 1f       	adc	r20, r16
     c62:	51 1f       	adc	r21, r17
     c64:	2c 83       	std	Y+4, r18	; 0x04
     c66:	3d 83       	std	Y+5, r19	; 0x05
     c68:	4e 83       	std	Y+6, r20	; 0x06
     c6a:	5f 83       	std	Y+7, r21	; 0x07
     c6c:	83 e0       	ldi	r24, 0x03	; 3
     c6e:	88 83       	st	Y, r24
     c70:	2c 81       	ldd	r18, Y+4	; 0x04
     c72:	3d 81       	ldd	r19, Y+5	; 0x05
     c74:	4e 81       	ldd	r20, Y+6	; 0x06
     c76:	5f 81       	ldd	r21, Y+7	; 0x07
     c78:	57 ff       	sbrs	r21, 7
     c7a:	1d c0       	rjmp	.+58     	; 0xcb6 <_fpadd_parts+0x286>
     c7c:	da 01       	movw	r26, r20
     c7e:	c9 01       	movw	r24, r18
     c80:	81 70       	andi	r24, 0x01	; 1
     c82:	90 70       	andi	r25, 0x00	; 0
     c84:	a0 70       	andi	r26, 0x00	; 0
     c86:	b0 70       	andi	r27, 0x00	; 0
     c88:	56 95       	lsr	r21
     c8a:	47 95       	ror	r20
     c8c:	37 95       	ror	r19
     c8e:	27 95       	ror	r18
     c90:	82 2b       	or	r24, r18
     c92:	93 2b       	or	r25, r19
     c94:	a4 2b       	or	r26, r20
     c96:	b5 2b       	or	r27, r21
     c98:	8c 83       	std	Y+4, r24	; 0x04
     c9a:	9d 83       	std	Y+5, r25	; 0x05
     c9c:	ae 83       	std	Y+6, r26	; 0x06
     c9e:	bf 83       	std	Y+7, r27	; 0x07
     ca0:	8a 81       	ldd	r24, Y+2	; 0x02
     ca2:	9b 81       	ldd	r25, Y+3	; 0x03
     ca4:	01 96       	adiw	r24, 0x01	; 1
     ca6:	9b 83       	std	Y+3, r25	; 0x03
     ca8:	8a 83       	std	Y+2, r24	; 0x02
     caa:	05 c0       	rjmp	.+10     	; 0xcb6 <_fpadd_parts+0x286>
     cac:	e6 e1       	ldi	r30, 0x16	; 22
     cae:	f1 e0       	ldi	r31, 0x01	; 1
     cb0:	03 c0       	rjmp	.+6      	; 0xcb8 <_fpadd_parts+0x288>
     cb2:	fb 01       	movw	r30, r22
     cb4:	01 c0       	rjmp	.+2      	; 0xcb8 <_fpadd_parts+0x288>
     cb6:	fe 01       	movw	r30, r28
     cb8:	cf 01       	movw	r24, r30
     cba:	cd b7       	in	r28, 0x3d	; 61
     cbc:	de b7       	in	r29, 0x3e	; 62
     cbe:	ee e0       	ldi	r30, 0x0E	; 14
     cc0:	0c 94 4c 0a 	jmp	0x1498	; 0x1498 <__epilogue_restores__+0x8>

00000cc4 <__addsf3>:
     cc4:	a0 e2       	ldi	r26, 0x20	; 32
     cc6:	b0 e0       	ldi	r27, 0x00	; 0
     cc8:	e8 e6       	ldi	r30, 0x68	; 104
     cca:	f6 e0       	ldi	r31, 0x06	; 6
     ccc:	0c 94 38 0a 	jmp	0x1470	; 0x1470 <__prologue_saves__+0x18>
     cd0:	69 83       	std	Y+1, r22	; 0x01
     cd2:	7a 83       	std	Y+2, r23	; 0x02
     cd4:	8b 83       	std	Y+3, r24	; 0x03
     cd6:	9c 83       	std	Y+4, r25	; 0x04
     cd8:	2d 83       	std	Y+5, r18	; 0x05
     cda:	3e 83       	std	Y+6, r19	; 0x06
     cdc:	4f 83       	std	Y+7, r20	; 0x07
     cde:	58 87       	std	Y+8, r21	; 0x08
     ce0:	89 e0       	ldi	r24, 0x09	; 9
     ce2:	e8 2e       	mov	r14, r24
     ce4:	f1 2c       	mov	r15, r1
     ce6:	ec 0e       	add	r14, r28
     ce8:	fd 1e       	adc	r15, r29
     cea:	ce 01       	movw	r24, r28
     cec:	01 96       	adiw	r24, 0x01	; 1
     cee:	b7 01       	movw	r22, r14
     cf0:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__unpack_f>
     cf4:	8e 01       	movw	r16, r28
     cf6:	0f 5e       	subi	r16, 0xEF	; 239
     cf8:	1f 4f       	sbci	r17, 0xFF	; 255
     cfa:	ce 01       	movw	r24, r28
     cfc:	05 96       	adiw	r24, 0x05	; 5
     cfe:	b8 01       	movw	r22, r16
     d00:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__unpack_f>
     d04:	c7 01       	movw	r24, r14
     d06:	b8 01       	movw	r22, r16
     d08:	ae 01       	movw	r20, r28
     d0a:	47 5e       	subi	r20, 0xE7	; 231
     d0c:	5f 4f       	sbci	r21, 0xFF	; 255
     d0e:	0e 94 18 05 	call	0xa30	; 0xa30 <_fpadd_parts>
     d12:	0e 94 9c 08 	call	0x1138	; 0x1138 <__pack_f>
     d16:	a0 96       	adiw	r28, 0x20	; 32
     d18:	e6 e0       	ldi	r30, 0x06	; 6
     d1a:	0c 94 54 0a 	jmp	0x14a8	; 0x14a8 <__epilogue_restores__+0x18>

00000d1e <__subsf3>:
     d1e:	a0 e2       	ldi	r26, 0x20	; 32
     d20:	b0 e0       	ldi	r27, 0x00	; 0
     d22:	e5 e9       	ldi	r30, 0x95	; 149
     d24:	f6 e0       	ldi	r31, 0x06	; 6
     d26:	0c 94 38 0a 	jmp	0x1470	; 0x1470 <__prologue_saves__+0x18>
     d2a:	69 83       	std	Y+1, r22	; 0x01
     d2c:	7a 83       	std	Y+2, r23	; 0x02
     d2e:	8b 83       	std	Y+3, r24	; 0x03
     d30:	9c 83       	std	Y+4, r25	; 0x04
     d32:	2d 83       	std	Y+5, r18	; 0x05
     d34:	3e 83       	std	Y+6, r19	; 0x06
     d36:	4f 83       	std	Y+7, r20	; 0x07
     d38:	58 87       	std	Y+8, r21	; 0x08
     d3a:	8e 01       	movw	r16, r28
     d3c:	07 5f       	subi	r16, 0xF7	; 247
     d3e:	1f 4f       	sbci	r17, 0xFF	; 255
     d40:	ce 01       	movw	r24, r28
     d42:	01 96       	adiw	r24, 0x01	; 1
     d44:	b8 01       	movw	r22, r16
     d46:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__unpack_f>
     d4a:	91 e1       	ldi	r25, 0x11	; 17
     d4c:	e9 2e       	mov	r14, r25
     d4e:	f1 2c       	mov	r15, r1
     d50:	ec 0e       	add	r14, r28
     d52:	fd 1e       	adc	r15, r29
     d54:	ce 01       	movw	r24, r28
     d56:	05 96       	adiw	r24, 0x05	; 5
     d58:	b7 01       	movw	r22, r14
     d5a:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__unpack_f>
     d5e:	8a 89       	ldd	r24, Y+18	; 0x12
     d60:	91 e0       	ldi	r25, 0x01	; 1
     d62:	89 27       	eor	r24, r25
     d64:	8a 8b       	std	Y+18, r24	; 0x12
     d66:	c8 01       	movw	r24, r16
     d68:	b7 01       	movw	r22, r14
     d6a:	ae 01       	movw	r20, r28
     d6c:	47 5e       	subi	r20, 0xE7	; 231
     d6e:	5f 4f       	sbci	r21, 0xFF	; 255
     d70:	0e 94 18 05 	call	0xa30	; 0xa30 <_fpadd_parts>
     d74:	0e 94 9c 08 	call	0x1138	; 0x1138 <__pack_f>
     d78:	a0 96       	adiw	r28, 0x20	; 32
     d7a:	e6 e0       	ldi	r30, 0x06	; 6
     d7c:	0c 94 54 0a 	jmp	0x14a8	; 0x14a8 <__epilogue_restores__+0x18>

00000d80 <__mulsf3>:
     d80:	a0 e2       	ldi	r26, 0x20	; 32
     d82:	b0 e0       	ldi	r27, 0x00	; 0
     d84:	e6 ec       	ldi	r30, 0xC6	; 198
     d86:	f6 e0       	ldi	r31, 0x06	; 6
     d88:	0c 94 2c 0a 	jmp	0x1458	; 0x1458 <__prologue_saves__>
     d8c:	69 83       	std	Y+1, r22	; 0x01
     d8e:	7a 83       	std	Y+2, r23	; 0x02
     d90:	8b 83       	std	Y+3, r24	; 0x03
     d92:	9c 83       	std	Y+4, r25	; 0x04
     d94:	2d 83       	std	Y+5, r18	; 0x05
     d96:	3e 83       	std	Y+6, r19	; 0x06
     d98:	4f 83       	std	Y+7, r20	; 0x07
     d9a:	58 87       	std	Y+8, r21	; 0x08
     d9c:	ce 01       	movw	r24, r28
     d9e:	01 96       	adiw	r24, 0x01	; 1
     da0:	be 01       	movw	r22, r28
     da2:	67 5f       	subi	r22, 0xF7	; 247
     da4:	7f 4f       	sbci	r23, 0xFF	; 255
     da6:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__unpack_f>
     daa:	ce 01       	movw	r24, r28
     dac:	05 96       	adiw	r24, 0x05	; 5
     dae:	be 01       	movw	r22, r28
     db0:	6f 5e       	subi	r22, 0xEF	; 239
     db2:	7f 4f       	sbci	r23, 0xFF	; 255
     db4:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__unpack_f>
     db8:	99 85       	ldd	r25, Y+9	; 0x09
     dba:	92 30       	cpi	r25, 0x02	; 2
     dbc:	78 f0       	brcs	.+30     	; 0xddc <__mulsf3+0x5c>
     dbe:	89 89       	ldd	r24, Y+17	; 0x11
     dc0:	82 30       	cpi	r24, 0x02	; 2
     dc2:	c0 f0       	brcs	.+48     	; 0xdf4 <__mulsf3+0x74>
     dc4:	94 30       	cpi	r25, 0x04	; 4
     dc6:	19 f4       	brne	.+6      	; 0xdce <__mulsf3+0x4e>
     dc8:	82 30       	cpi	r24, 0x02	; 2
     dca:	41 f4       	brne	.+16     	; 0xddc <__mulsf3+0x5c>
     dcc:	cb c0       	rjmp	.+406    	; 0xf64 <__mulsf3+0x1e4>
     dce:	84 30       	cpi	r24, 0x04	; 4
     dd0:	19 f4       	brne	.+6      	; 0xdd8 <__mulsf3+0x58>
     dd2:	92 30       	cpi	r25, 0x02	; 2
     dd4:	79 f4       	brne	.+30     	; 0xdf4 <__mulsf3+0x74>
     dd6:	c6 c0       	rjmp	.+396    	; 0xf64 <__mulsf3+0x1e4>
     dd8:	92 30       	cpi	r25, 0x02	; 2
     dda:	51 f4       	brne	.+20     	; 0xdf0 <__mulsf3+0x70>
     ddc:	81 e0       	ldi	r24, 0x01	; 1
     dde:	2a 85       	ldd	r18, Y+10	; 0x0a
     de0:	9a 89       	ldd	r25, Y+18	; 0x12
     de2:	29 17       	cp	r18, r25
     de4:	09 f4       	brne	.+2      	; 0xde8 <__mulsf3+0x68>
     de6:	80 e0       	ldi	r24, 0x00	; 0
     de8:	8a 87       	std	Y+10, r24	; 0x0a
     dea:	ce 01       	movw	r24, r28
     dec:	09 96       	adiw	r24, 0x09	; 9
     dee:	bc c0       	rjmp	.+376    	; 0xf68 <__mulsf3+0x1e8>
     df0:	82 30       	cpi	r24, 0x02	; 2
     df2:	51 f4       	brne	.+20     	; 0xe08 <__mulsf3+0x88>
     df4:	81 e0       	ldi	r24, 0x01	; 1
     df6:	2a 85       	ldd	r18, Y+10	; 0x0a
     df8:	9a 89       	ldd	r25, Y+18	; 0x12
     dfa:	29 17       	cp	r18, r25
     dfc:	09 f4       	brne	.+2      	; 0xe00 <__mulsf3+0x80>
     dfe:	80 e0       	ldi	r24, 0x00	; 0
     e00:	8a 8b       	std	Y+18, r24	; 0x12
     e02:	ce 01       	movw	r24, r28
     e04:	41 96       	adiw	r24, 0x11	; 17
     e06:	b0 c0       	rjmp	.+352    	; 0xf68 <__mulsf3+0x1e8>
     e08:	6d 84       	ldd	r6, Y+13	; 0x0d
     e0a:	7e 84       	ldd	r7, Y+14	; 0x0e
     e0c:	8f 84       	ldd	r8, Y+15	; 0x0f
     e0e:	98 88       	ldd	r9, Y+16	; 0x10
     e10:	ed 88       	ldd	r14, Y+21	; 0x15
     e12:	fe 88       	ldd	r15, Y+22	; 0x16
     e14:	0f 89       	ldd	r16, Y+23	; 0x17
     e16:	18 8d       	ldd	r17, Y+24	; 0x18
     e18:	e0 e2       	ldi	r30, 0x20	; 32
     e1a:	f0 e0       	ldi	r31, 0x00	; 0
     e1c:	80 e0       	ldi	r24, 0x00	; 0
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	dc 01       	movw	r26, r24
     e22:	aa 24       	eor	r10, r10
     e24:	bb 24       	eor	r11, r11
     e26:	65 01       	movw	r12, r10
     e28:	20 e0       	ldi	r18, 0x00	; 0
     e2a:	30 e0       	ldi	r19, 0x00	; 0
     e2c:	a9 01       	movw	r20, r18
     e2e:	b3 01       	movw	r22, r6
     e30:	61 70       	andi	r22, 0x01	; 1
     e32:	70 70       	andi	r23, 0x00	; 0
     e34:	61 15       	cp	r22, r1
     e36:	71 05       	cpc	r23, r1
     e38:	d1 f0       	breq	.+52     	; 0xe6e <__mulsf3+0xee>
     e3a:	2e 0d       	add	r18, r14
     e3c:	3f 1d       	adc	r19, r15
     e3e:	40 1f       	adc	r20, r16
     e40:	51 1f       	adc	r21, r17
     e42:	15 01       	movw	r2, r10
     e44:	26 01       	movw	r4, r12
     e46:	28 0e       	add	r2, r24
     e48:	39 1e       	adc	r3, r25
     e4a:	4a 1e       	adc	r4, r26
     e4c:	5b 1e       	adc	r5, r27
     e4e:	81 e0       	ldi	r24, 0x01	; 1
     e50:	90 e0       	ldi	r25, 0x00	; 0
     e52:	a0 e0       	ldi	r26, 0x00	; 0
     e54:	b0 e0       	ldi	r27, 0x00	; 0
     e56:	2e 15       	cp	r18, r14
     e58:	3f 05       	cpc	r19, r15
     e5a:	40 07       	cpc	r20, r16
     e5c:	51 07       	cpc	r21, r17
     e5e:	18 f0       	brcs	.+6      	; 0xe66 <__mulsf3+0xe6>
     e60:	80 e0       	ldi	r24, 0x00	; 0
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	dc 01       	movw	r26, r24
     e66:	82 0d       	add	r24, r2
     e68:	93 1d       	adc	r25, r3
     e6a:	a4 1d       	adc	r26, r4
     e6c:	b5 1d       	adc	r27, r5
     e6e:	aa 0c       	add	r10, r10
     e70:	bb 1c       	adc	r11, r11
     e72:	cc 1c       	adc	r12, r12
     e74:	dd 1c       	adc	r13, r13
     e76:	17 ff       	sbrs	r17, 7
     e78:	09 c0       	rjmp	.+18     	; 0xe8c <__mulsf3+0x10c>
     e7a:	61 e0       	ldi	r22, 0x01	; 1
     e7c:	26 2e       	mov	r2, r22
     e7e:	31 2c       	mov	r3, r1
     e80:	41 2c       	mov	r4, r1
     e82:	51 2c       	mov	r5, r1
     e84:	a2 28       	or	r10, r2
     e86:	b3 28       	or	r11, r3
     e88:	c4 28       	or	r12, r4
     e8a:	d5 28       	or	r13, r5
     e8c:	31 97       	sbiw	r30, 0x01	; 1
     e8e:	49 f0       	breq	.+18     	; 0xea2 <__mulsf3+0x122>
     e90:	ee 0c       	add	r14, r14
     e92:	ff 1c       	adc	r15, r15
     e94:	00 1f       	adc	r16, r16
     e96:	11 1f       	adc	r17, r17
     e98:	96 94       	lsr	r9
     e9a:	87 94       	ror	r8
     e9c:	77 94       	ror	r7
     e9e:	67 94       	ror	r6
     ea0:	c6 cf       	rjmp	.-116    	; 0xe2e <__mulsf3+0xae>
     ea2:	6b 89       	ldd	r22, Y+19	; 0x13
     ea4:	7c 89       	ldd	r23, Y+20	; 0x14
     ea6:	eb 85       	ldd	r30, Y+11	; 0x0b
     ea8:	fc 85       	ldd	r31, Y+12	; 0x0c
     eaa:	6e 0f       	add	r22, r30
     eac:	7f 1f       	adc	r23, r31
     eae:	6e 5f       	subi	r22, 0xFE	; 254
     eb0:	7f 4f       	sbci	r23, 0xFF	; 255
     eb2:	7c 8f       	std	Y+28, r23	; 0x1c
     eb4:	6b 8f       	std	Y+27, r22	; 0x1b
     eb6:	61 e0       	ldi	r22, 0x01	; 1
     eb8:	ea 85       	ldd	r30, Y+10	; 0x0a
     eba:	7a 89       	ldd	r23, Y+18	; 0x12
     ebc:	e7 17       	cp	r30, r23
     ebe:	09 f4       	brne	.+2      	; 0xec2 <__mulsf3+0x142>
     ec0:	60 e0       	ldi	r22, 0x00	; 0
     ec2:	6a 8f       	std	Y+26, r22	; 0x1a
     ec4:	6b 8d       	ldd	r22, Y+27	; 0x1b
     ec6:	7c 8d       	ldd	r23, Y+28	; 0x1c
     ec8:	10 c0       	rjmp	.+32     	; 0xeea <__mulsf3+0x16a>
     eca:	fc 01       	movw	r30, r24
     ecc:	e1 70       	andi	r30, 0x01	; 1
     ece:	f0 70       	andi	r31, 0x00	; 0
     ed0:	30 97       	sbiw	r30, 0x00	; 0
     ed2:	29 f0       	breq	.+10     	; 0xede <__mulsf3+0x15e>
     ed4:	56 95       	lsr	r21
     ed6:	47 95       	ror	r20
     ed8:	37 95       	ror	r19
     eda:	27 95       	ror	r18
     edc:	50 68       	ori	r21, 0x80	; 128
     ede:	b6 95       	lsr	r27
     ee0:	a7 95       	ror	r26
     ee2:	97 95       	ror	r25
     ee4:	87 95       	ror	r24
     ee6:	6f 5f       	subi	r22, 0xFF	; 255
     ee8:	7f 4f       	sbci	r23, 0xFF	; 255
     eea:	b7 fd       	sbrc	r27, 7
     eec:	ee cf       	rjmp	.-36     	; 0xeca <__mulsf3+0x14a>
     eee:	0c c0       	rjmp	.+24     	; 0xf08 <__mulsf3+0x188>
     ef0:	88 0f       	add	r24, r24
     ef2:	99 1f       	adc	r25, r25
     ef4:	aa 1f       	adc	r26, r26
     ef6:	bb 1f       	adc	r27, r27
     ef8:	57 fd       	sbrc	r21, 7
     efa:	81 60       	ori	r24, 0x01	; 1
     efc:	22 0f       	add	r18, r18
     efe:	33 1f       	adc	r19, r19
     f00:	44 1f       	adc	r20, r20
     f02:	55 1f       	adc	r21, r21
     f04:	61 50       	subi	r22, 0x01	; 1
     f06:	70 40       	sbci	r23, 0x00	; 0
     f08:	80 30       	cpi	r24, 0x00	; 0
     f0a:	e0 e0       	ldi	r30, 0x00	; 0
     f0c:	9e 07       	cpc	r25, r30
     f0e:	e0 e0       	ldi	r30, 0x00	; 0
     f10:	ae 07       	cpc	r26, r30
     f12:	e0 e4       	ldi	r30, 0x40	; 64
     f14:	be 07       	cpc	r27, r30
     f16:	60 f3       	brcs	.-40     	; 0xef0 <__mulsf3+0x170>
     f18:	6b 8f       	std	Y+27, r22	; 0x1b
     f1a:	7c 8f       	std	Y+28, r23	; 0x1c
     f1c:	6f e7       	ldi	r22, 0x7F	; 127
     f1e:	e6 2e       	mov	r14, r22
     f20:	f1 2c       	mov	r15, r1
     f22:	01 2d       	mov	r16, r1
     f24:	11 2d       	mov	r17, r1
     f26:	e8 22       	and	r14, r24
     f28:	f9 22       	and	r15, r25
     f2a:	0a 23       	and	r16, r26
     f2c:	1b 23       	and	r17, r27
     f2e:	60 e4       	ldi	r22, 0x40	; 64
     f30:	e6 16       	cp	r14, r22
     f32:	f1 04       	cpc	r15, r1
     f34:	01 05       	cpc	r16, r1
     f36:	11 05       	cpc	r17, r1
     f38:	61 f4       	brne	.+24     	; 0xf52 <__mulsf3+0x1d2>
     f3a:	87 fd       	sbrc	r24, 7
     f3c:	0a c0       	rjmp	.+20     	; 0xf52 <__mulsf3+0x1d2>
     f3e:	21 15       	cp	r18, r1
     f40:	31 05       	cpc	r19, r1
     f42:	41 05       	cpc	r20, r1
     f44:	51 05       	cpc	r21, r1
     f46:	29 f0       	breq	.+10     	; 0xf52 <__mulsf3+0x1d2>
     f48:	80 5c       	subi	r24, 0xC0	; 192
     f4a:	9f 4f       	sbci	r25, 0xFF	; 255
     f4c:	af 4f       	sbci	r26, 0xFF	; 255
     f4e:	bf 4f       	sbci	r27, 0xFF	; 255
     f50:	80 78       	andi	r24, 0x80	; 128
     f52:	8d 8f       	std	Y+29, r24	; 0x1d
     f54:	9e 8f       	std	Y+30, r25	; 0x1e
     f56:	af 8f       	std	Y+31, r26	; 0x1f
     f58:	b8 a3       	std	Y+32, r27	; 0x20
     f5a:	83 e0       	ldi	r24, 0x03	; 3
     f5c:	89 8f       	std	Y+25, r24	; 0x19
     f5e:	ce 01       	movw	r24, r28
     f60:	49 96       	adiw	r24, 0x19	; 25
     f62:	02 c0       	rjmp	.+4      	; 0xf68 <__mulsf3+0x1e8>
     f64:	86 e1       	ldi	r24, 0x16	; 22
     f66:	91 e0       	ldi	r25, 0x01	; 1
     f68:	0e 94 9c 08 	call	0x1138	; 0x1138 <__pack_f>
     f6c:	a0 96       	adiw	r28, 0x20	; 32
     f6e:	e2 e1       	ldi	r30, 0x12	; 18
     f70:	0c 94 48 0a 	jmp	0x1490	; 0x1490 <__epilogue_restores__>

00000f74 <__gtsf2>:
     f74:	a8 e1       	ldi	r26, 0x18	; 24
     f76:	b0 e0       	ldi	r27, 0x00	; 0
     f78:	e0 ec       	ldi	r30, 0xC0	; 192
     f7a:	f7 e0       	ldi	r31, 0x07	; 7
     f7c:	0c 94 38 0a 	jmp	0x1470	; 0x1470 <__prologue_saves__+0x18>
     f80:	69 83       	std	Y+1, r22	; 0x01
     f82:	7a 83       	std	Y+2, r23	; 0x02
     f84:	8b 83       	std	Y+3, r24	; 0x03
     f86:	9c 83       	std	Y+4, r25	; 0x04
     f88:	2d 83       	std	Y+5, r18	; 0x05
     f8a:	3e 83       	std	Y+6, r19	; 0x06
     f8c:	4f 83       	std	Y+7, r20	; 0x07
     f8e:	58 87       	std	Y+8, r21	; 0x08
     f90:	8e 01       	movw	r16, r28
     f92:	07 5f       	subi	r16, 0xF7	; 247
     f94:	1f 4f       	sbci	r17, 0xFF	; 255
     f96:	ce 01       	movw	r24, r28
     f98:	01 96       	adiw	r24, 0x01	; 1
     f9a:	b8 01       	movw	r22, r16
     f9c:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__unpack_f>
     fa0:	81 e1       	ldi	r24, 0x11	; 17
     fa2:	e8 2e       	mov	r14, r24
     fa4:	f1 2c       	mov	r15, r1
     fa6:	ec 0e       	add	r14, r28
     fa8:	fd 1e       	adc	r15, r29
     faa:	ce 01       	movw	r24, r28
     fac:	05 96       	adiw	r24, 0x05	; 5
     fae:	b7 01       	movw	r22, r14
     fb0:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__unpack_f>
     fb4:	89 85       	ldd	r24, Y+9	; 0x09
     fb6:	82 30       	cpi	r24, 0x02	; 2
     fb8:	40 f0       	brcs	.+16     	; 0xfca <__gtsf2+0x56>
     fba:	89 89       	ldd	r24, Y+17	; 0x11
     fbc:	82 30       	cpi	r24, 0x02	; 2
     fbe:	28 f0       	brcs	.+10     	; 0xfca <__gtsf2+0x56>
     fc0:	c8 01       	movw	r24, r16
     fc2:	b7 01       	movw	r22, r14
     fc4:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <__fpcmp_parts_f>
     fc8:	01 c0       	rjmp	.+2      	; 0xfcc <__gtsf2+0x58>
     fca:	8f ef       	ldi	r24, 0xFF	; 255
     fcc:	68 96       	adiw	r28, 0x18	; 24
     fce:	e6 e0       	ldi	r30, 0x06	; 6
     fd0:	0c 94 54 0a 	jmp	0x14a8	; 0x14a8 <__epilogue_restores__+0x18>

00000fd4 <__gesf2>:
     fd4:	a8 e1       	ldi	r26, 0x18	; 24
     fd6:	b0 e0       	ldi	r27, 0x00	; 0
     fd8:	e0 ef       	ldi	r30, 0xF0	; 240
     fda:	f7 e0       	ldi	r31, 0x07	; 7
     fdc:	0c 94 38 0a 	jmp	0x1470	; 0x1470 <__prologue_saves__+0x18>
     fe0:	69 83       	std	Y+1, r22	; 0x01
     fe2:	7a 83       	std	Y+2, r23	; 0x02
     fe4:	8b 83       	std	Y+3, r24	; 0x03
     fe6:	9c 83       	std	Y+4, r25	; 0x04
     fe8:	2d 83       	std	Y+5, r18	; 0x05
     fea:	3e 83       	std	Y+6, r19	; 0x06
     fec:	4f 83       	std	Y+7, r20	; 0x07
     fee:	58 87       	std	Y+8, r21	; 0x08
     ff0:	8e 01       	movw	r16, r28
     ff2:	07 5f       	subi	r16, 0xF7	; 247
     ff4:	1f 4f       	sbci	r17, 0xFF	; 255
     ff6:	ce 01       	movw	r24, r28
     ff8:	01 96       	adiw	r24, 0x01	; 1
     ffa:	b8 01       	movw	r22, r16
     ffc:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__unpack_f>
    1000:	81 e1       	ldi	r24, 0x11	; 17
    1002:	e8 2e       	mov	r14, r24
    1004:	f1 2c       	mov	r15, r1
    1006:	ec 0e       	add	r14, r28
    1008:	fd 1e       	adc	r15, r29
    100a:	ce 01       	movw	r24, r28
    100c:	05 96       	adiw	r24, 0x05	; 5
    100e:	b7 01       	movw	r22, r14
    1010:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__unpack_f>
    1014:	89 85       	ldd	r24, Y+9	; 0x09
    1016:	82 30       	cpi	r24, 0x02	; 2
    1018:	40 f0       	brcs	.+16     	; 0x102a <__gesf2+0x56>
    101a:	89 89       	ldd	r24, Y+17	; 0x11
    101c:	82 30       	cpi	r24, 0x02	; 2
    101e:	28 f0       	brcs	.+10     	; 0x102a <__gesf2+0x56>
    1020:	c8 01       	movw	r24, r16
    1022:	b7 01       	movw	r22, r14
    1024:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <__fpcmp_parts_f>
    1028:	01 c0       	rjmp	.+2      	; 0x102c <__gesf2+0x58>
    102a:	8f ef       	ldi	r24, 0xFF	; 255
    102c:	68 96       	adiw	r28, 0x18	; 24
    102e:	e6 e0       	ldi	r30, 0x06	; 6
    1030:	0c 94 54 0a 	jmp	0x14a8	; 0x14a8 <__epilogue_restores__+0x18>

00001034 <__ltsf2>:
    1034:	a8 e1       	ldi	r26, 0x18	; 24
    1036:	b0 e0       	ldi	r27, 0x00	; 0
    1038:	e0 e2       	ldi	r30, 0x20	; 32
    103a:	f8 e0       	ldi	r31, 0x08	; 8
    103c:	0c 94 38 0a 	jmp	0x1470	; 0x1470 <__prologue_saves__+0x18>
    1040:	69 83       	std	Y+1, r22	; 0x01
    1042:	7a 83       	std	Y+2, r23	; 0x02
    1044:	8b 83       	std	Y+3, r24	; 0x03
    1046:	9c 83       	std	Y+4, r25	; 0x04
    1048:	2d 83       	std	Y+5, r18	; 0x05
    104a:	3e 83       	std	Y+6, r19	; 0x06
    104c:	4f 83       	std	Y+7, r20	; 0x07
    104e:	58 87       	std	Y+8, r21	; 0x08
    1050:	8e 01       	movw	r16, r28
    1052:	07 5f       	subi	r16, 0xF7	; 247
    1054:	1f 4f       	sbci	r17, 0xFF	; 255
    1056:	ce 01       	movw	r24, r28
    1058:	01 96       	adiw	r24, 0x01	; 1
    105a:	b8 01       	movw	r22, r16
    105c:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__unpack_f>
    1060:	81 e1       	ldi	r24, 0x11	; 17
    1062:	e8 2e       	mov	r14, r24
    1064:	f1 2c       	mov	r15, r1
    1066:	ec 0e       	add	r14, r28
    1068:	fd 1e       	adc	r15, r29
    106a:	ce 01       	movw	r24, r28
    106c:	05 96       	adiw	r24, 0x05	; 5
    106e:	b7 01       	movw	r22, r14
    1070:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__unpack_f>
    1074:	89 85       	ldd	r24, Y+9	; 0x09
    1076:	82 30       	cpi	r24, 0x02	; 2
    1078:	40 f0       	brcs	.+16     	; 0x108a <__ltsf2+0x56>
    107a:	89 89       	ldd	r24, Y+17	; 0x11
    107c:	82 30       	cpi	r24, 0x02	; 2
    107e:	28 f0       	brcs	.+10     	; 0x108a <__ltsf2+0x56>
    1080:	c8 01       	movw	r24, r16
    1082:	b7 01       	movw	r22, r14
    1084:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <__fpcmp_parts_f>
    1088:	01 c0       	rjmp	.+2      	; 0x108c <__ltsf2+0x58>
    108a:	81 e0       	ldi	r24, 0x01	; 1
    108c:	68 96       	adiw	r28, 0x18	; 24
    108e:	e6 e0       	ldi	r30, 0x06	; 6
    1090:	0c 94 54 0a 	jmp	0x14a8	; 0x14a8 <__epilogue_restores__+0x18>

00001094 <__fixsfsi>:
    1094:	ac e0       	ldi	r26, 0x0C	; 12
    1096:	b0 e0       	ldi	r27, 0x00	; 0
    1098:	e0 e5       	ldi	r30, 0x50	; 80
    109a:	f8 e0       	ldi	r31, 0x08	; 8
    109c:	0c 94 3c 0a 	jmp	0x1478	; 0x1478 <__prologue_saves__+0x20>
    10a0:	69 83       	std	Y+1, r22	; 0x01
    10a2:	7a 83       	std	Y+2, r23	; 0x02
    10a4:	8b 83       	std	Y+3, r24	; 0x03
    10a6:	9c 83       	std	Y+4, r25	; 0x04
    10a8:	ce 01       	movw	r24, r28
    10aa:	01 96       	adiw	r24, 0x01	; 1
    10ac:	be 01       	movw	r22, r28
    10ae:	6b 5f       	subi	r22, 0xFB	; 251
    10b0:	7f 4f       	sbci	r23, 0xFF	; 255
    10b2:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__unpack_f>
    10b6:	8d 81       	ldd	r24, Y+5	; 0x05
    10b8:	82 30       	cpi	r24, 0x02	; 2
    10ba:	81 f1       	breq	.+96     	; 0x111c <__fixsfsi+0x88>
    10bc:	82 30       	cpi	r24, 0x02	; 2
    10be:	70 f1       	brcs	.+92     	; 0x111c <__fixsfsi+0x88>
    10c0:	84 30       	cpi	r24, 0x04	; 4
    10c2:	21 f4       	brne	.+8      	; 0x10cc <__fixsfsi+0x38>
    10c4:	8e 81       	ldd	r24, Y+6	; 0x06
    10c6:	88 23       	and	r24, r24
    10c8:	69 f1       	breq	.+90     	; 0x1124 <__fixsfsi+0x90>
    10ca:	0a c0       	rjmp	.+20     	; 0x10e0 <__fixsfsi+0x4c>
    10cc:	2f 81       	ldd	r18, Y+7	; 0x07
    10ce:	38 85       	ldd	r19, Y+8	; 0x08
    10d0:	37 fd       	sbrc	r19, 7
    10d2:	24 c0       	rjmp	.+72     	; 0x111c <__fixsfsi+0x88>
    10d4:	6e 81       	ldd	r22, Y+6	; 0x06
    10d6:	2f 31       	cpi	r18, 0x1F	; 31
    10d8:	31 05       	cpc	r19, r1
    10da:	3c f0       	brlt	.+14     	; 0x10ea <__fixsfsi+0x56>
    10dc:	66 23       	and	r22, r22
    10de:	11 f1       	breq	.+68     	; 0x1124 <__fixsfsi+0x90>
    10e0:	20 e0       	ldi	r18, 0x00	; 0
    10e2:	30 e0       	ldi	r19, 0x00	; 0
    10e4:	40 e0       	ldi	r20, 0x00	; 0
    10e6:	50 e8       	ldi	r21, 0x80	; 128
    10e8:	21 c0       	rjmp	.+66     	; 0x112c <__fixsfsi+0x98>
    10ea:	8e e1       	ldi	r24, 0x1E	; 30
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	82 1b       	sub	r24, r18
    10f0:	93 0b       	sbc	r25, r19
    10f2:	29 85       	ldd	r18, Y+9	; 0x09
    10f4:	3a 85       	ldd	r19, Y+10	; 0x0a
    10f6:	4b 85       	ldd	r20, Y+11	; 0x0b
    10f8:	5c 85       	ldd	r21, Y+12	; 0x0c
    10fa:	04 c0       	rjmp	.+8      	; 0x1104 <__fixsfsi+0x70>
    10fc:	56 95       	lsr	r21
    10fe:	47 95       	ror	r20
    1100:	37 95       	ror	r19
    1102:	27 95       	ror	r18
    1104:	8a 95       	dec	r24
    1106:	d2 f7       	brpl	.-12     	; 0x10fc <__fixsfsi+0x68>
    1108:	66 23       	and	r22, r22
    110a:	81 f0       	breq	.+32     	; 0x112c <__fixsfsi+0x98>
    110c:	50 95       	com	r21
    110e:	40 95       	com	r20
    1110:	30 95       	com	r19
    1112:	21 95       	neg	r18
    1114:	3f 4f       	sbci	r19, 0xFF	; 255
    1116:	4f 4f       	sbci	r20, 0xFF	; 255
    1118:	5f 4f       	sbci	r21, 0xFF	; 255
    111a:	08 c0       	rjmp	.+16     	; 0x112c <__fixsfsi+0x98>
    111c:	20 e0       	ldi	r18, 0x00	; 0
    111e:	30 e0       	ldi	r19, 0x00	; 0
    1120:	a9 01       	movw	r20, r18
    1122:	04 c0       	rjmp	.+8      	; 0x112c <__fixsfsi+0x98>
    1124:	2f ef       	ldi	r18, 0xFF	; 255
    1126:	3f ef       	ldi	r19, 0xFF	; 255
    1128:	4f ef       	ldi	r20, 0xFF	; 255
    112a:	5f e7       	ldi	r21, 0x7F	; 127
    112c:	b9 01       	movw	r22, r18
    112e:	ca 01       	movw	r24, r20
    1130:	2c 96       	adiw	r28, 0x0c	; 12
    1132:	e2 e0       	ldi	r30, 0x02	; 2
    1134:	0c 94 58 0a 	jmp	0x14b0	; 0x14b0 <__epilogue_restores__+0x20>

00001138 <__pack_f>:
    1138:	ef 92       	push	r14
    113a:	ff 92       	push	r15
    113c:	0f 93       	push	r16
    113e:	1f 93       	push	r17
    1140:	cf 93       	push	r28
    1142:	df 93       	push	r29
    1144:	fc 01       	movw	r30, r24
    1146:	24 81       	ldd	r18, Z+4	; 0x04
    1148:	35 81       	ldd	r19, Z+5	; 0x05
    114a:	46 81       	ldd	r20, Z+6	; 0x06
    114c:	57 81       	ldd	r21, Z+7	; 0x07
    114e:	61 81       	ldd	r22, Z+1	; 0x01
    1150:	80 81       	ld	r24, Z
    1152:	82 30       	cpi	r24, 0x02	; 2
    1154:	20 f4       	brcc	.+8      	; 0x115e <__pack_f+0x26>
    1156:	40 61       	ori	r20, 0x10	; 16
    1158:	ef ef       	ldi	r30, 0xFF	; 255
    115a:	f0 e0       	ldi	r31, 0x00	; 0
    115c:	a3 c0       	rjmp	.+326    	; 0x12a4 <__pack_f+0x16c>
    115e:	84 30       	cpi	r24, 0x04	; 4
    1160:	09 f4       	brne	.+2      	; 0x1164 <__pack_f+0x2c>
    1162:	9b c0       	rjmp	.+310    	; 0x129a <__pack_f+0x162>
    1164:	82 30       	cpi	r24, 0x02	; 2
    1166:	09 f4       	brne	.+2      	; 0x116a <__pack_f+0x32>
    1168:	92 c0       	rjmp	.+292    	; 0x128e <__pack_f+0x156>
    116a:	21 15       	cp	r18, r1
    116c:	31 05       	cpc	r19, r1
    116e:	41 05       	cpc	r20, r1
    1170:	51 05       	cpc	r21, r1
    1172:	09 f4       	brne	.+2      	; 0x1176 <__pack_f+0x3e>
    1174:	8f c0       	rjmp	.+286    	; 0x1294 <__pack_f+0x15c>
    1176:	02 80       	ldd	r0, Z+2	; 0x02
    1178:	f3 81       	ldd	r31, Z+3	; 0x03
    117a:	e0 2d       	mov	r30, r0
    117c:	8f ef       	ldi	r24, 0xFF	; 255
    117e:	e2 38       	cpi	r30, 0x82	; 130
    1180:	f8 07       	cpc	r31, r24
    1182:	0c f0       	brlt	.+2      	; 0x1186 <__pack_f+0x4e>
    1184:	5a c0       	rjmp	.+180    	; 0x123a <__pack_f+0x102>
    1186:	c2 e8       	ldi	r28, 0x82	; 130
    1188:	df ef       	ldi	r29, 0xFF	; 255
    118a:	ce 1b       	sub	r28, r30
    118c:	df 0b       	sbc	r29, r31
    118e:	ca 31       	cpi	r28, 0x1A	; 26
    1190:	d1 05       	cpc	r29, r1
    1192:	6c f5       	brge	.+90     	; 0x11ee <__pack_f+0xb6>
    1194:	79 01       	movw	r14, r18
    1196:	8a 01       	movw	r16, r20
    1198:	0c 2e       	mov	r0, r28
    119a:	04 c0       	rjmp	.+8      	; 0x11a4 <__pack_f+0x6c>
    119c:	16 95       	lsr	r17
    119e:	07 95       	ror	r16
    11a0:	f7 94       	ror	r15
    11a2:	e7 94       	ror	r14
    11a4:	0a 94       	dec	r0
    11a6:	d2 f7       	brpl	.-12     	; 0x119c <__pack_f+0x64>
    11a8:	81 e0       	ldi	r24, 0x01	; 1
    11aa:	90 e0       	ldi	r25, 0x00	; 0
    11ac:	a0 e0       	ldi	r26, 0x00	; 0
    11ae:	b0 e0       	ldi	r27, 0x00	; 0
    11b0:	0c 2e       	mov	r0, r28
    11b2:	04 c0       	rjmp	.+8      	; 0x11bc <__pack_f+0x84>
    11b4:	88 0f       	add	r24, r24
    11b6:	99 1f       	adc	r25, r25
    11b8:	aa 1f       	adc	r26, r26
    11ba:	bb 1f       	adc	r27, r27
    11bc:	0a 94       	dec	r0
    11be:	d2 f7       	brpl	.-12     	; 0x11b4 <__pack_f+0x7c>
    11c0:	01 97       	sbiw	r24, 0x01	; 1
    11c2:	a1 09       	sbc	r26, r1
    11c4:	b1 09       	sbc	r27, r1
    11c6:	82 23       	and	r24, r18
    11c8:	93 23       	and	r25, r19
    11ca:	a4 23       	and	r26, r20
    11cc:	b5 23       	and	r27, r21
    11ce:	21 e0       	ldi	r18, 0x01	; 1
    11d0:	30 e0       	ldi	r19, 0x00	; 0
    11d2:	40 e0       	ldi	r20, 0x00	; 0
    11d4:	50 e0       	ldi	r21, 0x00	; 0
    11d6:	00 97       	sbiw	r24, 0x00	; 0
    11d8:	a1 05       	cpc	r26, r1
    11da:	b1 05       	cpc	r27, r1
    11dc:	19 f4       	brne	.+6      	; 0x11e4 <__pack_f+0xac>
    11de:	20 e0       	ldi	r18, 0x00	; 0
    11e0:	30 e0       	ldi	r19, 0x00	; 0
    11e2:	a9 01       	movw	r20, r18
    11e4:	2e 29       	or	r18, r14
    11e6:	3f 29       	or	r19, r15
    11e8:	40 2b       	or	r20, r16
    11ea:	51 2b       	or	r21, r17
    11ec:	03 c0       	rjmp	.+6      	; 0x11f4 <__pack_f+0xbc>
    11ee:	20 e0       	ldi	r18, 0x00	; 0
    11f0:	30 e0       	ldi	r19, 0x00	; 0
    11f2:	a9 01       	movw	r20, r18
    11f4:	da 01       	movw	r26, r20
    11f6:	c9 01       	movw	r24, r18
    11f8:	8f 77       	andi	r24, 0x7F	; 127
    11fa:	90 70       	andi	r25, 0x00	; 0
    11fc:	a0 70       	andi	r26, 0x00	; 0
    11fe:	b0 70       	andi	r27, 0x00	; 0
    1200:	80 34       	cpi	r24, 0x40	; 64
    1202:	91 05       	cpc	r25, r1
    1204:	a1 05       	cpc	r26, r1
    1206:	b1 05       	cpc	r27, r1
    1208:	39 f4       	brne	.+14     	; 0x1218 <__pack_f+0xe0>
    120a:	27 ff       	sbrs	r18, 7
    120c:	09 c0       	rjmp	.+18     	; 0x1220 <__pack_f+0xe8>
    120e:	20 5c       	subi	r18, 0xC0	; 192
    1210:	3f 4f       	sbci	r19, 0xFF	; 255
    1212:	4f 4f       	sbci	r20, 0xFF	; 255
    1214:	5f 4f       	sbci	r21, 0xFF	; 255
    1216:	04 c0       	rjmp	.+8      	; 0x1220 <__pack_f+0xe8>
    1218:	21 5c       	subi	r18, 0xC1	; 193
    121a:	3f 4f       	sbci	r19, 0xFF	; 255
    121c:	4f 4f       	sbci	r20, 0xFF	; 255
    121e:	5f 4f       	sbci	r21, 0xFF	; 255
    1220:	e1 e0       	ldi	r30, 0x01	; 1
    1222:	f0 e0       	ldi	r31, 0x00	; 0
    1224:	20 30       	cpi	r18, 0x00	; 0
    1226:	80 e0       	ldi	r24, 0x00	; 0
    1228:	38 07       	cpc	r19, r24
    122a:	80 e0       	ldi	r24, 0x00	; 0
    122c:	48 07       	cpc	r20, r24
    122e:	80 e4       	ldi	r24, 0x40	; 64
    1230:	58 07       	cpc	r21, r24
    1232:	28 f5       	brcc	.+74     	; 0x127e <__pack_f+0x146>
    1234:	e0 e0       	ldi	r30, 0x00	; 0
    1236:	f0 e0       	ldi	r31, 0x00	; 0
    1238:	22 c0       	rjmp	.+68     	; 0x127e <__pack_f+0x146>
    123a:	e0 38       	cpi	r30, 0x80	; 128
    123c:	f1 05       	cpc	r31, r1
    123e:	6c f5       	brge	.+90     	; 0x129a <__pack_f+0x162>
    1240:	e1 58       	subi	r30, 0x81	; 129
    1242:	ff 4f       	sbci	r31, 0xFF	; 255
    1244:	da 01       	movw	r26, r20
    1246:	c9 01       	movw	r24, r18
    1248:	8f 77       	andi	r24, 0x7F	; 127
    124a:	90 70       	andi	r25, 0x00	; 0
    124c:	a0 70       	andi	r26, 0x00	; 0
    124e:	b0 70       	andi	r27, 0x00	; 0
    1250:	80 34       	cpi	r24, 0x40	; 64
    1252:	91 05       	cpc	r25, r1
    1254:	a1 05       	cpc	r26, r1
    1256:	b1 05       	cpc	r27, r1
    1258:	39 f4       	brne	.+14     	; 0x1268 <__pack_f+0x130>
    125a:	27 ff       	sbrs	r18, 7
    125c:	09 c0       	rjmp	.+18     	; 0x1270 <__pack_f+0x138>
    125e:	20 5c       	subi	r18, 0xC0	; 192
    1260:	3f 4f       	sbci	r19, 0xFF	; 255
    1262:	4f 4f       	sbci	r20, 0xFF	; 255
    1264:	5f 4f       	sbci	r21, 0xFF	; 255
    1266:	04 c0       	rjmp	.+8      	; 0x1270 <__pack_f+0x138>
    1268:	21 5c       	subi	r18, 0xC1	; 193
    126a:	3f 4f       	sbci	r19, 0xFF	; 255
    126c:	4f 4f       	sbci	r20, 0xFF	; 255
    126e:	5f 4f       	sbci	r21, 0xFF	; 255
    1270:	57 ff       	sbrs	r21, 7
    1272:	05 c0       	rjmp	.+10     	; 0x127e <__pack_f+0x146>
    1274:	56 95       	lsr	r21
    1276:	47 95       	ror	r20
    1278:	37 95       	ror	r19
    127a:	27 95       	ror	r18
    127c:	31 96       	adiw	r30, 0x01	; 1
    127e:	87 e0       	ldi	r24, 0x07	; 7
    1280:	56 95       	lsr	r21
    1282:	47 95       	ror	r20
    1284:	37 95       	ror	r19
    1286:	27 95       	ror	r18
    1288:	8a 95       	dec	r24
    128a:	d1 f7       	brne	.-12     	; 0x1280 <__pack_f+0x148>
    128c:	0b c0       	rjmp	.+22     	; 0x12a4 <__pack_f+0x16c>
    128e:	e0 e0       	ldi	r30, 0x00	; 0
    1290:	f0 e0       	ldi	r31, 0x00	; 0
    1292:	05 c0       	rjmp	.+10     	; 0x129e <__pack_f+0x166>
    1294:	e0 e0       	ldi	r30, 0x00	; 0
    1296:	f0 e0       	ldi	r31, 0x00	; 0
    1298:	05 c0       	rjmp	.+10     	; 0x12a4 <__pack_f+0x16c>
    129a:	ef ef       	ldi	r30, 0xFF	; 255
    129c:	f0 e0       	ldi	r31, 0x00	; 0
    129e:	20 e0       	ldi	r18, 0x00	; 0
    12a0:	30 e0       	ldi	r19, 0x00	; 0
    12a2:	a9 01       	movw	r20, r18
    12a4:	8e 2f       	mov	r24, r30
    12a6:	87 95       	ror	r24
    12a8:	88 27       	eor	r24, r24
    12aa:	87 95       	ror	r24
    12ac:	94 2f       	mov	r25, r20
    12ae:	9f 77       	andi	r25, 0x7F	; 127
    12b0:	67 95       	ror	r22
    12b2:	66 27       	eor	r22, r22
    12b4:	67 95       	ror	r22
    12b6:	e6 95       	lsr	r30
    12b8:	e2 2e       	mov	r14, r18
    12ba:	a9 2f       	mov	r26, r25
    12bc:	a8 2b       	or	r26, r24
    12be:	fe 2f       	mov	r31, r30
    12c0:	f6 2b       	or	r31, r22
    12c2:	62 2f       	mov	r22, r18
    12c4:	73 2f       	mov	r23, r19
    12c6:	8a 2f       	mov	r24, r26
    12c8:	9f 2f       	mov	r25, r31
    12ca:	cd b7       	in	r28, 0x3d	; 61
    12cc:	de b7       	in	r29, 0x3e	; 62
    12ce:	e6 e0       	ldi	r30, 0x06	; 6
    12d0:	0c 94 54 0a 	jmp	0x14a8	; 0x14a8 <__epilogue_restores__+0x18>

000012d4 <__unpack_f>:
    12d4:	dc 01       	movw	r26, r24
    12d6:	fb 01       	movw	r30, r22
    12d8:	2c 91       	ld	r18, X
    12da:	11 96       	adiw	r26, 0x01	; 1
    12dc:	3c 91       	ld	r19, X
    12de:	11 97       	sbiw	r26, 0x01	; 1
    12e0:	12 96       	adiw	r26, 0x02	; 2
    12e2:	8c 91       	ld	r24, X
    12e4:	12 97       	sbiw	r26, 0x02	; 2
    12e6:	48 2f       	mov	r20, r24
    12e8:	4f 77       	andi	r20, 0x7F	; 127
    12ea:	50 e0       	ldi	r21, 0x00	; 0
    12ec:	98 2f       	mov	r25, r24
    12ee:	99 1f       	adc	r25, r25
    12f0:	99 27       	eor	r25, r25
    12f2:	99 1f       	adc	r25, r25
    12f4:	13 96       	adiw	r26, 0x03	; 3
    12f6:	6c 91       	ld	r22, X
    12f8:	13 97       	sbiw	r26, 0x03	; 3
    12fa:	86 2f       	mov	r24, r22
    12fc:	88 0f       	add	r24, r24
    12fe:	89 2b       	or	r24, r25
    1300:	90 e0       	ldi	r25, 0x00	; 0
    1302:	66 1f       	adc	r22, r22
    1304:	66 27       	eor	r22, r22
    1306:	66 1f       	adc	r22, r22
    1308:	61 83       	std	Z+1, r22	; 0x01
    130a:	00 97       	sbiw	r24, 0x00	; 0
    130c:	39 f5       	brne	.+78     	; 0x135c <__unpack_f+0x88>
    130e:	21 15       	cp	r18, r1
    1310:	31 05       	cpc	r19, r1
    1312:	41 05       	cpc	r20, r1
    1314:	51 05       	cpc	r21, r1
    1316:	11 f4       	brne	.+4      	; 0x131c <__unpack_f+0x48>
    1318:	82 e0       	ldi	r24, 0x02	; 2
    131a:	29 c0       	rjmp	.+82     	; 0x136e <__unpack_f+0x9a>
    131c:	82 e8       	ldi	r24, 0x82	; 130
    131e:	9f ef       	ldi	r25, 0xFF	; 255
    1320:	93 83       	std	Z+3, r25	; 0x03
    1322:	82 83       	std	Z+2, r24	; 0x02
    1324:	67 e0       	ldi	r22, 0x07	; 7
    1326:	22 0f       	add	r18, r18
    1328:	33 1f       	adc	r19, r19
    132a:	44 1f       	adc	r20, r20
    132c:	55 1f       	adc	r21, r21
    132e:	6a 95       	dec	r22
    1330:	d1 f7       	brne	.-12     	; 0x1326 <__unpack_f+0x52>
    1332:	83 e0       	ldi	r24, 0x03	; 3
    1334:	80 83       	st	Z, r24
    1336:	09 c0       	rjmp	.+18     	; 0x134a <__unpack_f+0x76>
    1338:	22 0f       	add	r18, r18
    133a:	33 1f       	adc	r19, r19
    133c:	44 1f       	adc	r20, r20
    133e:	55 1f       	adc	r21, r21
    1340:	82 81       	ldd	r24, Z+2	; 0x02
    1342:	93 81       	ldd	r25, Z+3	; 0x03
    1344:	01 97       	sbiw	r24, 0x01	; 1
    1346:	93 83       	std	Z+3, r25	; 0x03
    1348:	82 83       	std	Z+2, r24	; 0x02
    134a:	20 30       	cpi	r18, 0x00	; 0
    134c:	80 e0       	ldi	r24, 0x00	; 0
    134e:	38 07       	cpc	r19, r24
    1350:	80 e0       	ldi	r24, 0x00	; 0
    1352:	48 07       	cpc	r20, r24
    1354:	80 e4       	ldi	r24, 0x40	; 64
    1356:	58 07       	cpc	r21, r24
    1358:	78 f3       	brcs	.-34     	; 0x1338 <__unpack_f+0x64>
    135a:	20 c0       	rjmp	.+64     	; 0x139c <__unpack_f+0xc8>
    135c:	8f 3f       	cpi	r24, 0xFF	; 255
    135e:	91 05       	cpc	r25, r1
    1360:	79 f4       	brne	.+30     	; 0x1380 <__unpack_f+0xac>
    1362:	21 15       	cp	r18, r1
    1364:	31 05       	cpc	r19, r1
    1366:	41 05       	cpc	r20, r1
    1368:	51 05       	cpc	r21, r1
    136a:	19 f4       	brne	.+6      	; 0x1372 <__unpack_f+0x9e>
    136c:	84 e0       	ldi	r24, 0x04	; 4
    136e:	80 83       	st	Z, r24
    1370:	08 95       	ret
    1372:	44 ff       	sbrs	r20, 4
    1374:	03 c0       	rjmp	.+6      	; 0x137c <__unpack_f+0xa8>
    1376:	81 e0       	ldi	r24, 0x01	; 1
    1378:	80 83       	st	Z, r24
    137a:	10 c0       	rjmp	.+32     	; 0x139c <__unpack_f+0xc8>
    137c:	10 82       	st	Z, r1
    137e:	0e c0       	rjmp	.+28     	; 0x139c <__unpack_f+0xc8>
    1380:	8f 57       	subi	r24, 0x7F	; 127
    1382:	90 40       	sbci	r25, 0x00	; 0
    1384:	93 83       	std	Z+3, r25	; 0x03
    1386:	82 83       	std	Z+2, r24	; 0x02
    1388:	83 e0       	ldi	r24, 0x03	; 3
    138a:	80 83       	st	Z, r24
    138c:	87 e0       	ldi	r24, 0x07	; 7
    138e:	22 0f       	add	r18, r18
    1390:	33 1f       	adc	r19, r19
    1392:	44 1f       	adc	r20, r20
    1394:	55 1f       	adc	r21, r21
    1396:	8a 95       	dec	r24
    1398:	d1 f7       	brne	.-12     	; 0x138e <__unpack_f+0xba>
    139a:	50 64       	ori	r21, 0x40	; 64
    139c:	24 83       	std	Z+4, r18	; 0x04
    139e:	35 83       	std	Z+5, r19	; 0x05
    13a0:	46 83       	std	Z+6, r20	; 0x06
    13a2:	57 83       	std	Z+7, r21	; 0x07
    13a4:	08 95       	ret

000013a6 <__fpcmp_parts_f>:
    13a6:	fc 01       	movw	r30, r24
    13a8:	db 01       	movw	r26, r22
    13aa:	90 81       	ld	r25, Z
    13ac:	92 30       	cpi	r25, 0x02	; 2
    13ae:	08 f4       	brcc	.+2      	; 0x13b2 <__fpcmp_parts_f+0xc>
    13b0:	49 c0       	rjmp	.+146    	; 0x1444 <__fpcmp_parts_f+0x9e>
    13b2:	8c 91       	ld	r24, X
    13b4:	82 30       	cpi	r24, 0x02	; 2
    13b6:	08 f4       	brcc	.+2      	; 0x13ba <__fpcmp_parts_f+0x14>
    13b8:	45 c0       	rjmp	.+138    	; 0x1444 <__fpcmp_parts_f+0x9e>
    13ba:	94 30       	cpi	r25, 0x04	; 4
    13bc:	51 f4       	brne	.+20     	; 0x13d2 <__fpcmp_parts_f+0x2c>
    13be:	61 81       	ldd	r22, Z+1	; 0x01
    13c0:	84 30       	cpi	r24, 0x04	; 4
    13c2:	b1 f5       	brne	.+108    	; 0x1430 <__fpcmp_parts_f+0x8a>
    13c4:	11 96       	adiw	r26, 0x01	; 1
    13c6:	2c 91       	ld	r18, X
    13c8:	11 97       	sbiw	r26, 0x01	; 1
    13ca:	30 e0       	ldi	r19, 0x00	; 0
    13cc:	26 1b       	sub	r18, r22
    13ce:	31 09       	sbc	r19, r1
    13d0:	41 c0       	rjmp	.+130    	; 0x1454 <__fpcmp_parts_f+0xae>
    13d2:	84 30       	cpi	r24, 0x04	; 4
    13d4:	21 f0       	breq	.+8      	; 0x13de <__fpcmp_parts_f+0x38>
    13d6:	92 30       	cpi	r25, 0x02	; 2
    13d8:	41 f4       	brne	.+16     	; 0x13ea <__fpcmp_parts_f+0x44>
    13da:	82 30       	cpi	r24, 0x02	; 2
    13dc:	b1 f1       	breq	.+108    	; 0x144a <__fpcmp_parts_f+0xa4>
    13de:	11 96       	adiw	r26, 0x01	; 1
    13e0:	8c 91       	ld	r24, X
    13e2:	11 97       	sbiw	r26, 0x01	; 1
    13e4:	88 23       	and	r24, r24
    13e6:	a1 f1       	breq	.+104    	; 0x1450 <__fpcmp_parts_f+0xaa>
    13e8:	2d c0       	rjmp	.+90     	; 0x1444 <__fpcmp_parts_f+0x9e>
    13ea:	61 81       	ldd	r22, Z+1	; 0x01
    13ec:	82 30       	cpi	r24, 0x02	; 2
    13ee:	01 f1       	breq	.+64     	; 0x1430 <__fpcmp_parts_f+0x8a>
    13f0:	11 96       	adiw	r26, 0x01	; 1
    13f2:	8c 91       	ld	r24, X
    13f4:	11 97       	sbiw	r26, 0x01	; 1
    13f6:	68 17       	cp	r22, r24
    13f8:	d9 f4       	brne	.+54     	; 0x1430 <__fpcmp_parts_f+0x8a>
    13fa:	22 81       	ldd	r18, Z+2	; 0x02
    13fc:	33 81       	ldd	r19, Z+3	; 0x03
    13fe:	12 96       	adiw	r26, 0x02	; 2
    1400:	8d 91       	ld	r24, X+
    1402:	9c 91       	ld	r25, X
    1404:	13 97       	sbiw	r26, 0x03	; 3
    1406:	82 17       	cp	r24, r18
    1408:	93 07       	cpc	r25, r19
    140a:	94 f0       	brlt	.+36     	; 0x1430 <__fpcmp_parts_f+0x8a>
    140c:	28 17       	cp	r18, r24
    140e:	39 07       	cpc	r19, r25
    1410:	bc f0       	brlt	.+46     	; 0x1440 <__fpcmp_parts_f+0x9a>
    1412:	24 81       	ldd	r18, Z+4	; 0x04
    1414:	35 81       	ldd	r19, Z+5	; 0x05
    1416:	46 81       	ldd	r20, Z+6	; 0x06
    1418:	57 81       	ldd	r21, Z+7	; 0x07
    141a:	14 96       	adiw	r26, 0x04	; 4
    141c:	8d 91       	ld	r24, X+
    141e:	9d 91       	ld	r25, X+
    1420:	0d 90       	ld	r0, X+
    1422:	bc 91       	ld	r27, X
    1424:	a0 2d       	mov	r26, r0
    1426:	82 17       	cp	r24, r18
    1428:	93 07       	cpc	r25, r19
    142a:	a4 07       	cpc	r26, r20
    142c:	b5 07       	cpc	r27, r21
    142e:	18 f4       	brcc	.+6      	; 0x1436 <__fpcmp_parts_f+0x90>
    1430:	66 23       	and	r22, r22
    1432:	41 f0       	breq	.+16     	; 0x1444 <__fpcmp_parts_f+0x9e>
    1434:	0d c0       	rjmp	.+26     	; 0x1450 <__fpcmp_parts_f+0xaa>
    1436:	28 17       	cp	r18, r24
    1438:	39 07       	cpc	r19, r25
    143a:	4a 07       	cpc	r20, r26
    143c:	5b 07       	cpc	r21, r27
    143e:	28 f4       	brcc	.+10     	; 0x144a <__fpcmp_parts_f+0xa4>
    1440:	66 23       	and	r22, r22
    1442:	31 f0       	breq	.+12     	; 0x1450 <__fpcmp_parts_f+0xaa>
    1444:	21 e0       	ldi	r18, 0x01	; 1
    1446:	30 e0       	ldi	r19, 0x00	; 0
    1448:	05 c0       	rjmp	.+10     	; 0x1454 <__fpcmp_parts_f+0xae>
    144a:	20 e0       	ldi	r18, 0x00	; 0
    144c:	30 e0       	ldi	r19, 0x00	; 0
    144e:	02 c0       	rjmp	.+4      	; 0x1454 <__fpcmp_parts_f+0xae>
    1450:	2f ef       	ldi	r18, 0xFF	; 255
    1452:	3f ef       	ldi	r19, 0xFF	; 255
    1454:	c9 01       	movw	r24, r18
    1456:	08 95       	ret

00001458 <__prologue_saves__>:
    1458:	2f 92       	push	r2
    145a:	3f 92       	push	r3
    145c:	4f 92       	push	r4
    145e:	5f 92       	push	r5
    1460:	6f 92       	push	r6
    1462:	7f 92       	push	r7
    1464:	8f 92       	push	r8
    1466:	9f 92       	push	r9
    1468:	af 92       	push	r10
    146a:	bf 92       	push	r11
    146c:	cf 92       	push	r12
    146e:	df 92       	push	r13
    1470:	ef 92       	push	r14
    1472:	ff 92       	push	r15
    1474:	0f 93       	push	r16
    1476:	1f 93       	push	r17
    1478:	cf 93       	push	r28
    147a:	df 93       	push	r29
    147c:	cd b7       	in	r28, 0x3d	; 61
    147e:	de b7       	in	r29, 0x3e	; 62
    1480:	ca 1b       	sub	r28, r26
    1482:	db 0b       	sbc	r29, r27
    1484:	0f b6       	in	r0, 0x3f	; 63
    1486:	f8 94       	cli
    1488:	de bf       	out	0x3e, r29	; 62
    148a:	0f be       	out	0x3f, r0	; 63
    148c:	cd bf       	out	0x3d, r28	; 61
    148e:	09 94       	ijmp

00001490 <__epilogue_restores__>:
    1490:	2a 88       	ldd	r2, Y+18	; 0x12
    1492:	39 88       	ldd	r3, Y+17	; 0x11
    1494:	48 88       	ldd	r4, Y+16	; 0x10
    1496:	5f 84       	ldd	r5, Y+15	; 0x0f
    1498:	6e 84       	ldd	r6, Y+14	; 0x0e
    149a:	7d 84       	ldd	r7, Y+13	; 0x0d
    149c:	8c 84       	ldd	r8, Y+12	; 0x0c
    149e:	9b 84       	ldd	r9, Y+11	; 0x0b
    14a0:	aa 84       	ldd	r10, Y+10	; 0x0a
    14a2:	b9 84       	ldd	r11, Y+9	; 0x09
    14a4:	c8 84       	ldd	r12, Y+8	; 0x08
    14a6:	df 80       	ldd	r13, Y+7	; 0x07
    14a8:	ee 80       	ldd	r14, Y+6	; 0x06
    14aa:	fd 80       	ldd	r15, Y+5	; 0x05
    14ac:	0c 81       	ldd	r16, Y+4	; 0x04
    14ae:	1b 81       	ldd	r17, Y+3	; 0x03
    14b0:	aa 81       	ldd	r26, Y+2	; 0x02
    14b2:	b9 81       	ldd	r27, Y+1	; 0x01
    14b4:	ce 0f       	add	r28, r30
    14b6:	d1 1d       	adc	r29, r1
    14b8:	0f b6       	in	r0, 0x3f	; 63
    14ba:	f8 94       	cli
    14bc:	de bf       	out	0x3e, r29	; 62
    14be:	0f be       	out	0x3f, r0	; 63
    14c0:	cd bf       	out	0x3d, r28	; 61
    14c2:	ed 01       	movw	r28, r26
    14c4:	08 95       	ret

000014c6 <_exit>:
    14c6:	f8 94       	cli

000014c8 <__stop_program>:
    14c8:	ff cf       	rjmp	.-2      	; 0x14c8 <__stop_program>
