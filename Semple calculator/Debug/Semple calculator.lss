
Semple calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  00001320  00001394  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001320  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         000006cc  00000000  00000000  000013b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00001a80  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000160  00000000  00000000  00001b05  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000022b  00000000  00000000  00001c65  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002089  00000000  00000000  00001e90  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f4c  00000000  00000000  00003f19  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014d9  00000000  00000000  00004e65  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000220  00000000  00000000  00006340  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000431  00000000  00000000  00006560  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a79  00000000  00000000  00006991  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 00000588  00000000  00000000  0000740a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000030  00000000  00000000  00007992  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e0 e2       	ldi	r30, 0x20	; 32
      7c:	f3 e1       	ldi	r31, 0x13	; 19
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ae 31       	cpi	r26, 0x1E	; 30
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
      8a:	0e 94 50 03 	call	0x6a0	; 0x6a0 <main>
      8e:	0c 94 8e 09 	jmp	0x131c	; 0x131c <_exit>

00000092 <__bad_interrupt>:
      92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <SEND_TO_LCD>:
					   {'9','6','3','='},
					   {'/','x','-','+'}
					   };

void SEND_TO_LCD(char data , uint8_t mode )
{
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	df 93       	push	r29
      9c:	cf 93       	push	r28
      9e:	cd b7       	in	r28, 0x3d	; 61
      a0:	de b7       	in	r29, 0x3e	; 62
      a2:	eb 97       	sbiw	r28, 0x3b	; 59
      a4:	0f b6       	in	r0, 0x3f	; 63
      a6:	f8 94       	cli
      a8:	de bf       	out	0x3e, r29	; 62
      aa:	0f be       	out	0x3f, r0	; 63
      ac:	cd bf       	out	0x3d, r28	; 61
      ae:	8a af       	std	Y+58, r24	; 0x3a
      b0:	6b af       	std	Y+59, r22	; 0x3b
	uint8_t control_lcd = 0 ;
      b2:	19 82       	std	Y+1, r1	; 0x01
	write_to_calc(lcd_data_port,data);
      b4:	88 e2       	ldi	r24, 0x28	; 40
      b6:	90 e0       	ldi	r25, 0x00	; 0
      b8:	2f ef       	ldi	r18, 0xFF	; 255
      ba:	fc 01       	movw	r30, r24
      bc:	20 83       	st	Z, r18
      be:	8a e2       	ldi	r24, 0x2A	; 42
      c0:	90 e0       	ldi	r25, 0x00	; 0
      c2:	2f ef       	ldi	r18, 0xFF	; 255
      c4:	fc 01       	movw	r30, r24
      c6:	20 83       	st	Z, r18
      c8:	85 e2       	ldi	r24, 0x25	; 37
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	fc 01       	movw	r30, r24
      ce:	10 82       	st	Z, r1
      d0:	8b e2       	ldi	r24, 0x2B	; 43
      d2:	90 e0       	ldi	r25, 0x00	; 0
      d4:	2a ad       	ldd	r18, Y+58	; 0x3a
      d6:	fc 01       	movw	r30, r24
      d8:	20 83       	st	Z, r18
      da:	88 e2       	ldi	r24, 0x28	; 40
      dc:	90 e0       	ldi	r25, 0x00	; 0
      de:	2d ef       	ldi	r18, 0xFD	; 253
      e0:	fc 01       	movw	r30, r24
      e2:	20 83       	st	Z, r18
      e4:	80 e0       	ldi	r24, 0x00	; 0
      e6:	90 e0       	ldi	r25, 0x00	; 0
      e8:	a0 e8       	ldi	r26, 0x80	; 128
      ea:	bf e3       	ldi	r27, 0x3F	; 63
      ec:	8a 83       	std	Y+2, r24	; 0x02
      ee:	9b 83       	std	Y+3, r25	; 0x03
      f0:	ac 83       	std	Y+4, r26	; 0x04
      f2:	bd 83       	std	Y+5, r27	; 0x05
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
      f4:	6a 81       	ldd	r22, Y+2	; 0x02
      f6:	7b 81       	ldd	r23, Y+3	; 0x03
      f8:	8c 81       	ldd	r24, Y+4	; 0x04
      fa:	9d 81       	ldd	r25, Y+5	; 0x05
      fc:	20 e0       	ldi	r18, 0x00	; 0
      fe:	30 e0       	ldi	r19, 0x00	; 0
     100:	4a e7       	ldi	r20, 0x7A	; 122
     102:	55 e4       	ldi	r21, 0x45	; 69
     104:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__mulsf3>
     108:	dc 01       	movw	r26, r24
     10a:	cb 01       	movw	r24, r22
     10c:	8e 83       	std	Y+6, r24	; 0x06
     10e:	9f 83       	std	Y+7, r25	; 0x07
     110:	a8 87       	std	Y+8, r26	; 0x08
     112:	b9 87       	std	Y+9, r27	; 0x09
	if (__tmp < 1.0)
     114:	11 e0       	ldi	r17, 0x01	; 1
     116:	6e 81       	ldd	r22, Y+6	; 0x06
     118:	7f 81       	ldd	r23, Y+7	; 0x07
     11a:	88 85       	ldd	r24, Y+8	; 0x08
     11c:	99 85       	ldd	r25, Y+9	; 0x09
     11e:	20 e0       	ldi	r18, 0x00	; 0
     120:	30 e0       	ldi	r19, 0x00	; 0
     122:	40 e8       	ldi	r20, 0x80	; 128
     124:	5f e3       	ldi	r21, 0x3F	; 63
     126:	0e 94 45 07 	call	0xe8a	; 0xe8a <__ltsf2>
     12a:	88 23       	and	r24, r24
     12c:	0c f0       	brlt	.+2      	; 0x130 <SEND_TO_LCD+0x9a>
     12e:	10 e0       	ldi	r17, 0x00	; 0
     130:	11 23       	and	r17, r17
     132:	29 f0       	breq	.+10     	; 0x13e <SEND_TO_LCD+0xa8>
		__ticks = 1;
     134:	81 e0       	ldi	r24, 0x01	; 1
     136:	90 e0       	ldi	r25, 0x00	; 0
     138:	9b 87       	std	Y+11, r25	; 0x0b
     13a:	8a 87       	std	Y+10, r24	; 0x0a
     13c:	46 c0       	rjmp	.+140    	; 0x1ca <SEND_TO_LCD+0x134>
	else if (__tmp > 65535)
     13e:	11 e0       	ldi	r17, 0x01	; 1
     140:	6e 81       	ldd	r22, Y+6	; 0x06
     142:	7f 81       	ldd	r23, Y+7	; 0x07
     144:	88 85       	ldd	r24, Y+8	; 0x08
     146:	99 85       	ldd	r25, Y+9	; 0x09
     148:	20 e0       	ldi	r18, 0x00	; 0
     14a:	3f ef       	ldi	r19, 0xFF	; 255
     14c:	4f e7       	ldi	r20, 0x7F	; 127
     14e:	57 e4       	ldi	r21, 0x47	; 71
     150:	0e 94 e5 06 	call	0xdca	; 0xdca <__gtsf2>
     154:	18 16       	cp	r1, r24
     156:	0c f0       	brlt	.+2      	; 0x15a <SEND_TO_LCD+0xc4>
     158:	10 e0       	ldi	r17, 0x00	; 0
     15a:	11 23       	and	r17, r17
     15c:	61 f1       	breq	.+88     	; 0x1b6 <SEND_TO_LCD+0x120>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     15e:	6a 81       	ldd	r22, Y+2	; 0x02
     160:	7b 81       	ldd	r23, Y+3	; 0x03
     162:	8c 81       	ldd	r24, Y+4	; 0x04
     164:	9d 81       	ldd	r25, Y+5	; 0x05
     166:	20 e0       	ldi	r18, 0x00	; 0
     168:	30 e0       	ldi	r19, 0x00	; 0
     16a:	40 e2       	ldi	r20, 0x20	; 32
     16c:	51 e4       	ldi	r21, 0x41	; 65
     16e:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__mulsf3>
     172:	dc 01       	movw	r26, r24
     174:	cb 01       	movw	r24, r22
     176:	bc 01       	movw	r22, r24
     178:	cd 01       	movw	r24, r26
     17a:	0e 94 17 04 	call	0x82e	; 0x82e <__fixunssfsi>
     17e:	dc 01       	movw	r26, r24
     180:	cb 01       	movw	r24, r22
     182:	9b 87       	std	Y+11, r25	; 0x0b
     184:	8a 87       	std	Y+10, r24	; 0x0a
     186:	12 c0       	rjmp	.+36     	; 0x1ac <SEND_TO_LCD+0x116>
     188:	80 e9       	ldi	r24, 0x90	; 144
     18a:	91 e0       	ldi	r25, 0x01	; 1
     18c:	9d 87       	std	Y+13, r25	; 0x0d
     18e:	8c 87       	std	Y+12, r24	; 0x0c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     190:	8c 85       	ldd	r24, Y+12	; 0x0c
     192:	9d 85       	ldd	r25, Y+13	; 0x0d
     194:	8c 01       	movw	r16, r24
     196:	c8 01       	movw	r24, r16
     198:	01 97       	sbiw	r24, 0x01	; 1
     19a:	f1 f7       	brne	.-4      	; 0x198 <SEND_TO_LCD+0x102>
     19c:	8c 01       	movw	r16, r24
     19e:	1d 87       	std	Y+13, r17	; 0x0d
     1a0:	0c 87       	std	Y+12, r16	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1a2:	8a 85       	ldd	r24, Y+10	; 0x0a
     1a4:	9b 85       	ldd	r25, Y+11	; 0x0b
     1a6:	01 97       	sbiw	r24, 0x01	; 1
     1a8:	9b 87       	std	Y+11, r25	; 0x0b
     1aa:	8a 87       	std	Y+10, r24	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1ac:	8a 85       	ldd	r24, Y+10	; 0x0a
     1ae:	9b 85       	ldd	r25, Y+11	; 0x0b
     1b0:	00 97       	sbiw	r24, 0x00	; 0
     1b2:	51 f7       	brne	.-44     	; 0x188 <SEND_TO_LCD+0xf2>
     1b4:	17 c0       	rjmp	.+46     	; 0x1e4 <SEND_TO_LCD+0x14e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1b6:	6e 81       	ldd	r22, Y+6	; 0x06
     1b8:	7f 81       	ldd	r23, Y+7	; 0x07
     1ba:	88 85       	ldd	r24, Y+8	; 0x08
     1bc:	99 85       	ldd	r25, Y+9	; 0x09
     1be:	0e 94 17 04 	call	0x82e	; 0x82e <__fixunssfsi>
     1c2:	dc 01       	movw	r26, r24
     1c4:	cb 01       	movw	r24, r22
     1c6:	9b 87       	std	Y+11, r25	; 0x0b
     1c8:	8a 87       	std	Y+10, r24	; 0x0a
     1ca:	8a 85       	ldd	r24, Y+10	; 0x0a
     1cc:	9b 85       	ldd	r25, Y+11	; 0x0b
     1ce:	9f 87       	std	Y+15, r25	; 0x0f
     1d0:	8e 87       	std	Y+14, r24	; 0x0e
     1d2:	8e 85       	ldd	r24, Y+14	; 0x0e
     1d4:	9f 85       	ldd	r25, Y+15	; 0x0f
     1d6:	8c 01       	movw	r16, r24
     1d8:	f8 01       	movw	r30, r16
     1da:	31 97       	sbiw	r30, 0x01	; 1
     1dc:	f1 f7       	brne	.-4      	; 0x1da <SEND_TO_LCD+0x144>
     1de:	8f 01       	movw	r16, r30
     1e0:	1f 87       	std	Y+15, r17	; 0x0f
     1e2:	0e 87       	std	Y+14, r16	; 0x0e
     1e4:	88 e2       	ldi	r24, 0x28	; 40
     1e6:	90 e0       	ldi	r25, 0x00	; 0
     1e8:	2f ef       	ldi	r18, 0xFF	; 255
     1ea:	fc 01       	movw	r30, r24
     1ec:	20 83       	st	Z, r18
	control_lcd = mode ;			//CMD => RS=0 ,DATA =>RS =1 
     1ee:	8b ad       	ldd	r24, Y+59	; 0x3b
     1f0:	89 83       	std	Y+1, r24	; 0x01
	control_lcd |= 2;				// EN = 1
     1f2:	89 81       	ldd	r24, Y+1	; 0x01
     1f4:	82 60       	ori	r24, 0x02	; 2
     1f6:	89 83       	std	Y+1, r24	; 0x01
	write_to_calc(lcd_ctrl_port,control_lcd);
     1f8:	88 e2       	ldi	r24, 0x28	; 40
     1fa:	90 e0       	ldi	r25, 0x00	; 0
     1fc:	2f ef       	ldi	r18, 0xFF	; 255
     1fe:	fc 01       	movw	r30, r24
     200:	20 83       	st	Z, r18
     202:	8a e2       	ldi	r24, 0x2A	; 42
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	2f ef       	ldi	r18, 0xFF	; 255
     208:	fc 01       	movw	r30, r24
     20a:	20 83       	st	Z, r18
     20c:	85 e2       	ldi	r24, 0x25	; 37
     20e:	90 e0       	ldi	r25, 0x00	; 0
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	fc 01       	movw	r30, r24
     214:	20 83       	st	Z, r18
     216:	8b e2       	ldi	r24, 0x2B	; 43
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	29 81       	ldd	r18, Y+1	; 0x01
     21c:	fc 01       	movw	r30, r24
     21e:	20 83       	st	Z, r18
     220:	88 e2       	ldi	r24, 0x28	; 40
     222:	90 e0       	ldi	r25, 0x00	; 0
     224:	2d ef       	ldi	r18, 0xFD	; 253
     226:	fc 01       	movw	r30, r24
     228:	20 83       	st	Z, r18
     22a:	80 e0       	ldi	r24, 0x00	; 0
     22c:	90 e0       	ldi	r25, 0x00	; 0
     22e:	a0 e8       	ldi	r26, 0x80	; 128
     230:	bf e3       	ldi	r27, 0x3F	; 63
     232:	88 8b       	std	Y+16, r24	; 0x10
     234:	99 8b       	std	Y+17, r25	; 0x11
     236:	aa 8b       	std	Y+18, r26	; 0x12
     238:	bb 8b       	std	Y+19, r27	; 0x13
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     23a:	68 89       	ldd	r22, Y+16	; 0x10
     23c:	79 89       	ldd	r23, Y+17	; 0x11
     23e:	8a 89       	ldd	r24, Y+18	; 0x12
     240:	9b 89       	ldd	r25, Y+19	; 0x13
     242:	20 e0       	ldi	r18, 0x00	; 0
     244:	30 e0       	ldi	r19, 0x00	; 0
     246:	4a e7       	ldi	r20, 0x7A	; 122
     248:	55 e4       	ldi	r21, 0x45	; 69
     24a:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__mulsf3>
     24e:	dc 01       	movw	r26, r24
     250:	cb 01       	movw	r24, r22
     252:	8c 8b       	std	Y+20, r24	; 0x14
     254:	9d 8b       	std	Y+21, r25	; 0x15
     256:	ae 8b       	std	Y+22, r26	; 0x16
     258:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
     25a:	11 e0       	ldi	r17, 0x01	; 1
     25c:	6c 89       	ldd	r22, Y+20	; 0x14
     25e:	7d 89       	ldd	r23, Y+21	; 0x15
     260:	8e 89       	ldd	r24, Y+22	; 0x16
     262:	9f 89       	ldd	r25, Y+23	; 0x17
     264:	20 e0       	ldi	r18, 0x00	; 0
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	40 e8       	ldi	r20, 0x80	; 128
     26a:	5f e3       	ldi	r21, 0x3F	; 63
     26c:	0e 94 45 07 	call	0xe8a	; 0xe8a <__ltsf2>
     270:	88 23       	and	r24, r24
     272:	0c f0       	brlt	.+2      	; 0x276 <SEND_TO_LCD+0x1e0>
     274:	10 e0       	ldi	r17, 0x00	; 0
     276:	11 23       	and	r17, r17
     278:	29 f0       	breq	.+10     	; 0x284 <SEND_TO_LCD+0x1ee>
		__ticks = 1;
     27a:	81 e0       	ldi	r24, 0x01	; 1
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	99 8f       	std	Y+25, r25	; 0x19
     280:	88 8f       	std	Y+24, r24	; 0x18
     282:	46 c0       	rjmp	.+140    	; 0x310 <SEND_TO_LCD+0x27a>
	else if (__tmp > 65535)
     284:	11 e0       	ldi	r17, 0x01	; 1
     286:	6c 89       	ldd	r22, Y+20	; 0x14
     288:	7d 89       	ldd	r23, Y+21	; 0x15
     28a:	8e 89       	ldd	r24, Y+22	; 0x16
     28c:	9f 89       	ldd	r25, Y+23	; 0x17
     28e:	20 e0       	ldi	r18, 0x00	; 0
     290:	3f ef       	ldi	r19, 0xFF	; 255
     292:	4f e7       	ldi	r20, 0x7F	; 127
     294:	57 e4       	ldi	r21, 0x47	; 71
     296:	0e 94 e5 06 	call	0xdca	; 0xdca <__gtsf2>
     29a:	18 16       	cp	r1, r24
     29c:	0c f0       	brlt	.+2      	; 0x2a0 <SEND_TO_LCD+0x20a>
     29e:	10 e0       	ldi	r17, 0x00	; 0
     2a0:	11 23       	and	r17, r17
     2a2:	61 f1       	breq	.+88     	; 0x2fc <SEND_TO_LCD+0x266>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2a4:	68 89       	ldd	r22, Y+16	; 0x10
     2a6:	79 89       	ldd	r23, Y+17	; 0x11
     2a8:	8a 89       	ldd	r24, Y+18	; 0x12
     2aa:	9b 89       	ldd	r25, Y+19	; 0x13
     2ac:	20 e0       	ldi	r18, 0x00	; 0
     2ae:	30 e0       	ldi	r19, 0x00	; 0
     2b0:	40 e2       	ldi	r20, 0x20	; 32
     2b2:	51 e4       	ldi	r21, 0x41	; 65
     2b4:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__mulsf3>
     2b8:	dc 01       	movw	r26, r24
     2ba:	cb 01       	movw	r24, r22
     2bc:	bc 01       	movw	r22, r24
     2be:	cd 01       	movw	r24, r26
     2c0:	0e 94 17 04 	call	0x82e	; 0x82e <__fixunssfsi>
     2c4:	dc 01       	movw	r26, r24
     2c6:	cb 01       	movw	r24, r22
     2c8:	99 8f       	std	Y+25, r25	; 0x19
     2ca:	88 8f       	std	Y+24, r24	; 0x18
     2cc:	12 c0       	rjmp	.+36     	; 0x2f2 <SEND_TO_LCD+0x25c>
     2ce:	80 e9       	ldi	r24, 0x90	; 144
     2d0:	91 e0       	ldi	r25, 0x01	; 1
     2d2:	9b 8f       	std	Y+27, r25	; 0x1b
     2d4:	8a 8f       	std	Y+26, r24	; 0x1a
     2d6:	8a 8d       	ldd	r24, Y+26	; 0x1a
     2d8:	9b 8d       	ldd	r25, Y+27	; 0x1b
     2da:	8c 01       	movw	r16, r24
     2dc:	c8 01       	movw	r24, r16
     2de:	01 97       	sbiw	r24, 0x01	; 1
     2e0:	f1 f7       	brne	.-4      	; 0x2de <SEND_TO_LCD+0x248>
     2e2:	8c 01       	movw	r16, r24
     2e4:	1b 8f       	std	Y+27, r17	; 0x1b
     2e6:	0a 8f       	std	Y+26, r16	; 0x1a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2e8:	88 8d       	ldd	r24, Y+24	; 0x18
     2ea:	99 8d       	ldd	r25, Y+25	; 0x19
     2ec:	01 97       	sbiw	r24, 0x01	; 1
     2ee:	99 8f       	std	Y+25, r25	; 0x19
     2f0:	88 8f       	std	Y+24, r24	; 0x18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2f2:	88 8d       	ldd	r24, Y+24	; 0x18
     2f4:	99 8d       	ldd	r25, Y+25	; 0x19
     2f6:	00 97       	sbiw	r24, 0x00	; 0
     2f8:	51 f7       	brne	.-44     	; 0x2ce <SEND_TO_LCD+0x238>
     2fa:	17 c0       	rjmp	.+46     	; 0x32a <SEND_TO_LCD+0x294>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2fc:	6c 89       	ldd	r22, Y+20	; 0x14
     2fe:	7d 89       	ldd	r23, Y+21	; 0x15
     300:	8e 89       	ldd	r24, Y+22	; 0x16
     302:	9f 89       	ldd	r25, Y+23	; 0x17
     304:	0e 94 17 04 	call	0x82e	; 0x82e <__fixunssfsi>
     308:	dc 01       	movw	r26, r24
     30a:	cb 01       	movw	r24, r22
     30c:	99 8f       	std	Y+25, r25	; 0x19
     30e:	88 8f       	std	Y+24, r24	; 0x18
     310:	88 8d       	ldd	r24, Y+24	; 0x18
     312:	99 8d       	ldd	r25, Y+25	; 0x19
     314:	9d 8f       	std	Y+29, r25	; 0x1d
     316:	8c 8f       	std	Y+28, r24	; 0x1c
     318:	8c 8d       	ldd	r24, Y+28	; 0x1c
     31a:	9d 8d       	ldd	r25, Y+29	; 0x1d
     31c:	8c 01       	movw	r16, r24
     31e:	f8 01       	movw	r30, r16
     320:	31 97       	sbiw	r30, 0x01	; 1
     322:	f1 f7       	brne	.-4      	; 0x320 <SEND_TO_LCD+0x28a>
     324:	8f 01       	movw	r16, r30
     326:	1d 8f       	std	Y+29, r17	; 0x1d
     328:	0c 8f       	std	Y+28, r16	; 0x1c
     32a:	88 e2       	ldi	r24, 0x28	; 40
     32c:	90 e0       	ldi	r25, 0x00	; 0
     32e:	2f ef       	ldi	r18, 0xFF	; 255
     330:	fc 01       	movw	r30, r24
     332:	20 83       	st	Z, r18
     334:	80 e0       	ldi	r24, 0x00	; 0
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	a0 e8       	ldi	r26, 0x80	; 128
     33a:	bf e3       	ldi	r27, 0x3F	; 63
     33c:	8e 8f       	std	Y+30, r24	; 0x1e
     33e:	9f 8f       	std	Y+31, r25	; 0x1f
     340:	a8 a3       	std	Y+32, r26	; 0x20
     342:	b9 a3       	std	Y+33, r27	; 0x21
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     344:	6e 8d       	ldd	r22, Y+30	; 0x1e
     346:	7f 8d       	ldd	r23, Y+31	; 0x1f
     348:	88 a1       	ldd	r24, Y+32	; 0x20
     34a:	99 a1       	ldd	r25, Y+33	; 0x21
     34c:	20 e0       	ldi	r18, 0x00	; 0
     34e:	30 e0       	ldi	r19, 0x00	; 0
     350:	4a e7       	ldi	r20, 0x7A	; 122
     352:	55 e4       	ldi	r21, 0x45	; 69
     354:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__mulsf3>
     358:	dc 01       	movw	r26, r24
     35a:	cb 01       	movw	r24, r22
     35c:	8a a3       	std	Y+34, r24	; 0x22
     35e:	9b a3       	std	Y+35, r25	; 0x23
     360:	ac a3       	std	Y+36, r26	; 0x24
     362:	bd a3       	std	Y+37, r27	; 0x25
	if (__tmp < 1.0)
     364:	11 e0       	ldi	r17, 0x01	; 1
     366:	6a a1       	ldd	r22, Y+34	; 0x22
     368:	7b a1       	ldd	r23, Y+35	; 0x23
     36a:	8c a1       	ldd	r24, Y+36	; 0x24
     36c:	9d a1       	ldd	r25, Y+37	; 0x25
     36e:	20 e0       	ldi	r18, 0x00	; 0
     370:	30 e0       	ldi	r19, 0x00	; 0
     372:	40 e8       	ldi	r20, 0x80	; 128
     374:	5f e3       	ldi	r21, 0x3F	; 63
     376:	0e 94 45 07 	call	0xe8a	; 0xe8a <__ltsf2>
     37a:	88 23       	and	r24, r24
     37c:	0c f0       	brlt	.+2      	; 0x380 <SEND_TO_LCD+0x2ea>
     37e:	10 e0       	ldi	r17, 0x00	; 0
     380:	11 23       	and	r17, r17
     382:	29 f0       	breq	.+10     	; 0x38e <SEND_TO_LCD+0x2f8>
		__ticks = 1;
     384:	81 e0       	ldi	r24, 0x01	; 1
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	9f a3       	std	Y+39, r25	; 0x27
     38a:	8e a3       	std	Y+38, r24	; 0x26
     38c:	46 c0       	rjmp	.+140    	; 0x41a <SEND_TO_LCD+0x384>
	else if (__tmp > 65535)
     38e:	11 e0       	ldi	r17, 0x01	; 1
     390:	6a a1       	ldd	r22, Y+34	; 0x22
     392:	7b a1       	ldd	r23, Y+35	; 0x23
     394:	8c a1       	ldd	r24, Y+36	; 0x24
     396:	9d a1       	ldd	r25, Y+37	; 0x25
     398:	20 e0       	ldi	r18, 0x00	; 0
     39a:	3f ef       	ldi	r19, 0xFF	; 255
     39c:	4f e7       	ldi	r20, 0x7F	; 127
     39e:	57 e4       	ldi	r21, 0x47	; 71
     3a0:	0e 94 e5 06 	call	0xdca	; 0xdca <__gtsf2>
     3a4:	18 16       	cp	r1, r24
     3a6:	0c f0       	brlt	.+2      	; 0x3aa <SEND_TO_LCD+0x314>
     3a8:	10 e0       	ldi	r17, 0x00	; 0
     3aa:	11 23       	and	r17, r17
     3ac:	61 f1       	breq	.+88     	; 0x406 <SEND_TO_LCD+0x370>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3ae:	6e 8d       	ldd	r22, Y+30	; 0x1e
     3b0:	7f 8d       	ldd	r23, Y+31	; 0x1f
     3b2:	88 a1       	ldd	r24, Y+32	; 0x20
     3b4:	99 a1       	ldd	r25, Y+33	; 0x21
     3b6:	20 e0       	ldi	r18, 0x00	; 0
     3b8:	30 e0       	ldi	r19, 0x00	; 0
     3ba:	40 e2       	ldi	r20, 0x20	; 32
     3bc:	51 e4       	ldi	r21, 0x41	; 65
     3be:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__mulsf3>
     3c2:	dc 01       	movw	r26, r24
     3c4:	cb 01       	movw	r24, r22
     3c6:	bc 01       	movw	r22, r24
     3c8:	cd 01       	movw	r24, r26
     3ca:	0e 94 17 04 	call	0x82e	; 0x82e <__fixunssfsi>
     3ce:	dc 01       	movw	r26, r24
     3d0:	cb 01       	movw	r24, r22
     3d2:	9f a3       	std	Y+39, r25	; 0x27
     3d4:	8e a3       	std	Y+38, r24	; 0x26
     3d6:	12 c0       	rjmp	.+36     	; 0x3fc <SEND_TO_LCD+0x366>
     3d8:	80 e9       	ldi	r24, 0x90	; 144
     3da:	91 e0       	ldi	r25, 0x01	; 1
     3dc:	99 a7       	std	Y+41, r25	; 0x29
     3de:	88 a7       	std	Y+40, r24	; 0x28
     3e0:	88 a5       	ldd	r24, Y+40	; 0x28
     3e2:	99 a5       	ldd	r25, Y+41	; 0x29
     3e4:	8c 01       	movw	r16, r24
     3e6:	c8 01       	movw	r24, r16
     3e8:	01 97       	sbiw	r24, 0x01	; 1
     3ea:	f1 f7       	brne	.-4      	; 0x3e8 <SEND_TO_LCD+0x352>
     3ec:	8c 01       	movw	r16, r24
     3ee:	19 a7       	std	Y+41, r17	; 0x29
     3f0:	08 a7       	std	Y+40, r16	; 0x28
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3f2:	8e a1       	ldd	r24, Y+38	; 0x26
     3f4:	9f a1       	ldd	r25, Y+39	; 0x27
     3f6:	01 97       	sbiw	r24, 0x01	; 1
     3f8:	9f a3       	std	Y+39, r25	; 0x27
     3fa:	8e a3       	std	Y+38, r24	; 0x26
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3fc:	8e a1       	ldd	r24, Y+38	; 0x26
     3fe:	9f a1       	ldd	r25, Y+39	; 0x27
     400:	00 97       	sbiw	r24, 0x00	; 0
     402:	51 f7       	brne	.-44     	; 0x3d8 <SEND_TO_LCD+0x342>
     404:	17 c0       	rjmp	.+46     	; 0x434 <SEND_TO_LCD+0x39e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     406:	6a a1       	ldd	r22, Y+34	; 0x22
     408:	7b a1       	ldd	r23, Y+35	; 0x23
     40a:	8c a1       	ldd	r24, Y+36	; 0x24
     40c:	9d a1       	ldd	r25, Y+37	; 0x25
     40e:	0e 94 17 04 	call	0x82e	; 0x82e <__fixunssfsi>
     412:	dc 01       	movw	r26, r24
     414:	cb 01       	movw	r24, r22
     416:	9f a3       	std	Y+39, r25	; 0x27
     418:	8e a3       	std	Y+38, r24	; 0x26
     41a:	8e a1       	ldd	r24, Y+38	; 0x26
     41c:	9f a1       	ldd	r25, Y+39	; 0x27
     41e:	9b a7       	std	Y+43, r25	; 0x2b
     420:	8a a7       	std	Y+42, r24	; 0x2a
     422:	8a a5       	ldd	r24, Y+42	; 0x2a
     424:	9b a5       	ldd	r25, Y+43	; 0x2b
     426:	8c 01       	movw	r16, r24
     428:	f8 01       	movw	r30, r16
     42a:	31 97       	sbiw	r30, 0x01	; 1
     42c:	f1 f7       	brne	.-4      	; 0x42a <SEND_TO_LCD+0x394>
     42e:	8f 01       	movw	r16, r30
     430:	1b a7       	std	Y+43, r17	; 0x2b
     432:	0a a7       	std	Y+42, r16	; 0x2a
	_delay_ms(1);
	control_lcd &= ~2 ;				// EN =0
     434:	89 81       	ldd	r24, Y+1	; 0x01
     436:	8d 7f       	andi	r24, 0xFD	; 253
     438:	89 83       	std	Y+1, r24	; 0x01
	write_to_calc(lcd_ctrl_port,control_lcd);
     43a:	88 e2       	ldi	r24, 0x28	; 40
     43c:	90 e0       	ldi	r25, 0x00	; 0
     43e:	2f ef       	ldi	r18, 0xFF	; 255
     440:	fc 01       	movw	r30, r24
     442:	20 83       	st	Z, r18
     444:	8a e2       	ldi	r24, 0x2A	; 42
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	2f ef       	ldi	r18, 0xFF	; 255
     44a:	fc 01       	movw	r30, r24
     44c:	20 83       	st	Z, r18
     44e:	85 e2       	ldi	r24, 0x25	; 37
     450:	90 e0       	ldi	r25, 0x00	; 0
     452:	21 e0       	ldi	r18, 0x01	; 1
     454:	fc 01       	movw	r30, r24
     456:	20 83       	st	Z, r18
     458:	8b e2       	ldi	r24, 0x2B	; 43
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	29 81       	ldd	r18, Y+1	; 0x01
     45e:	fc 01       	movw	r30, r24
     460:	20 83       	st	Z, r18
     462:	88 e2       	ldi	r24, 0x28	; 40
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	2d ef       	ldi	r18, 0xFD	; 253
     468:	fc 01       	movw	r30, r24
     46a:	20 83       	st	Z, r18
     46c:	80 e0       	ldi	r24, 0x00	; 0
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	a0 e8       	ldi	r26, 0x80	; 128
     472:	bf e3       	ldi	r27, 0x3F	; 63
     474:	8c a7       	std	Y+44, r24	; 0x2c
     476:	9d a7       	std	Y+45, r25	; 0x2d
     478:	ae a7       	std	Y+46, r26	; 0x2e
     47a:	bf a7       	std	Y+47, r27	; 0x2f
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     47c:	6c a5       	ldd	r22, Y+44	; 0x2c
     47e:	7d a5       	ldd	r23, Y+45	; 0x2d
     480:	8e a5       	ldd	r24, Y+46	; 0x2e
     482:	9f a5       	ldd	r25, Y+47	; 0x2f
     484:	20 e0       	ldi	r18, 0x00	; 0
     486:	30 e0       	ldi	r19, 0x00	; 0
     488:	4a e7       	ldi	r20, 0x7A	; 122
     48a:	55 e4       	ldi	r21, 0x45	; 69
     48c:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__mulsf3>
     490:	dc 01       	movw	r26, r24
     492:	cb 01       	movw	r24, r22
     494:	88 ab       	std	Y+48, r24	; 0x30
     496:	99 ab       	std	Y+49, r25	; 0x31
     498:	aa ab       	std	Y+50, r26	; 0x32
     49a:	bb ab       	std	Y+51, r27	; 0x33
	if (__tmp < 1.0)
     49c:	11 e0       	ldi	r17, 0x01	; 1
     49e:	68 a9       	ldd	r22, Y+48	; 0x30
     4a0:	79 a9       	ldd	r23, Y+49	; 0x31
     4a2:	8a a9       	ldd	r24, Y+50	; 0x32
     4a4:	9b a9       	ldd	r25, Y+51	; 0x33
     4a6:	20 e0       	ldi	r18, 0x00	; 0
     4a8:	30 e0       	ldi	r19, 0x00	; 0
     4aa:	40 e8       	ldi	r20, 0x80	; 128
     4ac:	5f e3       	ldi	r21, 0x3F	; 63
     4ae:	0e 94 45 07 	call	0xe8a	; 0xe8a <__ltsf2>
     4b2:	88 23       	and	r24, r24
     4b4:	0c f0       	brlt	.+2      	; 0x4b8 <SEND_TO_LCD+0x422>
     4b6:	10 e0       	ldi	r17, 0x00	; 0
     4b8:	11 23       	and	r17, r17
     4ba:	29 f0       	breq	.+10     	; 0x4c6 <SEND_TO_LCD+0x430>
		__ticks = 1;
     4bc:	81 e0       	ldi	r24, 0x01	; 1
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	9d ab       	std	Y+53, r25	; 0x35
     4c2:	8c ab       	std	Y+52, r24	; 0x34
     4c4:	46 c0       	rjmp	.+140    	; 0x552 <SEND_TO_LCD+0x4bc>
	else if (__tmp > 65535)
     4c6:	11 e0       	ldi	r17, 0x01	; 1
     4c8:	68 a9       	ldd	r22, Y+48	; 0x30
     4ca:	79 a9       	ldd	r23, Y+49	; 0x31
     4cc:	8a a9       	ldd	r24, Y+50	; 0x32
     4ce:	9b a9       	ldd	r25, Y+51	; 0x33
     4d0:	20 e0       	ldi	r18, 0x00	; 0
     4d2:	3f ef       	ldi	r19, 0xFF	; 255
     4d4:	4f e7       	ldi	r20, 0x7F	; 127
     4d6:	57 e4       	ldi	r21, 0x47	; 71
     4d8:	0e 94 e5 06 	call	0xdca	; 0xdca <__gtsf2>
     4dc:	18 16       	cp	r1, r24
     4de:	0c f0       	brlt	.+2      	; 0x4e2 <SEND_TO_LCD+0x44c>
     4e0:	10 e0       	ldi	r17, 0x00	; 0
     4e2:	11 23       	and	r17, r17
     4e4:	61 f1       	breq	.+88     	; 0x53e <SEND_TO_LCD+0x4a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4e6:	6c a5       	ldd	r22, Y+44	; 0x2c
     4e8:	7d a5       	ldd	r23, Y+45	; 0x2d
     4ea:	8e a5       	ldd	r24, Y+46	; 0x2e
     4ec:	9f a5       	ldd	r25, Y+47	; 0x2f
     4ee:	20 e0       	ldi	r18, 0x00	; 0
     4f0:	30 e0       	ldi	r19, 0x00	; 0
     4f2:	40 e2       	ldi	r20, 0x20	; 32
     4f4:	51 e4       	ldi	r21, 0x41	; 65
     4f6:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__mulsf3>
     4fa:	dc 01       	movw	r26, r24
     4fc:	cb 01       	movw	r24, r22
     4fe:	bc 01       	movw	r22, r24
     500:	cd 01       	movw	r24, r26
     502:	0e 94 17 04 	call	0x82e	; 0x82e <__fixunssfsi>
     506:	dc 01       	movw	r26, r24
     508:	cb 01       	movw	r24, r22
     50a:	9d ab       	std	Y+53, r25	; 0x35
     50c:	8c ab       	std	Y+52, r24	; 0x34
     50e:	12 c0       	rjmp	.+36     	; 0x534 <SEND_TO_LCD+0x49e>
     510:	80 e9       	ldi	r24, 0x90	; 144
     512:	91 e0       	ldi	r25, 0x01	; 1
     514:	9f ab       	std	Y+55, r25	; 0x37
     516:	8e ab       	std	Y+54, r24	; 0x36
     518:	8e a9       	ldd	r24, Y+54	; 0x36
     51a:	9f a9       	ldd	r25, Y+55	; 0x37
     51c:	8c 01       	movw	r16, r24
     51e:	c8 01       	movw	r24, r16
     520:	01 97       	sbiw	r24, 0x01	; 1
     522:	f1 f7       	brne	.-4      	; 0x520 <SEND_TO_LCD+0x48a>
     524:	8c 01       	movw	r16, r24
     526:	1f ab       	std	Y+55, r17	; 0x37
     528:	0e ab       	std	Y+54, r16	; 0x36
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     52a:	8c a9       	ldd	r24, Y+52	; 0x34
     52c:	9d a9       	ldd	r25, Y+53	; 0x35
     52e:	01 97       	sbiw	r24, 0x01	; 1
     530:	9d ab       	std	Y+53, r25	; 0x35
     532:	8c ab       	std	Y+52, r24	; 0x34
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     534:	8c a9       	ldd	r24, Y+52	; 0x34
     536:	9d a9       	ldd	r25, Y+53	; 0x35
     538:	00 97       	sbiw	r24, 0x00	; 0
     53a:	51 f7       	brne	.-44     	; 0x510 <SEND_TO_LCD+0x47a>
     53c:	17 c0       	rjmp	.+46     	; 0x56c <SEND_TO_LCD+0x4d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     53e:	68 a9       	ldd	r22, Y+48	; 0x30
     540:	79 a9       	ldd	r23, Y+49	; 0x31
     542:	8a a9       	ldd	r24, Y+50	; 0x32
     544:	9b a9       	ldd	r25, Y+51	; 0x33
     546:	0e 94 17 04 	call	0x82e	; 0x82e <__fixunssfsi>
     54a:	dc 01       	movw	r26, r24
     54c:	cb 01       	movw	r24, r22
     54e:	9d ab       	std	Y+53, r25	; 0x35
     550:	8c ab       	std	Y+52, r24	; 0x34
     552:	8c a9       	ldd	r24, Y+52	; 0x34
     554:	9d a9       	ldd	r25, Y+53	; 0x35
     556:	99 af       	std	Y+57, r25	; 0x39
     558:	88 af       	std	Y+56, r24	; 0x38
     55a:	88 ad       	ldd	r24, Y+56	; 0x38
     55c:	99 ad       	ldd	r25, Y+57	; 0x39
     55e:	8c 01       	movw	r16, r24
     560:	f8 01       	movw	r30, r16
     562:	31 97       	sbiw	r30, 0x01	; 1
     564:	f1 f7       	brne	.-4      	; 0x562 <SEND_TO_LCD+0x4cc>
     566:	8f 01       	movw	r16, r30
     568:	19 af       	std	Y+57, r17	; 0x39
     56a:	08 af       	std	Y+56, r16	; 0x38
     56c:	88 e2       	ldi	r24, 0x28	; 40
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	2f ef       	ldi	r18, 0xFF	; 255
     572:	fc 01       	movw	r30, r24
     574:	20 83       	st	Z, r18
}
     576:	eb 96       	adiw	r28, 0x3b	; 59
     578:	0f b6       	in	r0, 0x3f	; 63
     57a:	f8 94       	cli
     57c:	de bf       	out	0x3e, r29	; 62
     57e:	0f be       	out	0x3f, r0	; 63
     580:	cd bf       	out	0x3d, r28	; 61
     582:	cf 91       	pop	r28
     584:	df 91       	pop	r29
     586:	1f 91       	pop	r17
     588:	0f 91       	pop	r16
     58a:	08 95       	ret

0000058c <INIT_LCD>:

void INIT_LCD()
{
     58c:	df 93       	push	r29
     58e:	cf 93       	push	r28
     590:	cd b7       	in	r28, 0x3d	; 61
     592:	de b7       	in	r29, 0x3e	; 62
	SEND_TO_LCD(set_size,CMD);
     594:	88 e3       	ldi	r24, 0x38	; 56
     596:	60 e0       	ldi	r22, 0x00	; 0
     598:	0e 94 4b 00 	call	0x96	; 0x96 <SEND_TO_LCD>
	SEND_TO_LCD(clr,CMD);
     59c:	81 e0       	ldi	r24, 0x01	; 1
     59e:	60 e0       	ldi	r22, 0x00	; 0
     5a0:	0e 94 4b 00 	call	0x96	; 0x96 <SEND_TO_LCD>
	SEND_TO_LCD(display_on,CMD)	;
     5a4:	8e e0       	ldi	r24, 0x0E	; 14
     5a6:	60 e0       	ldi	r22, 0x00	; 0
     5a8:	0e 94 4b 00 	call	0x96	; 0x96 <SEND_TO_LCD>
}
     5ac:	cf 91       	pop	r28
     5ae:	df 91       	pop	r29
     5b0:	08 95       	ret

000005b2 <write_to_LCD>:

void write_to_LCD(char ch){
     5b2:	df 93       	push	r29
     5b4:	cf 93       	push	r28
     5b6:	0f 92       	push	r0
     5b8:	cd b7       	in	r28, 0x3d	; 61
     5ba:	de b7       	in	r29, 0x3e	; 62
     5bc:	89 83       	std	Y+1, r24	; 0x01
	SEND_TO_LCD(ch,DATA);
     5be:	89 81       	ldd	r24, Y+1	; 0x01
     5c0:	61 e0       	ldi	r22, 0x01	; 1
     5c2:	0e 94 4b 00 	call	0x96	; 0x96 <SEND_TO_LCD>
}
     5c6:	0f 90       	pop	r0
     5c8:	cf 91       	pop	r28
     5ca:	df 91       	pop	r29
     5cc:	08 95       	ret

000005ce <print_to_LCD>:

void print_to_LCD(char *str){
     5ce:	df 93       	push	r29
     5d0:	cf 93       	push	r28
     5d2:	00 d0       	rcall	.+0      	; 0x5d4 <print_to_LCD+0x6>
     5d4:	cd b7       	in	r28, 0x3d	; 61
     5d6:	de b7       	in	r29, 0x3e	; 62
     5d8:	9a 83       	std	Y+2, r25	; 0x02
     5da:	89 83       	std	Y+1, r24	; 0x01
	while(*str != '\0')
     5dc:	0b c0       	rjmp	.+22     	; 0x5f4 <print_to_LCD+0x26>
	{
		write_to_LCD(*str);
     5de:	89 81       	ldd	r24, Y+1	; 0x01
     5e0:	9a 81       	ldd	r25, Y+2	; 0x02
     5e2:	fc 01       	movw	r30, r24
     5e4:	80 81       	ld	r24, Z
     5e6:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <write_to_LCD>
		str++;
     5ea:	89 81       	ldd	r24, Y+1	; 0x01
     5ec:	9a 81       	ldd	r25, Y+2	; 0x02
     5ee:	01 96       	adiw	r24, 0x01	; 1
     5f0:	9a 83       	std	Y+2, r25	; 0x02
     5f2:	89 83       	std	Y+1, r24	; 0x01
void write_to_LCD(char ch){
	SEND_TO_LCD(ch,DATA);
}

void print_to_LCD(char *str){
	while(*str != '\0')
     5f4:	89 81       	ldd	r24, Y+1	; 0x01
     5f6:	9a 81       	ldd	r25, Y+2	; 0x02
     5f8:	fc 01       	movw	r30, r24
     5fa:	80 81       	ld	r24, Z
     5fc:	88 23       	and	r24, r24
     5fe:	79 f7       	brne	.-34     	; 0x5de <print_to_LCD+0x10>
	{
		write_to_LCD(*str);
		str++;
	}
}
     600:	0f 90       	pop	r0
     602:	0f 90       	pop	r0
     604:	cf 91       	pop	r28
     606:	df 91       	pop	r29
     608:	08 95       	ret

0000060a <Read_from_keypad>:

char Read_from_keypad(){
     60a:	df 93       	push	r29
     60c:	cf 93       	push	r28
     60e:	cd b7       	in	r28, 0x3d	; 61
     610:	de b7       	in	r29, 0x3e	; 62
				write_to_port(255-(1<<i),Control);
				tmp=read_from_port(Key);
				for(int j=0;j<4;j++)if(tmp==(255-(1<<j)))  return keys[i-4][j];
			}
	}*/
}
     612:	cf 91       	pop	r28
     614:	df 91       	pop	r29
     616:	08 95       	ret

00000618 <Sign_to_Unsign>:

int Sign_to_Unsign(char *sign,int Num ,int x){
     618:	df 93       	push	r29
     61a:	cf 93       	push	r28
     61c:	00 d0       	rcall	.+0      	; 0x61e <Sign_to_Unsign+0x6>
     61e:	00 d0       	rcall	.+0      	; 0x620 <Sign_to_Unsign+0x8>
     620:	00 d0       	rcall	.+0      	; 0x622 <Sign_to_Unsign+0xa>
     622:	cd b7       	in	r28, 0x3d	; 61
     624:	de b7       	in	r29, 0x3e	; 62
     626:	9a 83       	std	Y+2, r25	; 0x02
     628:	89 83       	std	Y+1, r24	; 0x01
     62a:	7c 83       	std	Y+4, r23	; 0x04
     62c:	6b 83       	std	Y+3, r22	; 0x03
     62e:	5e 83       	std	Y+6, r21	; 0x06
     630:	4d 83       	std	Y+5, r20	; 0x05
		ret+=sign[Num]-'0';
		ret*=10;
		Num++;
	}
	return (ret/10)*mul;*/
}
     632:	26 96       	adiw	r28, 0x06	; 6
     634:	0f b6       	in	r0, 0x3f	; 63
     636:	f8 94       	cli
     638:	de bf       	out	0x3e, r29	; 62
     63a:	0f be       	out	0x3f, r0	; 63
     63c:	cd bf       	out	0x3d, r28	; 61
     63e:	cf 91       	pop	r28
     640:	df 91       	pop	r29
     642:	08 95       	ret

00000644 <res>:
 
int res(int firNum ,int SecNum,char op){
     644:	df 93       	push	r29
     646:	cf 93       	push	r28
     648:	00 d0       	rcall	.+0      	; 0x64a <res+0x6>
     64a:	00 d0       	rcall	.+0      	; 0x64c <res+0x8>
     64c:	0f 92       	push	r0
     64e:	cd b7       	in	r28, 0x3d	; 61
     650:	de b7       	in	r29, 0x3e	; 62
     652:	9a 83       	std	Y+2, r25	; 0x02
     654:	89 83       	std	Y+1, r24	; 0x01
     656:	7c 83       	std	Y+4, r23	; 0x04
     658:	6b 83       	std	Y+3, r22	; 0x03
     65a:	4d 83       	std	Y+5, r20	; 0x05
			if(SecNum=0)
			  write_to_LCD(Error);
			else
			  return firNum/SecNum;  
		} */			
}
     65c:	0f 90       	pop	r0
     65e:	0f 90       	pop	r0
     660:	0f 90       	pop	r0
     662:	0f 90       	pop	r0
     664:	0f 90       	pop	r0
     666:	cf 91       	pop	r28
     668:	df 91       	pop	r29
     66a:	08 95       	ret

0000066c <operate>:

void operate(){
     66c:	df 93       	push	r29
     66e:	cf 93       	push	r28
     670:	cd b7       	in	r28, 0x3d	; 61
     672:	de b7       	in	r29, 0x3e	; 62
				break;
			}
			if (arr[i]=='=') return ;
		}
	}*/
}
     674:	cf 91       	pop	r28
     676:	df 91       	pop	r29
     678:	08 95       	ret

0000067a <to_string>:

void to_string(int in){ 
     67a:	df 93       	push	r29
     67c:	cf 93       	push	r28
     67e:	00 d0       	rcall	.+0      	; 0x680 <to_string+0x6>
     680:	cd b7       	in	r28, 0x3d	; 61
     682:	de b7       	in	r29, 0x3e	; 62
     684:	9a 83       	std	Y+2, r25	; 0x02
     686:	89 83       	std	Y+1, r24	; 0x01
		tarr[ptr++]=(in%10)+'0';
		in/=10;
	}
	if (tmp<0) tarr[ptr++]='-';
	for (int i=0;i<ptr;i++) arr[i]=tarr[ptr-1-i];*/
}
     688:	0f 90       	pop	r0
     68a:	0f 90       	pop	r0
     68c:	cf 91       	pop	r28
     68e:	df 91       	pop	r29
     690:	08 95       	ret

00000692 <calculate>:

int calculate(){
     692:	df 93       	push	r29
     694:	cf 93       	push	r28
     696:	cd b7       	in	r28, 0x3d	; 61
     698:	de b7       	in	r29, 0x3e	; 62
		f=Sign_to_Unsign(arr,0,pos-1);
		s=Sign_to_Unsign(arr,pos+1,sz-2);
		return res(f,s,op);
	}
*/
}
     69a:	cf 91       	pop	r28
     69c:	df 91       	pop	r29
     69e:	08 95       	ret

000006a0 <main>:
	write_to_calc(lcd_ctrl_port,1);
	_delay_ms(1000);
}*/

int main(void)
{
     6a0:	0f 93       	push	r16
     6a2:	1f 93       	push	r17
     6a4:	df 93       	push	r29
     6a6:	cf 93       	push	r28
     6a8:	cd b7       	in	r28, 0x3d	; 61
     6aa:	de b7       	in	r29, 0x3e	; 62
     6ac:	2e 97       	sbiw	r28, 0x0e	; 14
     6ae:	0f b6       	in	r0, 0x3f	; 63
     6b0:	f8 94       	cli
     6b2:	de bf       	out	0x3e, r29	; 62
     6b4:	0f be       	out	0x3f, r0	; 63
     6b6:	cd bf       	out	0x3d, r28	; 61
	init_calc();
     6b8:	84 e2       	ldi	r24, 0x24	; 36
     6ba:	90 e0       	ldi	r25, 0x00	; 0
     6bc:	2f ef       	ldi	r18, 0xFF	; 255
     6be:	fc 01       	movw	r30, r24
     6c0:	20 83       	st	Z, r18
     6c2:	87 e2       	ldi	r24, 0x27	; 39
     6c4:	90 e0       	ldi	r25, 0x00	; 0
     6c6:	2f ef       	ldi	r18, 0xFF	; 255
     6c8:	fc 01       	movw	r30, r24
     6ca:	20 83       	st	Z, r18
     6cc:	88 e2       	ldi	r24, 0x28	; 40
     6ce:	90 e0       	ldi	r25, 0x00	; 0
     6d0:	2f ef       	ldi	r18, 0xFF	; 255
     6d2:	fc 01       	movw	r30, r24
     6d4:	20 83       	st	Z, r18
     6d6:	8a e2       	ldi	r24, 0x2A	; 42
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	2f ef       	ldi	r18, 0xFF	; 255
     6dc:	fc 01       	movw	r30, r24
     6de:	20 83       	st	Z, r18
     6e0:	85 e2       	ldi	r24, 0x25	; 37
     6e2:	90 e0       	ldi	r25, 0x00	; 0
     6e4:	23 e0       	ldi	r18, 0x03	; 3
     6e6:	fc 01       	movw	r30, r24
     6e8:	20 83       	st	Z, r18
     6ea:	8b e2       	ldi	r24, 0x2B	; 43
     6ec:	90 e0       	ldi	r25, 0x00	; 0
     6ee:	21 e8       	ldi	r18, 0x81	; 129
     6f0:	fc 01       	movw	r30, r24
     6f2:	20 83       	st	Z, r18
     6f4:	88 e2       	ldi	r24, 0x28	; 40
     6f6:	90 e0       	ldi	r25, 0x00	; 0
     6f8:	2d ef       	ldi	r18, 0xFD	; 253
     6fa:	fc 01       	movw	r30, r24
     6fc:	20 83       	st	Z, r18
     6fe:	80 e0       	ldi	r24, 0x00	; 0
     700:	90 e0       	ldi	r25, 0x00	; 0
     702:	a0 e8       	ldi	r26, 0x80	; 128
     704:	bf e3       	ldi	r27, 0x3F	; 63
     706:	89 83       	std	Y+1, r24	; 0x01
     708:	9a 83       	std	Y+2, r25	; 0x02
     70a:	ab 83       	std	Y+3, r26	; 0x03
     70c:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     70e:	69 81       	ldd	r22, Y+1	; 0x01
     710:	7a 81       	ldd	r23, Y+2	; 0x02
     712:	8b 81       	ldd	r24, Y+3	; 0x03
     714:	9c 81       	ldd	r25, Y+4	; 0x04
     716:	20 e0       	ldi	r18, 0x00	; 0
     718:	30 e0       	ldi	r19, 0x00	; 0
     71a:	4a e7       	ldi	r20, 0x7A	; 122
     71c:	55 e4       	ldi	r21, 0x45	; 69
     71e:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__mulsf3>
     722:	dc 01       	movw	r26, r24
     724:	cb 01       	movw	r24, r22
     726:	8d 83       	std	Y+5, r24	; 0x05
     728:	9e 83       	std	Y+6, r25	; 0x06
     72a:	af 83       	std	Y+7, r26	; 0x07
     72c:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     72e:	11 e0       	ldi	r17, 0x01	; 1
     730:	6d 81       	ldd	r22, Y+5	; 0x05
     732:	7e 81       	ldd	r23, Y+6	; 0x06
     734:	8f 81       	ldd	r24, Y+7	; 0x07
     736:	98 85       	ldd	r25, Y+8	; 0x08
     738:	20 e0       	ldi	r18, 0x00	; 0
     73a:	30 e0       	ldi	r19, 0x00	; 0
     73c:	40 e8       	ldi	r20, 0x80	; 128
     73e:	5f e3       	ldi	r21, 0x3F	; 63
     740:	0e 94 45 07 	call	0xe8a	; 0xe8a <__ltsf2>
     744:	88 23       	and	r24, r24
     746:	0c f0       	brlt	.+2      	; 0x74a <main+0xaa>
     748:	10 e0       	ldi	r17, 0x00	; 0
     74a:	11 23       	and	r17, r17
     74c:	29 f0       	breq	.+10     	; 0x758 <main+0xb8>
		__ticks = 1;
     74e:	81 e0       	ldi	r24, 0x01	; 1
     750:	90 e0       	ldi	r25, 0x00	; 0
     752:	9a 87       	std	Y+10, r25	; 0x0a
     754:	89 87       	std	Y+9, r24	; 0x09
     756:	46 c0       	rjmp	.+140    	; 0x7e4 <main+0x144>
	else if (__tmp > 65535)
     758:	11 e0       	ldi	r17, 0x01	; 1
     75a:	6d 81       	ldd	r22, Y+5	; 0x05
     75c:	7e 81       	ldd	r23, Y+6	; 0x06
     75e:	8f 81       	ldd	r24, Y+7	; 0x07
     760:	98 85       	ldd	r25, Y+8	; 0x08
     762:	20 e0       	ldi	r18, 0x00	; 0
     764:	3f ef       	ldi	r19, 0xFF	; 255
     766:	4f e7       	ldi	r20, 0x7F	; 127
     768:	57 e4       	ldi	r21, 0x47	; 71
     76a:	0e 94 e5 06 	call	0xdca	; 0xdca <__gtsf2>
     76e:	18 16       	cp	r1, r24
     770:	0c f0       	brlt	.+2      	; 0x774 <main+0xd4>
     772:	10 e0       	ldi	r17, 0x00	; 0
     774:	11 23       	and	r17, r17
     776:	61 f1       	breq	.+88     	; 0x7d0 <main+0x130>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     778:	69 81       	ldd	r22, Y+1	; 0x01
     77a:	7a 81       	ldd	r23, Y+2	; 0x02
     77c:	8b 81       	ldd	r24, Y+3	; 0x03
     77e:	9c 81       	ldd	r25, Y+4	; 0x04
     780:	20 e0       	ldi	r18, 0x00	; 0
     782:	30 e0       	ldi	r19, 0x00	; 0
     784:	40 e2       	ldi	r20, 0x20	; 32
     786:	51 e4       	ldi	r21, 0x41	; 65
     788:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__mulsf3>
     78c:	dc 01       	movw	r26, r24
     78e:	cb 01       	movw	r24, r22
     790:	bc 01       	movw	r22, r24
     792:	cd 01       	movw	r24, r26
     794:	0e 94 17 04 	call	0x82e	; 0x82e <__fixunssfsi>
     798:	dc 01       	movw	r26, r24
     79a:	cb 01       	movw	r24, r22
     79c:	9a 87       	std	Y+10, r25	; 0x0a
     79e:	89 87       	std	Y+9, r24	; 0x09
     7a0:	12 c0       	rjmp	.+36     	; 0x7c6 <main+0x126>
     7a2:	80 e9       	ldi	r24, 0x90	; 144
     7a4:	91 e0       	ldi	r25, 0x01	; 1
     7a6:	9c 87       	std	Y+12, r25	; 0x0c
     7a8:	8b 87       	std	Y+11, r24	; 0x0b
     7aa:	8b 85       	ldd	r24, Y+11	; 0x0b
     7ac:	9c 85       	ldd	r25, Y+12	; 0x0c
     7ae:	8c 01       	movw	r16, r24
     7b0:	c8 01       	movw	r24, r16
     7b2:	01 97       	sbiw	r24, 0x01	; 1
     7b4:	f1 f7       	brne	.-4      	; 0x7b2 <main+0x112>
     7b6:	8c 01       	movw	r16, r24
     7b8:	1c 87       	std	Y+12, r17	; 0x0c
     7ba:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     7bc:	89 85       	ldd	r24, Y+9	; 0x09
     7be:	9a 85       	ldd	r25, Y+10	; 0x0a
     7c0:	01 97       	sbiw	r24, 0x01	; 1
     7c2:	9a 87       	std	Y+10, r25	; 0x0a
     7c4:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     7c6:	89 85       	ldd	r24, Y+9	; 0x09
     7c8:	9a 85       	ldd	r25, Y+10	; 0x0a
     7ca:	00 97       	sbiw	r24, 0x00	; 0
     7cc:	51 f7       	brne	.-44     	; 0x7a2 <main+0x102>
     7ce:	17 c0       	rjmp	.+46     	; 0x7fe <main+0x15e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7d0:	6d 81       	ldd	r22, Y+5	; 0x05
     7d2:	7e 81       	ldd	r23, Y+6	; 0x06
     7d4:	8f 81       	ldd	r24, Y+7	; 0x07
     7d6:	98 85       	ldd	r25, Y+8	; 0x08
     7d8:	0e 94 17 04 	call	0x82e	; 0x82e <__fixunssfsi>
     7dc:	dc 01       	movw	r26, r24
     7de:	cb 01       	movw	r24, r22
     7e0:	9a 87       	std	Y+10, r25	; 0x0a
     7e2:	89 87       	std	Y+9, r24	; 0x09
     7e4:	89 85       	ldd	r24, Y+9	; 0x09
     7e6:	9a 85       	ldd	r25, Y+10	; 0x0a
     7e8:	9e 87       	std	Y+14, r25	; 0x0e
     7ea:	8d 87       	std	Y+13, r24	; 0x0d
     7ec:	8d 85       	ldd	r24, Y+13	; 0x0d
     7ee:	9e 85       	ldd	r25, Y+14	; 0x0e
     7f0:	8c 01       	movw	r16, r24
     7f2:	f8 01       	movw	r30, r16
     7f4:	31 97       	sbiw	r30, 0x01	; 1
     7f6:	f1 f7       	brne	.-4      	; 0x7f4 <main+0x154>
     7f8:	8f 01       	movw	r16, r30
     7fa:	1e 87       	std	Y+14, r17	; 0x0e
     7fc:	0d 87       	std	Y+13, r16	; 0x0d
     7fe:	88 e2       	ldi	r24, 0x28	; 40
     800:	90 e0       	ldi	r25, 0x00	; 0
     802:	2f ef       	ldi	r18, 0xFF	; 255
     804:	fc 01       	movw	r30, r24
     806:	20 83       	st	Z, r18
	INIT_LCD();
     808:	0e 94 c6 02 	call	0x58c	; 0x58c <INIT_LCD>
	print_to_LCD("hello");
     80c:	80 e1       	ldi	r24, 0x10	; 16
     80e:	91 e0       	ldi	r25, 0x01	; 1
     810:	0e 94 e7 02 	call	0x5ce	; 0x5ce <print_to_LCD>
	return 0;
     814:	80 e0       	ldi	r24, 0x00	; 0
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	2e 96       	adiw	r28, 0x0e	; 14
     81a:	0f b6       	in	r0, 0x3f	; 63
     81c:	f8 94       	cli
     81e:	de bf       	out	0x3e, r29	; 62
     820:	0f be       	out	0x3f, r0	; 63
     822:	cd bf       	out	0x3d, r28	; 61
     824:	cf 91       	pop	r28
     826:	df 91       	pop	r29
     828:	1f 91       	pop	r17
     82a:	0f 91       	pop	r16
     82c:	08 95       	ret

0000082e <__fixunssfsi>:
     82e:	ef 92       	push	r14
     830:	ff 92       	push	r15
     832:	0f 93       	push	r16
     834:	1f 93       	push	r17
     836:	7b 01       	movw	r14, r22
     838:	8c 01       	movw	r16, r24
     83a:	20 e0       	ldi	r18, 0x00	; 0
     83c:	30 e0       	ldi	r19, 0x00	; 0
     83e:	40 e0       	ldi	r20, 0x00	; 0
     840:	5f e4       	ldi	r21, 0x4F	; 79
     842:	0e 94 15 07 	call	0xe2a	; 0xe2a <__gesf2>
     846:	87 fd       	sbrc	r24, 7
     848:	11 c0       	rjmp	.+34     	; 0x86c <__fixunssfsi+0x3e>
     84a:	c8 01       	movw	r24, r16
     84c:	b7 01       	movw	r22, r14
     84e:	20 e0       	ldi	r18, 0x00	; 0
     850:	30 e0       	ldi	r19, 0x00	; 0
     852:	40 e0       	ldi	r20, 0x00	; 0
     854:	5f e4       	ldi	r21, 0x4F	; 79
     856:	0e 94 ba 05 	call	0xb74	; 0xb74 <__subsf3>
     85a:	0e 94 75 07 	call	0xeea	; 0xeea <__fixsfsi>
     85e:	9b 01       	movw	r18, r22
     860:	ac 01       	movw	r20, r24
     862:	20 50       	subi	r18, 0x00	; 0
     864:	30 40       	sbci	r19, 0x00	; 0
     866:	40 40       	sbci	r20, 0x00	; 0
     868:	50 48       	sbci	r21, 0x80	; 128
     86a:	06 c0       	rjmp	.+12     	; 0x878 <__fixunssfsi+0x4a>
     86c:	c8 01       	movw	r24, r16
     86e:	b7 01       	movw	r22, r14
     870:	0e 94 75 07 	call	0xeea	; 0xeea <__fixsfsi>
     874:	9b 01       	movw	r18, r22
     876:	ac 01       	movw	r20, r24
     878:	b9 01       	movw	r22, r18
     87a:	ca 01       	movw	r24, r20
     87c:	1f 91       	pop	r17
     87e:	0f 91       	pop	r16
     880:	ff 90       	pop	r15
     882:	ef 90       	pop	r14
     884:	08 95       	ret

00000886 <_fpadd_parts>:
     886:	a0 e0       	ldi	r26, 0x00	; 0
     888:	b0 e0       	ldi	r27, 0x00	; 0
     88a:	e9 e4       	ldi	r30, 0x49	; 73
     88c:	f4 e0       	ldi	r31, 0x04	; 4
     88e:	0c 94 5b 09 	jmp	0x12b6	; 0x12b6 <__prologue_saves__+0x8>
     892:	fc 01       	movw	r30, r24
     894:	ea 01       	movw	r28, r20
     896:	80 81       	ld	r24, Z
     898:	82 30       	cpi	r24, 0x02	; 2
     89a:	08 f4       	brcc	.+2      	; 0x89e <_fpadd_parts+0x18>
     89c:	38 c1       	rjmp	.+624    	; 0xb0e <__stack+0x20f>
     89e:	db 01       	movw	r26, r22
     8a0:	9c 91       	ld	r25, X
     8a2:	92 30       	cpi	r25, 0x02	; 2
     8a4:	08 f4       	brcc	.+2      	; 0x8a8 <_fpadd_parts+0x22>
     8a6:	30 c1       	rjmp	.+608    	; 0xb08 <__stack+0x209>
     8a8:	84 30       	cpi	r24, 0x04	; 4
     8aa:	59 f4       	brne	.+22     	; 0x8c2 <_fpadd_parts+0x3c>
     8ac:	94 30       	cpi	r25, 0x04	; 4
     8ae:	09 f0       	breq	.+2      	; 0x8b2 <_fpadd_parts+0x2c>
     8b0:	2e c1       	rjmp	.+604    	; 0xb0e <__stack+0x20f>
     8b2:	91 81       	ldd	r25, Z+1	; 0x01
     8b4:	11 96       	adiw	r26, 0x01	; 1
     8b6:	8c 91       	ld	r24, X
     8b8:	11 97       	sbiw	r26, 0x01	; 1
     8ba:	98 17       	cp	r25, r24
     8bc:	09 f0       	breq	.+2      	; 0x8c0 <_fpadd_parts+0x3a>
     8be:	21 c1       	rjmp	.+578    	; 0xb02 <__stack+0x203>
     8c0:	26 c1       	rjmp	.+588    	; 0xb0e <__stack+0x20f>
     8c2:	94 30       	cpi	r25, 0x04	; 4
     8c4:	09 f4       	brne	.+2      	; 0x8c8 <_fpadd_parts+0x42>
     8c6:	20 c1       	rjmp	.+576    	; 0xb08 <__stack+0x209>
     8c8:	92 30       	cpi	r25, 0x02	; 2
     8ca:	b1 f4       	brne	.+44     	; 0x8f8 <_fpadd_parts+0x72>
     8cc:	82 30       	cpi	r24, 0x02	; 2
     8ce:	09 f0       	breq	.+2      	; 0x8d2 <_fpadd_parts+0x4c>
     8d0:	1e c1       	rjmp	.+572    	; 0xb0e <__stack+0x20f>
     8d2:	ca 01       	movw	r24, r20
     8d4:	af 01       	movw	r20, r30
     8d6:	28 e0       	ldi	r18, 0x08	; 8
     8d8:	da 01       	movw	r26, r20
     8da:	0d 90       	ld	r0, X+
     8dc:	ad 01       	movw	r20, r26
     8de:	dc 01       	movw	r26, r24
     8e0:	0d 92       	st	X+, r0
     8e2:	cd 01       	movw	r24, r26
     8e4:	21 50       	subi	r18, 0x01	; 1
     8e6:	c1 f7       	brne	.-16     	; 0x8d8 <_fpadd_parts+0x52>
     8e8:	db 01       	movw	r26, r22
     8ea:	11 96       	adiw	r26, 0x01	; 1
     8ec:	8c 91       	ld	r24, X
     8ee:	11 97       	sbiw	r26, 0x01	; 1
     8f0:	91 81       	ldd	r25, Z+1	; 0x01
     8f2:	89 23       	and	r24, r25
     8f4:	89 83       	std	Y+1, r24	; 0x01
     8f6:	0a c1       	rjmp	.+532    	; 0xb0c <__stack+0x20d>
     8f8:	82 30       	cpi	r24, 0x02	; 2
     8fa:	09 f4       	brne	.+2      	; 0x8fe <_fpadd_parts+0x78>
     8fc:	05 c1       	rjmp	.+522    	; 0xb08 <__stack+0x209>
     8fe:	c2 80       	ldd	r12, Z+2	; 0x02
     900:	d3 80       	ldd	r13, Z+3	; 0x03
     902:	db 01       	movw	r26, r22
     904:	12 96       	adiw	r26, 0x02	; 2
     906:	6d 90       	ld	r6, X+
     908:	7c 90       	ld	r7, X
     90a:	13 97       	sbiw	r26, 0x03	; 3
     90c:	24 81       	ldd	r18, Z+4	; 0x04
     90e:	35 81       	ldd	r19, Z+5	; 0x05
     910:	46 81       	ldd	r20, Z+6	; 0x06
     912:	57 81       	ldd	r21, Z+7	; 0x07
     914:	14 96       	adiw	r26, 0x04	; 4
     916:	ed 90       	ld	r14, X+
     918:	fd 90       	ld	r15, X+
     91a:	0d 91       	ld	r16, X+
     91c:	1c 91       	ld	r17, X
     91e:	17 97       	sbiw	r26, 0x07	; 7
     920:	c6 01       	movw	r24, r12
     922:	86 19       	sub	r24, r6
     924:	97 09       	sbc	r25, r7
     926:	5c 01       	movw	r10, r24
     928:	97 ff       	sbrs	r25, 7
     92a:	04 c0       	rjmp	.+8      	; 0x934 <__stack+0x35>
     92c:	aa 24       	eor	r10, r10
     92e:	bb 24       	eor	r11, r11
     930:	a8 1a       	sub	r10, r24
     932:	b9 0a       	sbc	r11, r25
     934:	b0 e2       	ldi	r27, 0x20	; 32
     936:	ab 16       	cp	r10, r27
     938:	b1 04       	cpc	r11, r1
     93a:	0c f0       	brlt	.+2      	; 0x93e <__stack+0x3f>
     93c:	61 c0       	rjmp	.+194    	; 0xa00 <__stack+0x101>
     93e:	18 16       	cp	r1, r24
     940:	19 06       	cpc	r1, r25
     942:	6c f5       	brge	.+90     	; 0x99e <__stack+0x9f>
     944:	37 01       	movw	r6, r14
     946:	48 01       	movw	r8, r16
     948:	0a 2c       	mov	r0, r10
     94a:	04 c0       	rjmp	.+8      	; 0x954 <__stack+0x55>
     94c:	96 94       	lsr	r9
     94e:	87 94       	ror	r8
     950:	77 94       	ror	r7
     952:	67 94       	ror	r6
     954:	0a 94       	dec	r0
     956:	d2 f7       	brpl	.-12     	; 0x94c <__stack+0x4d>
     958:	81 e0       	ldi	r24, 0x01	; 1
     95a:	90 e0       	ldi	r25, 0x00	; 0
     95c:	a0 e0       	ldi	r26, 0x00	; 0
     95e:	b0 e0       	ldi	r27, 0x00	; 0
     960:	0a 2c       	mov	r0, r10
     962:	04 c0       	rjmp	.+8      	; 0x96c <__stack+0x6d>
     964:	88 0f       	add	r24, r24
     966:	99 1f       	adc	r25, r25
     968:	aa 1f       	adc	r26, r26
     96a:	bb 1f       	adc	r27, r27
     96c:	0a 94       	dec	r0
     96e:	d2 f7       	brpl	.-12     	; 0x964 <__stack+0x65>
     970:	01 97       	sbiw	r24, 0x01	; 1
     972:	a1 09       	sbc	r26, r1
     974:	b1 09       	sbc	r27, r1
     976:	8e 21       	and	r24, r14
     978:	9f 21       	and	r25, r15
     97a:	a0 23       	and	r26, r16
     97c:	b1 23       	and	r27, r17
     97e:	ee 24       	eor	r14, r14
     980:	ff 24       	eor	r15, r15
     982:	87 01       	movw	r16, r14
     984:	e3 94       	inc	r14
     986:	00 97       	sbiw	r24, 0x00	; 0
     988:	a1 05       	cpc	r26, r1
     98a:	b1 05       	cpc	r27, r1
     98c:	19 f4       	brne	.+6      	; 0x994 <__stack+0x95>
     98e:	ee 24       	eor	r14, r14
     990:	ff 24       	eor	r15, r15
     992:	87 01       	movw	r16, r14
     994:	e6 28       	or	r14, r6
     996:	f7 28       	or	r15, r7
     998:	08 29       	or	r16, r8
     99a:	19 29       	or	r17, r9
     99c:	3c c0       	rjmp	.+120    	; 0xa16 <__stack+0x117>
     99e:	00 97       	sbiw	r24, 0x00	; 0
     9a0:	d1 f1       	breq	.+116    	; 0xa16 <__stack+0x117>
     9a2:	ca 0c       	add	r12, r10
     9a4:	db 1c       	adc	r13, r11
     9a6:	39 01       	movw	r6, r18
     9a8:	4a 01       	movw	r8, r20
     9aa:	0a 2c       	mov	r0, r10
     9ac:	04 c0       	rjmp	.+8      	; 0x9b6 <__stack+0xb7>
     9ae:	96 94       	lsr	r9
     9b0:	87 94       	ror	r8
     9b2:	77 94       	ror	r7
     9b4:	67 94       	ror	r6
     9b6:	0a 94       	dec	r0
     9b8:	d2 f7       	brpl	.-12     	; 0x9ae <__stack+0xaf>
     9ba:	81 e0       	ldi	r24, 0x01	; 1
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	a0 e0       	ldi	r26, 0x00	; 0
     9c0:	b0 e0       	ldi	r27, 0x00	; 0
     9c2:	0a 2c       	mov	r0, r10
     9c4:	04 c0       	rjmp	.+8      	; 0x9ce <__stack+0xcf>
     9c6:	88 0f       	add	r24, r24
     9c8:	99 1f       	adc	r25, r25
     9ca:	aa 1f       	adc	r26, r26
     9cc:	bb 1f       	adc	r27, r27
     9ce:	0a 94       	dec	r0
     9d0:	d2 f7       	brpl	.-12     	; 0x9c6 <__stack+0xc7>
     9d2:	01 97       	sbiw	r24, 0x01	; 1
     9d4:	a1 09       	sbc	r26, r1
     9d6:	b1 09       	sbc	r27, r1
     9d8:	82 23       	and	r24, r18
     9da:	93 23       	and	r25, r19
     9dc:	a4 23       	and	r26, r20
     9de:	b5 23       	and	r27, r21
     9e0:	21 e0       	ldi	r18, 0x01	; 1
     9e2:	30 e0       	ldi	r19, 0x00	; 0
     9e4:	40 e0       	ldi	r20, 0x00	; 0
     9e6:	50 e0       	ldi	r21, 0x00	; 0
     9e8:	00 97       	sbiw	r24, 0x00	; 0
     9ea:	a1 05       	cpc	r26, r1
     9ec:	b1 05       	cpc	r27, r1
     9ee:	19 f4       	brne	.+6      	; 0x9f6 <__stack+0xf7>
     9f0:	20 e0       	ldi	r18, 0x00	; 0
     9f2:	30 e0       	ldi	r19, 0x00	; 0
     9f4:	a9 01       	movw	r20, r18
     9f6:	26 29       	or	r18, r6
     9f8:	37 29       	or	r19, r7
     9fa:	48 29       	or	r20, r8
     9fc:	59 29       	or	r21, r9
     9fe:	0b c0       	rjmp	.+22     	; 0xa16 <__stack+0x117>
     a00:	6c 14       	cp	r6, r12
     a02:	7d 04       	cpc	r7, r13
     a04:	24 f4       	brge	.+8      	; 0xa0e <__stack+0x10f>
     a06:	ee 24       	eor	r14, r14
     a08:	ff 24       	eor	r15, r15
     a0a:	87 01       	movw	r16, r14
     a0c:	04 c0       	rjmp	.+8      	; 0xa16 <__stack+0x117>
     a0e:	63 01       	movw	r12, r6
     a10:	20 e0       	ldi	r18, 0x00	; 0
     a12:	30 e0       	ldi	r19, 0x00	; 0
     a14:	a9 01       	movw	r20, r18
     a16:	81 81       	ldd	r24, Z+1	; 0x01
     a18:	fb 01       	movw	r30, r22
     a1a:	91 81       	ldd	r25, Z+1	; 0x01
     a1c:	89 17       	cp	r24, r25
     a1e:	09 f4       	brne	.+2      	; 0xa22 <__stack+0x123>
     a20:	45 c0       	rjmp	.+138    	; 0xaac <__stack+0x1ad>
     a22:	88 23       	and	r24, r24
     a24:	49 f0       	breq	.+18     	; 0xa38 <__stack+0x139>
     a26:	d8 01       	movw	r26, r16
     a28:	c7 01       	movw	r24, r14
     a2a:	82 1b       	sub	r24, r18
     a2c:	93 0b       	sbc	r25, r19
     a2e:	a4 0b       	sbc	r26, r20
     a30:	b5 0b       	sbc	r27, r21
     a32:	9c 01       	movw	r18, r24
     a34:	ad 01       	movw	r20, r26
     a36:	04 c0       	rjmp	.+8      	; 0xa40 <__stack+0x141>
     a38:	2e 19       	sub	r18, r14
     a3a:	3f 09       	sbc	r19, r15
     a3c:	40 0b       	sbc	r20, r16
     a3e:	51 0b       	sbc	r21, r17
     a40:	57 fd       	sbrc	r21, 7
     a42:	04 c0       	rjmp	.+8      	; 0xa4c <__stack+0x14d>
     a44:	19 82       	std	Y+1, r1	; 0x01
     a46:	db 82       	std	Y+3, r13	; 0x03
     a48:	ca 82       	std	Y+2, r12	; 0x02
     a4a:	0b c0       	rjmp	.+22     	; 0xa62 <__stack+0x163>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	89 83       	std	Y+1, r24	; 0x01
     a50:	db 82       	std	Y+3, r13	; 0x03
     a52:	ca 82       	std	Y+2, r12	; 0x02
     a54:	50 95       	com	r21
     a56:	40 95       	com	r20
     a58:	30 95       	com	r19
     a5a:	21 95       	neg	r18
     a5c:	3f 4f       	sbci	r19, 0xFF	; 255
     a5e:	4f 4f       	sbci	r20, 0xFF	; 255
     a60:	5f 4f       	sbci	r21, 0xFF	; 255
     a62:	2c 83       	std	Y+4, r18	; 0x04
     a64:	3d 83       	std	Y+5, r19	; 0x05
     a66:	4e 83       	std	Y+6, r20	; 0x06
     a68:	5f 83       	std	Y+7, r21	; 0x07
     a6a:	0d c0       	rjmp	.+26     	; 0xa86 <__stack+0x187>
     a6c:	88 0f       	add	r24, r24
     a6e:	99 1f       	adc	r25, r25
     a70:	aa 1f       	adc	r26, r26
     a72:	bb 1f       	adc	r27, r27
     a74:	8c 83       	std	Y+4, r24	; 0x04
     a76:	9d 83       	std	Y+5, r25	; 0x05
     a78:	ae 83       	std	Y+6, r26	; 0x06
     a7a:	bf 83       	std	Y+7, r27	; 0x07
     a7c:	8a 81       	ldd	r24, Y+2	; 0x02
     a7e:	9b 81       	ldd	r25, Y+3	; 0x03
     a80:	01 97       	sbiw	r24, 0x01	; 1
     a82:	9b 83       	std	Y+3, r25	; 0x03
     a84:	8a 83       	std	Y+2, r24	; 0x02
     a86:	8c 81       	ldd	r24, Y+4	; 0x04
     a88:	9d 81       	ldd	r25, Y+5	; 0x05
     a8a:	ae 81       	ldd	r26, Y+6	; 0x06
     a8c:	bf 81       	ldd	r27, Y+7	; 0x07
     a8e:	9c 01       	movw	r18, r24
     a90:	ad 01       	movw	r20, r26
     a92:	21 50       	subi	r18, 0x01	; 1
     a94:	30 40       	sbci	r19, 0x00	; 0
     a96:	40 40       	sbci	r20, 0x00	; 0
     a98:	50 40       	sbci	r21, 0x00	; 0
     a9a:	2f 3f       	cpi	r18, 0xFF	; 255
     a9c:	ef ef       	ldi	r30, 0xFF	; 255
     a9e:	3e 07       	cpc	r19, r30
     aa0:	ef ef       	ldi	r30, 0xFF	; 255
     aa2:	4e 07       	cpc	r20, r30
     aa4:	ef e3       	ldi	r30, 0x3F	; 63
     aa6:	5e 07       	cpc	r21, r30
     aa8:	08 f3       	brcs	.-62     	; 0xa6c <__stack+0x16d>
     aaa:	0b c0       	rjmp	.+22     	; 0xac2 <__stack+0x1c3>
     aac:	89 83       	std	Y+1, r24	; 0x01
     aae:	db 82       	std	Y+3, r13	; 0x03
     ab0:	ca 82       	std	Y+2, r12	; 0x02
     ab2:	2e 0d       	add	r18, r14
     ab4:	3f 1d       	adc	r19, r15
     ab6:	40 1f       	adc	r20, r16
     ab8:	51 1f       	adc	r21, r17
     aba:	2c 83       	std	Y+4, r18	; 0x04
     abc:	3d 83       	std	Y+5, r19	; 0x05
     abe:	4e 83       	std	Y+6, r20	; 0x06
     ac0:	5f 83       	std	Y+7, r21	; 0x07
     ac2:	83 e0       	ldi	r24, 0x03	; 3
     ac4:	88 83       	st	Y, r24
     ac6:	2c 81       	ldd	r18, Y+4	; 0x04
     ac8:	3d 81       	ldd	r19, Y+5	; 0x05
     aca:	4e 81       	ldd	r20, Y+6	; 0x06
     acc:	5f 81       	ldd	r21, Y+7	; 0x07
     ace:	57 ff       	sbrs	r21, 7
     ad0:	1d c0       	rjmp	.+58     	; 0xb0c <__stack+0x20d>
     ad2:	da 01       	movw	r26, r20
     ad4:	c9 01       	movw	r24, r18
     ad6:	81 70       	andi	r24, 0x01	; 1
     ad8:	90 70       	andi	r25, 0x00	; 0
     ada:	a0 70       	andi	r26, 0x00	; 0
     adc:	b0 70       	andi	r27, 0x00	; 0
     ade:	56 95       	lsr	r21
     ae0:	47 95       	ror	r20
     ae2:	37 95       	ror	r19
     ae4:	27 95       	ror	r18
     ae6:	82 2b       	or	r24, r18
     ae8:	93 2b       	or	r25, r19
     aea:	a4 2b       	or	r26, r20
     aec:	b5 2b       	or	r27, r21
     aee:	8c 83       	std	Y+4, r24	; 0x04
     af0:	9d 83       	std	Y+5, r25	; 0x05
     af2:	ae 83       	std	Y+6, r26	; 0x06
     af4:	bf 83       	std	Y+7, r27	; 0x07
     af6:	8a 81       	ldd	r24, Y+2	; 0x02
     af8:	9b 81       	ldd	r25, Y+3	; 0x03
     afa:	01 96       	adiw	r24, 0x01	; 1
     afc:	9b 83       	std	Y+3, r25	; 0x03
     afe:	8a 83       	std	Y+2, r24	; 0x02
     b00:	05 c0       	rjmp	.+10     	; 0xb0c <__stack+0x20d>
     b02:	e6 e1       	ldi	r30, 0x16	; 22
     b04:	f1 e0       	ldi	r31, 0x01	; 1
     b06:	03 c0       	rjmp	.+6      	; 0xb0e <__stack+0x20f>
     b08:	fb 01       	movw	r30, r22
     b0a:	01 c0       	rjmp	.+2      	; 0xb0e <__stack+0x20f>
     b0c:	fe 01       	movw	r30, r28
     b0e:	cf 01       	movw	r24, r30
     b10:	cd b7       	in	r28, 0x3d	; 61
     b12:	de b7       	in	r29, 0x3e	; 62
     b14:	ee e0       	ldi	r30, 0x0E	; 14
     b16:	0c 94 77 09 	jmp	0x12ee	; 0x12ee <__epilogue_restores__+0x8>

00000b1a <__addsf3>:
     b1a:	a0 e2       	ldi	r26, 0x20	; 32
     b1c:	b0 e0       	ldi	r27, 0x00	; 0
     b1e:	e3 e9       	ldi	r30, 0x93	; 147
     b20:	f5 e0       	ldi	r31, 0x05	; 5
     b22:	0c 94 63 09 	jmp	0x12c6	; 0x12c6 <__prologue_saves__+0x18>
     b26:	69 83       	std	Y+1, r22	; 0x01
     b28:	7a 83       	std	Y+2, r23	; 0x02
     b2a:	8b 83       	std	Y+3, r24	; 0x03
     b2c:	9c 83       	std	Y+4, r25	; 0x04
     b2e:	2d 83       	std	Y+5, r18	; 0x05
     b30:	3e 83       	std	Y+6, r19	; 0x06
     b32:	4f 83       	std	Y+7, r20	; 0x07
     b34:	58 87       	std	Y+8, r21	; 0x08
     b36:	89 e0       	ldi	r24, 0x09	; 9
     b38:	e8 2e       	mov	r14, r24
     b3a:	f1 2c       	mov	r15, r1
     b3c:	ec 0e       	add	r14, r28
     b3e:	fd 1e       	adc	r15, r29
     b40:	ce 01       	movw	r24, r28
     b42:	01 96       	adiw	r24, 0x01	; 1
     b44:	b7 01       	movw	r22, r14
     b46:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     b4a:	8e 01       	movw	r16, r28
     b4c:	0f 5e       	subi	r16, 0xEF	; 239
     b4e:	1f 4f       	sbci	r17, 0xFF	; 255
     b50:	ce 01       	movw	r24, r28
     b52:	05 96       	adiw	r24, 0x05	; 5
     b54:	b8 01       	movw	r22, r16
     b56:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     b5a:	c7 01       	movw	r24, r14
     b5c:	b8 01       	movw	r22, r16
     b5e:	ae 01       	movw	r20, r28
     b60:	47 5e       	subi	r20, 0xE7	; 231
     b62:	5f 4f       	sbci	r21, 0xFF	; 255
     b64:	0e 94 43 04 	call	0x886	; 0x886 <_fpadd_parts>
     b68:	0e 94 c7 07 	call	0xf8e	; 0xf8e <__pack_f>
     b6c:	a0 96       	adiw	r28, 0x20	; 32
     b6e:	e6 e0       	ldi	r30, 0x06	; 6
     b70:	0c 94 7f 09 	jmp	0x12fe	; 0x12fe <__epilogue_restores__+0x18>

00000b74 <__subsf3>:
     b74:	a0 e2       	ldi	r26, 0x20	; 32
     b76:	b0 e0       	ldi	r27, 0x00	; 0
     b78:	e0 ec       	ldi	r30, 0xC0	; 192
     b7a:	f5 e0       	ldi	r31, 0x05	; 5
     b7c:	0c 94 63 09 	jmp	0x12c6	; 0x12c6 <__prologue_saves__+0x18>
     b80:	69 83       	std	Y+1, r22	; 0x01
     b82:	7a 83       	std	Y+2, r23	; 0x02
     b84:	8b 83       	std	Y+3, r24	; 0x03
     b86:	9c 83       	std	Y+4, r25	; 0x04
     b88:	2d 83       	std	Y+5, r18	; 0x05
     b8a:	3e 83       	std	Y+6, r19	; 0x06
     b8c:	4f 83       	std	Y+7, r20	; 0x07
     b8e:	58 87       	std	Y+8, r21	; 0x08
     b90:	8e 01       	movw	r16, r28
     b92:	07 5f       	subi	r16, 0xF7	; 247
     b94:	1f 4f       	sbci	r17, 0xFF	; 255
     b96:	ce 01       	movw	r24, r28
     b98:	01 96       	adiw	r24, 0x01	; 1
     b9a:	b8 01       	movw	r22, r16
     b9c:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     ba0:	91 e1       	ldi	r25, 0x11	; 17
     ba2:	e9 2e       	mov	r14, r25
     ba4:	f1 2c       	mov	r15, r1
     ba6:	ec 0e       	add	r14, r28
     ba8:	fd 1e       	adc	r15, r29
     baa:	ce 01       	movw	r24, r28
     bac:	05 96       	adiw	r24, 0x05	; 5
     bae:	b7 01       	movw	r22, r14
     bb0:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     bb4:	8a 89       	ldd	r24, Y+18	; 0x12
     bb6:	91 e0       	ldi	r25, 0x01	; 1
     bb8:	89 27       	eor	r24, r25
     bba:	8a 8b       	std	Y+18, r24	; 0x12
     bbc:	c8 01       	movw	r24, r16
     bbe:	b7 01       	movw	r22, r14
     bc0:	ae 01       	movw	r20, r28
     bc2:	47 5e       	subi	r20, 0xE7	; 231
     bc4:	5f 4f       	sbci	r21, 0xFF	; 255
     bc6:	0e 94 43 04 	call	0x886	; 0x886 <_fpadd_parts>
     bca:	0e 94 c7 07 	call	0xf8e	; 0xf8e <__pack_f>
     bce:	a0 96       	adiw	r28, 0x20	; 32
     bd0:	e6 e0       	ldi	r30, 0x06	; 6
     bd2:	0c 94 7f 09 	jmp	0x12fe	; 0x12fe <__epilogue_restores__+0x18>

00000bd6 <__mulsf3>:
     bd6:	a0 e2       	ldi	r26, 0x20	; 32
     bd8:	b0 e0       	ldi	r27, 0x00	; 0
     bda:	e1 ef       	ldi	r30, 0xF1	; 241
     bdc:	f5 e0       	ldi	r31, 0x05	; 5
     bde:	0c 94 57 09 	jmp	0x12ae	; 0x12ae <__prologue_saves__>
     be2:	69 83       	std	Y+1, r22	; 0x01
     be4:	7a 83       	std	Y+2, r23	; 0x02
     be6:	8b 83       	std	Y+3, r24	; 0x03
     be8:	9c 83       	std	Y+4, r25	; 0x04
     bea:	2d 83       	std	Y+5, r18	; 0x05
     bec:	3e 83       	std	Y+6, r19	; 0x06
     bee:	4f 83       	std	Y+7, r20	; 0x07
     bf0:	58 87       	std	Y+8, r21	; 0x08
     bf2:	ce 01       	movw	r24, r28
     bf4:	01 96       	adiw	r24, 0x01	; 1
     bf6:	be 01       	movw	r22, r28
     bf8:	67 5f       	subi	r22, 0xF7	; 247
     bfa:	7f 4f       	sbci	r23, 0xFF	; 255
     bfc:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     c00:	ce 01       	movw	r24, r28
     c02:	05 96       	adiw	r24, 0x05	; 5
     c04:	be 01       	movw	r22, r28
     c06:	6f 5e       	subi	r22, 0xEF	; 239
     c08:	7f 4f       	sbci	r23, 0xFF	; 255
     c0a:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     c0e:	99 85       	ldd	r25, Y+9	; 0x09
     c10:	92 30       	cpi	r25, 0x02	; 2
     c12:	78 f0       	brcs	.+30     	; 0xc32 <__mulsf3+0x5c>
     c14:	89 89       	ldd	r24, Y+17	; 0x11
     c16:	82 30       	cpi	r24, 0x02	; 2
     c18:	c0 f0       	brcs	.+48     	; 0xc4a <__mulsf3+0x74>
     c1a:	94 30       	cpi	r25, 0x04	; 4
     c1c:	19 f4       	brne	.+6      	; 0xc24 <__mulsf3+0x4e>
     c1e:	82 30       	cpi	r24, 0x02	; 2
     c20:	41 f4       	brne	.+16     	; 0xc32 <__mulsf3+0x5c>
     c22:	cb c0       	rjmp	.+406    	; 0xdba <__mulsf3+0x1e4>
     c24:	84 30       	cpi	r24, 0x04	; 4
     c26:	19 f4       	brne	.+6      	; 0xc2e <__mulsf3+0x58>
     c28:	92 30       	cpi	r25, 0x02	; 2
     c2a:	79 f4       	brne	.+30     	; 0xc4a <__mulsf3+0x74>
     c2c:	c6 c0       	rjmp	.+396    	; 0xdba <__mulsf3+0x1e4>
     c2e:	92 30       	cpi	r25, 0x02	; 2
     c30:	51 f4       	brne	.+20     	; 0xc46 <__mulsf3+0x70>
     c32:	81 e0       	ldi	r24, 0x01	; 1
     c34:	2a 85       	ldd	r18, Y+10	; 0x0a
     c36:	9a 89       	ldd	r25, Y+18	; 0x12
     c38:	29 17       	cp	r18, r25
     c3a:	09 f4       	brne	.+2      	; 0xc3e <__mulsf3+0x68>
     c3c:	80 e0       	ldi	r24, 0x00	; 0
     c3e:	8a 87       	std	Y+10, r24	; 0x0a
     c40:	ce 01       	movw	r24, r28
     c42:	09 96       	adiw	r24, 0x09	; 9
     c44:	bc c0       	rjmp	.+376    	; 0xdbe <__mulsf3+0x1e8>
     c46:	82 30       	cpi	r24, 0x02	; 2
     c48:	51 f4       	brne	.+20     	; 0xc5e <__mulsf3+0x88>
     c4a:	81 e0       	ldi	r24, 0x01	; 1
     c4c:	2a 85       	ldd	r18, Y+10	; 0x0a
     c4e:	9a 89       	ldd	r25, Y+18	; 0x12
     c50:	29 17       	cp	r18, r25
     c52:	09 f4       	brne	.+2      	; 0xc56 <__mulsf3+0x80>
     c54:	80 e0       	ldi	r24, 0x00	; 0
     c56:	8a 8b       	std	Y+18, r24	; 0x12
     c58:	ce 01       	movw	r24, r28
     c5a:	41 96       	adiw	r24, 0x11	; 17
     c5c:	b0 c0       	rjmp	.+352    	; 0xdbe <__mulsf3+0x1e8>
     c5e:	6d 84       	ldd	r6, Y+13	; 0x0d
     c60:	7e 84       	ldd	r7, Y+14	; 0x0e
     c62:	8f 84       	ldd	r8, Y+15	; 0x0f
     c64:	98 88       	ldd	r9, Y+16	; 0x10
     c66:	ed 88       	ldd	r14, Y+21	; 0x15
     c68:	fe 88       	ldd	r15, Y+22	; 0x16
     c6a:	0f 89       	ldd	r16, Y+23	; 0x17
     c6c:	18 8d       	ldd	r17, Y+24	; 0x18
     c6e:	e0 e2       	ldi	r30, 0x20	; 32
     c70:	f0 e0       	ldi	r31, 0x00	; 0
     c72:	80 e0       	ldi	r24, 0x00	; 0
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	dc 01       	movw	r26, r24
     c78:	aa 24       	eor	r10, r10
     c7a:	bb 24       	eor	r11, r11
     c7c:	65 01       	movw	r12, r10
     c7e:	20 e0       	ldi	r18, 0x00	; 0
     c80:	30 e0       	ldi	r19, 0x00	; 0
     c82:	a9 01       	movw	r20, r18
     c84:	b3 01       	movw	r22, r6
     c86:	61 70       	andi	r22, 0x01	; 1
     c88:	70 70       	andi	r23, 0x00	; 0
     c8a:	61 15       	cp	r22, r1
     c8c:	71 05       	cpc	r23, r1
     c8e:	d1 f0       	breq	.+52     	; 0xcc4 <__mulsf3+0xee>
     c90:	2e 0d       	add	r18, r14
     c92:	3f 1d       	adc	r19, r15
     c94:	40 1f       	adc	r20, r16
     c96:	51 1f       	adc	r21, r17
     c98:	15 01       	movw	r2, r10
     c9a:	26 01       	movw	r4, r12
     c9c:	28 0e       	add	r2, r24
     c9e:	39 1e       	adc	r3, r25
     ca0:	4a 1e       	adc	r4, r26
     ca2:	5b 1e       	adc	r5, r27
     ca4:	81 e0       	ldi	r24, 0x01	; 1
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	a0 e0       	ldi	r26, 0x00	; 0
     caa:	b0 e0       	ldi	r27, 0x00	; 0
     cac:	2e 15       	cp	r18, r14
     cae:	3f 05       	cpc	r19, r15
     cb0:	40 07       	cpc	r20, r16
     cb2:	51 07       	cpc	r21, r17
     cb4:	18 f0       	brcs	.+6      	; 0xcbc <__mulsf3+0xe6>
     cb6:	80 e0       	ldi	r24, 0x00	; 0
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	dc 01       	movw	r26, r24
     cbc:	82 0d       	add	r24, r2
     cbe:	93 1d       	adc	r25, r3
     cc0:	a4 1d       	adc	r26, r4
     cc2:	b5 1d       	adc	r27, r5
     cc4:	aa 0c       	add	r10, r10
     cc6:	bb 1c       	adc	r11, r11
     cc8:	cc 1c       	adc	r12, r12
     cca:	dd 1c       	adc	r13, r13
     ccc:	17 ff       	sbrs	r17, 7
     cce:	09 c0       	rjmp	.+18     	; 0xce2 <__mulsf3+0x10c>
     cd0:	61 e0       	ldi	r22, 0x01	; 1
     cd2:	26 2e       	mov	r2, r22
     cd4:	31 2c       	mov	r3, r1
     cd6:	41 2c       	mov	r4, r1
     cd8:	51 2c       	mov	r5, r1
     cda:	a2 28       	or	r10, r2
     cdc:	b3 28       	or	r11, r3
     cde:	c4 28       	or	r12, r4
     ce0:	d5 28       	or	r13, r5
     ce2:	31 97       	sbiw	r30, 0x01	; 1
     ce4:	49 f0       	breq	.+18     	; 0xcf8 <__mulsf3+0x122>
     ce6:	ee 0c       	add	r14, r14
     ce8:	ff 1c       	adc	r15, r15
     cea:	00 1f       	adc	r16, r16
     cec:	11 1f       	adc	r17, r17
     cee:	96 94       	lsr	r9
     cf0:	87 94       	ror	r8
     cf2:	77 94       	ror	r7
     cf4:	67 94       	ror	r6
     cf6:	c6 cf       	rjmp	.-116    	; 0xc84 <__mulsf3+0xae>
     cf8:	6b 89       	ldd	r22, Y+19	; 0x13
     cfa:	7c 89       	ldd	r23, Y+20	; 0x14
     cfc:	eb 85       	ldd	r30, Y+11	; 0x0b
     cfe:	fc 85       	ldd	r31, Y+12	; 0x0c
     d00:	6e 0f       	add	r22, r30
     d02:	7f 1f       	adc	r23, r31
     d04:	6e 5f       	subi	r22, 0xFE	; 254
     d06:	7f 4f       	sbci	r23, 0xFF	; 255
     d08:	7c 8f       	std	Y+28, r23	; 0x1c
     d0a:	6b 8f       	std	Y+27, r22	; 0x1b
     d0c:	61 e0       	ldi	r22, 0x01	; 1
     d0e:	ea 85       	ldd	r30, Y+10	; 0x0a
     d10:	7a 89       	ldd	r23, Y+18	; 0x12
     d12:	e7 17       	cp	r30, r23
     d14:	09 f4       	brne	.+2      	; 0xd18 <__mulsf3+0x142>
     d16:	60 e0       	ldi	r22, 0x00	; 0
     d18:	6a 8f       	std	Y+26, r22	; 0x1a
     d1a:	6b 8d       	ldd	r22, Y+27	; 0x1b
     d1c:	7c 8d       	ldd	r23, Y+28	; 0x1c
     d1e:	10 c0       	rjmp	.+32     	; 0xd40 <__mulsf3+0x16a>
     d20:	fc 01       	movw	r30, r24
     d22:	e1 70       	andi	r30, 0x01	; 1
     d24:	f0 70       	andi	r31, 0x00	; 0
     d26:	30 97       	sbiw	r30, 0x00	; 0
     d28:	29 f0       	breq	.+10     	; 0xd34 <__mulsf3+0x15e>
     d2a:	56 95       	lsr	r21
     d2c:	47 95       	ror	r20
     d2e:	37 95       	ror	r19
     d30:	27 95       	ror	r18
     d32:	50 68       	ori	r21, 0x80	; 128
     d34:	b6 95       	lsr	r27
     d36:	a7 95       	ror	r26
     d38:	97 95       	ror	r25
     d3a:	87 95       	ror	r24
     d3c:	6f 5f       	subi	r22, 0xFF	; 255
     d3e:	7f 4f       	sbci	r23, 0xFF	; 255
     d40:	b7 fd       	sbrc	r27, 7
     d42:	ee cf       	rjmp	.-36     	; 0xd20 <__mulsf3+0x14a>
     d44:	0c c0       	rjmp	.+24     	; 0xd5e <__mulsf3+0x188>
     d46:	88 0f       	add	r24, r24
     d48:	99 1f       	adc	r25, r25
     d4a:	aa 1f       	adc	r26, r26
     d4c:	bb 1f       	adc	r27, r27
     d4e:	57 fd       	sbrc	r21, 7
     d50:	81 60       	ori	r24, 0x01	; 1
     d52:	22 0f       	add	r18, r18
     d54:	33 1f       	adc	r19, r19
     d56:	44 1f       	adc	r20, r20
     d58:	55 1f       	adc	r21, r21
     d5a:	61 50       	subi	r22, 0x01	; 1
     d5c:	70 40       	sbci	r23, 0x00	; 0
     d5e:	80 30       	cpi	r24, 0x00	; 0
     d60:	e0 e0       	ldi	r30, 0x00	; 0
     d62:	9e 07       	cpc	r25, r30
     d64:	e0 e0       	ldi	r30, 0x00	; 0
     d66:	ae 07       	cpc	r26, r30
     d68:	e0 e4       	ldi	r30, 0x40	; 64
     d6a:	be 07       	cpc	r27, r30
     d6c:	60 f3       	brcs	.-40     	; 0xd46 <__mulsf3+0x170>
     d6e:	6b 8f       	std	Y+27, r22	; 0x1b
     d70:	7c 8f       	std	Y+28, r23	; 0x1c
     d72:	6f e7       	ldi	r22, 0x7F	; 127
     d74:	e6 2e       	mov	r14, r22
     d76:	f1 2c       	mov	r15, r1
     d78:	01 2d       	mov	r16, r1
     d7a:	11 2d       	mov	r17, r1
     d7c:	e8 22       	and	r14, r24
     d7e:	f9 22       	and	r15, r25
     d80:	0a 23       	and	r16, r26
     d82:	1b 23       	and	r17, r27
     d84:	60 e4       	ldi	r22, 0x40	; 64
     d86:	e6 16       	cp	r14, r22
     d88:	f1 04       	cpc	r15, r1
     d8a:	01 05       	cpc	r16, r1
     d8c:	11 05       	cpc	r17, r1
     d8e:	61 f4       	brne	.+24     	; 0xda8 <__mulsf3+0x1d2>
     d90:	87 fd       	sbrc	r24, 7
     d92:	0a c0       	rjmp	.+20     	; 0xda8 <__mulsf3+0x1d2>
     d94:	21 15       	cp	r18, r1
     d96:	31 05       	cpc	r19, r1
     d98:	41 05       	cpc	r20, r1
     d9a:	51 05       	cpc	r21, r1
     d9c:	29 f0       	breq	.+10     	; 0xda8 <__mulsf3+0x1d2>
     d9e:	80 5c       	subi	r24, 0xC0	; 192
     da0:	9f 4f       	sbci	r25, 0xFF	; 255
     da2:	af 4f       	sbci	r26, 0xFF	; 255
     da4:	bf 4f       	sbci	r27, 0xFF	; 255
     da6:	80 78       	andi	r24, 0x80	; 128
     da8:	8d 8f       	std	Y+29, r24	; 0x1d
     daa:	9e 8f       	std	Y+30, r25	; 0x1e
     dac:	af 8f       	std	Y+31, r26	; 0x1f
     dae:	b8 a3       	std	Y+32, r27	; 0x20
     db0:	83 e0       	ldi	r24, 0x03	; 3
     db2:	89 8f       	std	Y+25, r24	; 0x19
     db4:	ce 01       	movw	r24, r28
     db6:	49 96       	adiw	r24, 0x19	; 25
     db8:	02 c0       	rjmp	.+4      	; 0xdbe <__mulsf3+0x1e8>
     dba:	86 e1       	ldi	r24, 0x16	; 22
     dbc:	91 e0       	ldi	r25, 0x01	; 1
     dbe:	0e 94 c7 07 	call	0xf8e	; 0xf8e <__pack_f>
     dc2:	a0 96       	adiw	r28, 0x20	; 32
     dc4:	e2 e1       	ldi	r30, 0x12	; 18
     dc6:	0c 94 73 09 	jmp	0x12e6	; 0x12e6 <__epilogue_restores__>

00000dca <__gtsf2>:
     dca:	a8 e1       	ldi	r26, 0x18	; 24
     dcc:	b0 e0       	ldi	r27, 0x00	; 0
     dce:	eb ee       	ldi	r30, 0xEB	; 235
     dd0:	f6 e0       	ldi	r31, 0x06	; 6
     dd2:	0c 94 63 09 	jmp	0x12c6	; 0x12c6 <__prologue_saves__+0x18>
     dd6:	69 83       	std	Y+1, r22	; 0x01
     dd8:	7a 83       	std	Y+2, r23	; 0x02
     dda:	8b 83       	std	Y+3, r24	; 0x03
     ddc:	9c 83       	std	Y+4, r25	; 0x04
     dde:	2d 83       	std	Y+5, r18	; 0x05
     de0:	3e 83       	std	Y+6, r19	; 0x06
     de2:	4f 83       	std	Y+7, r20	; 0x07
     de4:	58 87       	std	Y+8, r21	; 0x08
     de6:	8e 01       	movw	r16, r28
     de8:	07 5f       	subi	r16, 0xF7	; 247
     dea:	1f 4f       	sbci	r17, 0xFF	; 255
     dec:	ce 01       	movw	r24, r28
     dee:	01 96       	adiw	r24, 0x01	; 1
     df0:	b8 01       	movw	r22, r16
     df2:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     df6:	81 e1       	ldi	r24, 0x11	; 17
     df8:	e8 2e       	mov	r14, r24
     dfa:	f1 2c       	mov	r15, r1
     dfc:	ec 0e       	add	r14, r28
     dfe:	fd 1e       	adc	r15, r29
     e00:	ce 01       	movw	r24, r28
     e02:	05 96       	adiw	r24, 0x05	; 5
     e04:	b7 01       	movw	r22, r14
     e06:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     e0a:	89 85       	ldd	r24, Y+9	; 0x09
     e0c:	82 30       	cpi	r24, 0x02	; 2
     e0e:	40 f0       	brcs	.+16     	; 0xe20 <__gtsf2+0x56>
     e10:	89 89       	ldd	r24, Y+17	; 0x11
     e12:	82 30       	cpi	r24, 0x02	; 2
     e14:	28 f0       	brcs	.+10     	; 0xe20 <__gtsf2+0x56>
     e16:	c8 01       	movw	r24, r16
     e18:	b7 01       	movw	r22, r14
     e1a:	0e 94 fe 08 	call	0x11fc	; 0x11fc <__fpcmp_parts_f>
     e1e:	01 c0       	rjmp	.+2      	; 0xe22 <__gtsf2+0x58>
     e20:	8f ef       	ldi	r24, 0xFF	; 255
     e22:	68 96       	adiw	r28, 0x18	; 24
     e24:	e6 e0       	ldi	r30, 0x06	; 6
     e26:	0c 94 7f 09 	jmp	0x12fe	; 0x12fe <__epilogue_restores__+0x18>

00000e2a <__gesf2>:
     e2a:	a8 e1       	ldi	r26, 0x18	; 24
     e2c:	b0 e0       	ldi	r27, 0x00	; 0
     e2e:	eb e1       	ldi	r30, 0x1B	; 27
     e30:	f7 e0       	ldi	r31, 0x07	; 7
     e32:	0c 94 63 09 	jmp	0x12c6	; 0x12c6 <__prologue_saves__+0x18>
     e36:	69 83       	std	Y+1, r22	; 0x01
     e38:	7a 83       	std	Y+2, r23	; 0x02
     e3a:	8b 83       	std	Y+3, r24	; 0x03
     e3c:	9c 83       	std	Y+4, r25	; 0x04
     e3e:	2d 83       	std	Y+5, r18	; 0x05
     e40:	3e 83       	std	Y+6, r19	; 0x06
     e42:	4f 83       	std	Y+7, r20	; 0x07
     e44:	58 87       	std	Y+8, r21	; 0x08
     e46:	8e 01       	movw	r16, r28
     e48:	07 5f       	subi	r16, 0xF7	; 247
     e4a:	1f 4f       	sbci	r17, 0xFF	; 255
     e4c:	ce 01       	movw	r24, r28
     e4e:	01 96       	adiw	r24, 0x01	; 1
     e50:	b8 01       	movw	r22, r16
     e52:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     e56:	81 e1       	ldi	r24, 0x11	; 17
     e58:	e8 2e       	mov	r14, r24
     e5a:	f1 2c       	mov	r15, r1
     e5c:	ec 0e       	add	r14, r28
     e5e:	fd 1e       	adc	r15, r29
     e60:	ce 01       	movw	r24, r28
     e62:	05 96       	adiw	r24, 0x05	; 5
     e64:	b7 01       	movw	r22, r14
     e66:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     e6a:	89 85       	ldd	r24, Y+9	; 0x09
     e6c:	82 30       	cpi	r24, 0x02	; 2
     e6e:	40 f0       	brcs	.+16     	; 0xe80 <__gesf2+0x56>
     e70:	89 89       	ldd	r24, Y+17	; 0x11
     e72:	82 30       	cpi	r24, 0x02	; 2
     e74:	28 f0       	brcs	.+10     	; 0xe80 <__gesf2+0x56>
     e76:	c8 01       	movw	r24, r16
     e78:	b7 01       	movw	r22, r14
     e7a:	0e 94 fe 08 	call	0x11fc	; 0x11fc <__fpcmp_parts_f>
     e7e:	01 c0       	rjmp	.+2      	; 0xe82 <__gesf2+0x58>
     e80:	8f ef       	ldi	r24, 0xFF	; 255
     e82:	68 96       	adiw	r28, 0x18	; 24
     e84:	e6 e0       	ldi	r30, 0x06	; 6
     e86:	0c 94 7f 09 	jmp	0x12fe	; 0x12fe <__epilogue_restores__+0x18>

00000e8a <__ltsf2>:
     e8a:	a8 e1       	ldi	r26, 0x18	; 24
     e8c:	b0 e0       	ldi	r27, 0x00	; 0
     e8e:	eb e4       	ldi	r30, 0x4B	; 75
     e90:	f7 e0       	ldi	r31, 0x07	; 7
     e92:	0c 94 63 09 	jmp	0x12c6	; 0x12c6 <__prologue_saves__+0x18>
     e96:	69 83       	std	Y+1, r22	; 0x01
     e98:	7a 83       	std	Y+2, r23	; 0x02
     e9a:	8b 83       	std	Y+3, r24	; 0x03
     e9c:	9c 83       	std	Y+4, r25	; 0x04
     e9e:	2d 83       	std	Y+5, r18	; 0x05
     ea0:	3e 83       	std	Y+6, r19	; 0x06
     ea2:	4f 83       	std	Y+7, r20	; 0x07
     ea4:	58 87       	std	Y+8, r21	; 0x08
     ea6:	8e 01       	movw	r16, r28
     ea8:	07 5f       	subi	r16, 0xF7	; 247
     eaa:	1f 4f       	sbci	r17, 0xFF	; 255
     eac:	ce 01       	movw	r24, r28
     eae:	01 96       	adiw	r24, 0x01	; 1
     eb0:	b8 01       	movw	r22, r16
     eb2:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     eb6:	81 e1       	ldi	r24, 0x11	; 17
     eb8:	e8 2e       	mov	r14, r24
     eba:	f1 2c       	mov	r15, r1
     ebc:	ec 0e       	add	r14, r28
     ebe:	fd 1e       	adc	r15, r29
     ec0:	ce 01       	movw	r24, r28
     ec2:	05 96       	adiw	r24, 0x05	; 5
     ec4:	b7 01       	movw	r22, r14
     ec6:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     eca:	89 85       	ldd	r24, Y+9	; 0x09
     ecc:	82 30       	cpi	r24, 0x02	; 2
     ece:	40 f0       	brcs	.+16     	; 0xee0 <__ltsf2+0x56>
     ed0:	89 89       	ldd	r24, Y+17	; 0x11
     ed2:	82 30       	cpi	r24, 0x02	; 2
     ed4:	28 f0       	brcs	.+10     	; 0xee0 <__ltsf2+0x56>
     ed6:	c8 01       	movw	r24, r16
     ed8:	b7 01       	movw	r22, r14
     eda:	0e 94 fe 08 	call	0x11fc	; 0x11fc <__fpcmp_parts_f>
     ede:	01 c0       	rjmp	.+2      	; 0xee2 <__ltsf2+0x58>
     ee0:	81 e0       	ldi	r24, 0x01	; 1
     ee2:	68 96       	adiw	r28, 0x18	; 24
     ee4:	e6 e0       	ldi	r30, 0x06	; 6
     ee6:	0c 94 7f 09 	jmp	0x12fe	; 0x12fe <__epilogue_restores__+0x18>

00000eea <__fixsfsi>:
     eea:	ac e0       	ldi	r26, 0x0C	; 12
     eec:	b0 e0       	ldi	r27, 0x00	; 0
     eee:	eb e7       	ldi	r30, 0x7B	; 123
     ef0:	f7 e0       	ldi	r31, 0x07	; 7
     ef2:	0c 94 67 09 	jmp	0x12ce	; 0x12ce <__prologue_saves__+0x20>
     ef6:	69 83       	std	Y+1, r22	; 0x01
     ef8:	7a 83       	std	Y+2, r23	; 0x02
     efa:	8b 83       	std	Y+3, r24	; 0x03
     efc:	9c 83       	std	Y+4, r25	; 0x04
     efe:	ce 01       	movw	r24, r28
     f00:	01 96       	adiw	r24, 0x01	; 1
     f02:	be 01       	movw	r22, r28
     f04:	6b 5f       	subi	r22, 0xFB	; 251
     f06:	7f 4f       	sbci	r23, 0xFF	; 255
     f08:	0e 94 95 08 	call	0x112a	; 0x112a <__unpack_f>
     f0c:	8d 81       	ldd	r24, Y+5	; 0x05
     f0e:	82 30       	cpi	r24, 0x02	; 2
     f10:	81 f1       	breq	.+96     	; 0xf72 <__fixsfsi+0x88>
     f12:	82 30       	cpi	r24, 0x02	; 2
     f14:	70 f1       	brcs	.+92     	; 0xf72 <__fixsfsi+0x88>
     f16:	84 30       	cpi	r24, 0x04	; 4
     f18:	21 f4       	brne	.+8      	; 0xf22 <__fixsfsi+0x38>
     f1a:	8e 81       	ldd	r24, Y+6	; 0x06
     f1c:	88 23       	and	r24, r24
     f1e:	69 f1       	breq	.+90     	; 0xf7a <__fixsfsi+0x90>
     f20:	0a c0       	rjmp	.+20     	; 0xf36 <__fixsfsi+0x4c>
     f22:	2f 81       	ldd	r18, Y+7	; 0x07
     f24:	38 85       	ldd	r19, Y+8	; 0x08
     f26:	37 fd       	sbrc	r19, 7
     f28:	24 c0       	rjmp	.+72     	; 0xf72 <__fixsfsi+0x88>
     f2a:	6e 81       	ldd	r22, Y+6	; 0x06
     f2c:	2f 31       	cpi	r18, 0x1F	; 31
     f2e:	31 05       	cpc	r19, r1
     f30:	3c f0       	brlt	.+14     	; 0xf40 <__fixsfsi+0x56>
     f32:	66 23       	and	r22, r22
     f34:	11 f1       	breq	.+68     	; 0xf7a <__fixsfsi+0x90>
     f36:	20 e0       	ldi	r18, 0x00	; 0
     f38:	30 e0       	ldi	r19, 0x00	; 0
     f3a:	40 e0       	ldi	r20, 0x00	; 0
     f3c:	50 e8       	ldi	r21, 0x80	; 128
     f3e:	21 c0       	rjmp	.+66     	; 0xf82 <__fixsfsi+0x98>
     f40:	8e e1       	ldi	r24, 0x1E	; 30
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	82 1b       	sub	r24, r18
     f46:	93 0b       	sbc	r25, r19
     f48:	29 85       	ldd	r18, Y+9	; 0x09
     f4a:	3a 85       	ldd	r19, Y+10	; 0x0a
     f4c:	4b 85       	ldd	r20, Y+11	; 0x0b
     f4e:	5c 85       	ldd	r21, Y+12	; 0x0c
     f50:	04 c0       	rjmp	.+8      	; 0xf5a <__fixsfsi+0x70>
     f52:	56 95       	lsr	r21
     f54:	47 95       	ror	r20
     f56:	37 95       	ror	r19
     f58:	27 95       	ror	r18
     f5a:	8a 95       	dec	r24
     f5c:	d2 f7       	brpl	.-12     	; 0xf52 <__fixsfsi+0x68>
     f5e:	66 23       	and	r22, r22
     f60:	81 f0       	breq	.+32     	; 0xf82 <__fixsfsi+0x98>
     f62:	50 95       	com	r21
     f64:	40 95       	com	r20
     f66:	30 95       	com	r19
     f68:	21 95       	neg	r18
     f6a:	3f 4f       	sbci	r19, 0xFF	; 255
     f6c:	4f 4f       	sbci	r20, 0xFF	; 255
     f6e:	5f 4f       	sbci	r21, 0xFF	; 255
     f70:	08 c0       	rjmp	.+16     	; 0xf82 <__fixsfsi+0x98>
     f72:	20 e0       	ldi	r18, 0x00	; 0
     f74:	30 e0       	ldi	r19, 0x00	; 0
     f76:	a9 01       	movw	r20, r18
     f78:	04 c0       	rjmp	.+8      	; 0xf82 <__fixsfsi+0x98>
     f7a:	2f ef       	ldi	r18, 0xFF	; 255
     f7c:	3f ef       	ldi	r19, 0xFF	; 255
     f7e:	4f ef       	ldi	r20, 0xFF	; 255
     f80:	5f e7       	ldi	r21, 0x7F	; 127
     f82:	b9 01       	movw	r22, r18
     f84:	ca 01       	movw	r24, r20
     f86:	2c 96       	adiw	r28, 0x0c	; 12
     f88:	e2 e0       	ldi	r30, 0x02	; 2
     f8a:	0c 94 83 09 	jmp	0x1306	; 0x1306 <__epilogue_restores__+0x20>

00000f8e <__pack_f>:
     f8e:	ef 92       	push	r14
     f90:	ff 92       	push	r15
     f92:	0f 93       	push	r16
     f94:	1f 93       	push	r17
     f96:	cf 93       	push	r28
     f98:	df 93       	push	r29
     f9a:	fc 01       	movw	r30, r24
     f9c:	24 81       	ldd	r18, Z+4	; 0x04
     f9e:	35 81       	ldd	r19, Z+5	; 0x05
     fa0:	46 81       	ldd	r20, Z+6	; 0x06
     fa2:	57 81       	ldd	r21, Z+7	; 0x07
     fa4:	61 81       	ldd	r22, Z+1	; 0x01
     fa6:	80 81       	ld	r24, Z
     fa8:	82 30       	cpi	r24, 0x02	; 2
     faa:	20 f4       	brcc	.+8      	; 0xfb4 <__pack_f+0x26>
     fac:	40 61       	ori	r20, 0x10	; 16
     fae:	ef ef       	ldi	r30, 0xFF	; 255
     fb0:	f0 e0       	ldi	r31, 0x00	; 0
     fb2:	a3 c0       	rjmp	.+326    	; 0x10fa <__pack_f+0x16c>
     fb4:	84 30       	cpi	r24, 0x04	; 4
     fb6:	09 f4       	brne	.+2      	; 0xfba <__pack_f+0x2c>
     fb8:	9b c0       	rjmp	.+310    	; 0x10f0 <__pack_f+0x162>
     fba:	82 30       	cpi	r24, 0x02	; 2
     fbc:	09 f4       	brne	.+2      	; 0xfc0 <__pack_f+0x32>
     fbe:	92 c0       	rjmp	.+292    	; 0x10e4 <__pack_f+0x156>
     fc0:	21 15       	cp	r18, r1
     fc2:	31 05       	cpc	r19, r1
     fc4:	41 05       	cpc	r20, r1
     fc6:	51 05       	cpc	r21, r1
     fc8:	09 f4       	brne	.+2      	; 0xfcc <__pack_f+0x3e>
     fca:	8f c0       	rjmp	.+286    	; 0x10ea <__pack_f+0x15c>
     fcc:	02 80       	ldd	r0, Z+2	; 0x02
     fce:	f3 81       	ldd	r31, Z+3	; 0x03
     fd0:	e0 2d       	mov	r30, r0
     fd2:	8f ef       	ldi	r24, 0xFF	; 255
     fd4:	e2 38       	cpi	r30, 0x82	; 130
     fd6:	f8 07       	cpc	r31, r24
     fd8:	0c f0       	brlt	.+2      	; 0xfdc <__pack_f+0x4e>
     fda:	5a c0       	rjmp	.+180    	; 0x1090 <__pack_f+0x102>
     fdc:	c2 e8       	ldi	r28, 0x82	; 130
     fde:	df ef       	ldi	r29, 0xFF	; 255
     fe0:	ce 1b       	sub	r28, r30
     fe2:	df 0b       	sbc	r29, r31
     fe4:	ca 31       	cpi	r28, 0x1A	; 26
     fe6:	d1 05       	cpc	r29, r1
     fe8:	6c f5       	brge	.+90     	; 0x1044 <__pack_f+0xb6>
     fea:	79 01       	movw	r14, r18
     fec:	8a 01       	movw	r16, r20
     fee:	0c 2e       	mov	r0, r28
     ff0:	04 c0       	rjmp	.+8      	; 0xffa <__pack_f+0x6c>
     ff2:	16 95       	lsr	r17
     ff4:	07 95       	ror	r16
     ff6:	f7 94       	ror	r15
     ff8:	e7 94       	ror	r14
     ffa:	0a 94       	dec	r0
     ffc:	d2 f7       	brpl	.-12     	; 0xff2 <__pack_f+0x64>
     ffe:	81 e0       	ldi	r24, 0x01	; 1
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	a0 e0       	ldi	r26, 0x00	; 0
    1004:	b0 e0       	ldi	r27, 0x00	; 0
    1006:	0c 2e       	mov	r0, r28
    1008:	04 c0       	rjmp	.+8      	; 0x1012 <__pack_f+0x84>
    100a:	88 0f       	add	r24, r24
    100c:	99 1f       	adc	r25, r25
    100e:	aa 1f       	adc	r26, r26
    1010:	bb 1f       	adc	r27, r27
    1012:	0a 94       	dec	r0
    1014:	d2 f7       	brpl	.-12     	; 0x100a <__pack_f+0x7c>
    1016:	01 97       	sbiw	r24, 0x01	; 1
    1018:	a1 09       	sbc	r26, r1
    101a:	b1 09       	sbc	r27, r1
    101c:	82 23       	and	r24, r18
    101e:	93 23       	and	r25, r19
    1020:	a4 23       	and	r26, r20
    1022:	b5 23       	and	r27, r21
    1024:	21 e0       	ldi	r18, 0x01	; 1
    1026:	30 e0       	ldi	r19, 0x00	; 0
    1028:	40 e0       	ldi	r20, 0x00	; 0
    102a:	50 e0       	ldi	r21, 0x00	; 0
    102c:	00 97       	sbiw	r24, 0x00	; 0
    102e:	a1 05       	cpc	r26, r1
    1030:	b1 05       	cpc	r27, r1
    1032:	19 f4       	brne	.+6      	; 0x103a <__pack_f+0xac>
    1034:	20 e0       	ldi	r18, 0x00	; 0
    1036:	30 e0       	ldi	r19, 0x00	; 0
    1038:	a9 01       	movw	r20, r18
    103a:	2e 29       	or	r18, r14
    103c:	3f 29       	or	r19, r15
    103e:	40 2b       	or	r20, r16
    1040:	51 2b       	or	r21, r17
    1042:	03 c0       	rjmp	.+6      	; 0x104a <__pack_f+0xbc>
    1044:	20 e0       	ldi	r18, 0x00	; 0
    1046:	30 e0       	ldi	r19, 0x00	; 0
    1048:	a9 01       	movw	r20, r18
    104a:	da 01       	movw	r26, r20
    104c:	c9 01       	movw	r24, r18
    104e:	8f 77       	andi	r24, 0x7F	; 127
    1050:	90 70       	andi	r25, 0x00	; 0
    1052:	a0 70       	andi	r26, 0x00	; 0
    1054:	b0 70       	andi	r27, 0x00	; 0
    1056:	80 34       	cpi	r24, 0x40	; 64
    1058:	91 05       	cpc	r25, r1
    105a:	a1 05       	cpc	r26, r1
    105c:	b1 05       	cpc	r27, r1
    105e:	39 f4       	brne	.+14     	; 0x106e <__pack_f+0xe0>
    1060:	27 ff       	sbrs	r18, 7
    1062:	09 c0       	rjmp	.+18     	; 0x1076 <__pack_f+0xe8>
    1064:	20 5c       	subi	r18, 0xC0	; 192
    1066:	3f 4f       	sbci	r19, 0xFF	; 255
    1068:	4f 4f       	sbci	r20, 0xFF	; 255
    106a:	5f 4f       	sbci	r21, 0xFF	; 255
    106c:	04 c0       	rjmp	.+8      	; 0x1076 <__pack_f+0xe8>
    106e:	21 5c       	subi	r18, 0xC1	; 193
    1070:	3f 4f       	sbci	r19, 0xFF	; 255
    1072:	4f 4f       	sbci	r20, 0xFF	; 255
    1074:	5f 4f       	sbci	r21, 0xFF	; 255
    1076:	e1 e0       	ldi	r30, 0x01	; 1
    1078:	f0 e0       	ldi	r31, 0x00	; 0
    107a:	20 30       	cpi	r18, 0x00	; 0
    107c:	80 e0       	ldi	r24, 0x00	; 0
    107e:	38 07       	cpc	r19, r24
    1080:	80 e0       	ldi	r24, 0x00	; 0
    1082:	48 07       	cpc	r20, r24
    1084:	80 e4       	ldi	r24, 0x40	; 64
    1086:	58 07       	cpc	r21, r24
    1088:	28 f5       	brcc	.+74     	; 0x10d4 <__pack_f+0x146>
    108a:	e0 e0       	ldi	r30, 0x00	; 0
    108c:	f0 e0       	ldi	r31, 0x00	; 0
    108e:	22 c0       	rjmp	.+68     	; 0x10d4 <__pack_f+0x146>
    1090:	e0 38       	cpi	r30, 0x80	; 128
    1092:	f1 05       	cpc	r31, r1
    1094:	6c f5       	brge	.+90     	; 0x10f0 <__pack_f+0x162>
    1096:	e1 58       	subi	r30, 0x81	; 129
    1098:	ff 4f       	sbci	r31, 0xFF	; 255
    109a:	da 01       	movw	r26, r20
    109c:	c9 01       	movw	r24, r18
    109e:	8f 77       	andi	r24, 0x7F	; 127
    10a0:	90 70       	andi	r25, 0x00	; 0
    10a2:	a0 70       	andi	r26, 0x00	; 0
    10a4:	b0 70       	andi	r27, 0x00	; 0
    10a6:	80 34       	cpi	r24, 0x40	; 64
    10a8:	91 05       	cpc	r25, r1
    10aa:	a1 05       	cpc	r26, r1
    10ac:	b1 05       	cpc	r27, r1
    10ae:	39 f4       	brne	.+14     	; 0x10be <__pack_f+0x130>
    10b0:	27 ff       	sbrs	r18, 7
    10b2:	09 c0       	rjmp	.+18     	; 0x10c6 <__pack_f+0x138>
    10b4:	20 5c       	subi	r18, 0xC0	; 192
    10b6:	3f 4f       	sbci	r19, 0xFF	; 255
    10b8:	4f 4f       	sbci	r20, 0xFF	; 255
    10ba:	5f 4f       	sbci	r21, 0xFF	; 255
    10bc:	04 c0       	rjmp	.+8      	; 0x10c6 <__pack_f+0x138>
    10be:	21 5c       	subi	r18, 0xC1	; 193
    10c0:	3f 4f       	sbci	r19, 0xFF	; 255
    10c2:	4f 4f       	sbci	r20, 0xFF	; 255
    10c4:	5f 4f       	sbci	r21, 0xFF	; 255
    10c6:	57 ff       	sbrs	r21, 7
    10c8:	05 c0       	rjmp	.+10     	; 0x10d4 <__pack_f+0x146>
    10ca:	56 95       	lsr	r21
    10cc:	47 95       	ror	r20
    10ce:	37 95       	ror	r19
    10d0:	27 95       	ror	r18
    10d2:	31 96       	adiw	r30, 0x01	; 1
    10d4:	87 e0       	ldi	r24, 0x07	; 7
    10d6:	56 95       	lsr	r21
    10d8:	47 95       	ror	r20
    10da:	37 95       	ror	r19
    10dc:	27 95       	ror	r18
    10de:	8a 95       	dec	r24
    10e0:	d1 f7       	brne	.-12     	; 0x10d6 <__pack_f+0x148>
    10e2:	0b c0       	rjmp	.+22     	; 0x10fa <__pack_f+0x16c>
    10e4:	e0 e0       	ldi	r30, 0x00	; 0
    10e6:	f0 e0       	ldi	r31, 0x00	; 0
    10e8:	05 c0       	rjmp	.+10     	; 0x10f4 <__pack_f+0x166>
    10ea:	e0 e0       	ldi	r30, 0x00	; 0
    10ec:	f0 e0       	ldi	r31, 0x00	; 0
    10ee:	05 c0       	rjmp	.+10     	; 0x10fa <__pack_f+0x16c>
    10f0:	ef ef       	ldi	r30, 0xFF	; 255
    10f2:	f0 e0       	ldi	r31, 0x00	; 0
    10f4:	20 e0       	ldi	r18, 0x00	; 0
    10f6:	30 e0       	ldi	r19, 0x00	; 0
    10f8:	a9 01       	movw	r20, r18
    10fa:	8e 2f       	mov	r24, r30
    10fc:	87 95       	ror	r24
    10fe:	88 27       	eor	r24, r24
    1100:	87 95       	ror	r24
    1102:	94 2f       	mov	r25, r20
    1104:	9f 77       	andi	r25, 0x7F	; 127
    1106:	67 95       	ror	r22
    1108:	66 27       	eor	r22, r22
    110a:	67 95       	ror	r22
    110c:	e6 95       	lsr	r30
    110e:	e2 2e       	mov	r14, r18
    1110:	a9 2f       	mov	r26, r25
    1112:	a8 2b       	or	r26, r24
    1114:	fe 2f       	mov	r31, r30
    1116:	f6 2b       	or	r31, r22
    1118:	62 2f       	mov	r22, r18
    111a:	73 2f       	mov	r23, r19
    111c:	8a 2f       	mov	r24, r26
    111e:	9f 2f       	mov	r25, r31
    1120:	cd b7       	in	r28, 0x3d	; 61
    1122:	de b7       	in	r29, 0x3e	; 62
    1124:	e6 e0       	ldi	r30, 0x06	; 6
    1126:	0c 94 7f 09 	jmp	0x12fe	; 0x12fe <__epilogue_restores__+0x18>

0000112a <__unpack_f>:
    112a:	dc 01       	movw	r26, r24
    112c:	fb 01       	movw	r30, r22
    112e:	2c 91       	ld	r18, X
    1130:	11 96       	adiw	r26, 0x01	; 1
    1132:	3c 91       	ld	r19, X
    1134:	11 97       	sbiw	r26, 0x01	; 1
    1136:	12 96       	adiw	r26, 0x02	; 2
    1138:	8c 91       	ld	r24, X
    113a:	12 97       	sbiw	r26, 0x02	; 2
    113c:	48 2f       	mov	r20, r24
    113e:	4f 77       	andi	r20, 0x7F	; 127
    1140:	50 e0       	ldi	r21, 0x00	; 0
    1142:	98 2f       	mov	r25, r24
    1144:	99 1f       	adc	r25, r25
    1146:	99 27       	eor	r25, r25
    1148:	99 1f       	adc	r25, r25
    114a:	13 96       	adiw	r26, 0x03	; 3
    114c:	6c 91       	ld	r22, X
    114e:	13 97       	sbiw	r26, 0x03	; 3
    1150:	86 2f       	mov	r24, r22
    1152:	88 0f       	add	r24, r24
    1154:	89 2b       	or	r24, r25
    1156:	90 e0       	ldi	r25, 0x00	; 0
    1158:	66 1f       	adc	r22, r22
    115a:	66 27       	eor	r22, r22
    115c:	66 1f       	adc	r22, r22
    115e:	61 83       	std	Z+1, r22	; 0x01
    1160:	00 97       	sbiw	r24, 0x00	; 0
    1162:	39 f5       	brne	.+78     	; 0x11b2 <__unpack_f+0x88>
    1164:	21 15       	cp	r18, r1
    1166:	31 05       	cpc	r19, r1
    1168:	41 05       	cpc	r20, r1
    116a:	51 05       	cpc	r21, r1
    116c:	11 f4       	brne	.+4      	; 0x1172 <__unpack_f+0x48>
    116e:	82 e0       	ldi	r24, 0x02	; 2
    1170:	29 c0       	rjmp	.+82     	; 0x11c4 <__unpack_f+0x9a>
    1172:	82 e8       	ldi	r24, 0x82	; 130
    1174:	9f ef       	ldi	r25, 0xFF	; 255
    1176:	93 83       	std	Z+3, r25	; 0x03
    1178:	82 83       	std	Z+2, r24	; 0x02
    117a:	67 e0       	ldi	r22, 0x07	; 7
    117c:	22 0f       	add	r18, r18
    117e:	33 1f       	adc	r19, r19
    1180:	44 1f       	adc	r20, r20
    1182:	55 1f       	adc	r21, r21
    1184:	6a 95       	dec	r22
    1186:	d1 f7       	brne	.-12     	; 0x117c <__unpack_f+0x52>
    1188:	83 e0       	ldi	r24, 0x03	; 3
    118a:	80 83       	st	Z, r24
    118c:	09 c0       	rjmp	.+18     	; 0x11a0 <__unpack_f+0x76>
    118e:	22 0f       	add	r18, r18
    1190:	33 1f       	adc	r19, r19
    1192:	44 1f       	adc	r20, r20
    1194:	55 1f       	adc	r21, r21
    1196:	82 81       	ldd	r24, Z+2	; 0x02
    1198:	93 81       	ldd	r25, Z+3	; 0x03
    119a:	01 97       	sbiw	r24, 0x01	; 1
    119c:	93 83       	std	Z+3, r25	; 0x03
    119e:	82 83       	std	Z+2, r24	; 0x02
    11a0:	20 30       	cpi	r18, 0x00	; 0
    11a2:	80 e0       	ldi	r24, 0x00	; 0
    11a4:	38 07       	cpc	r19, r24
    11a6:	80 e0       	ldi	r24, 0x00	; 0
    11a8:	48 07       	cpc	r20, r24
    11aa:	80 e4       	ldi	r24, 0x40	; 64
    11ac:	58 07       	cpc	r21, r24
    11ae:	78 f3       	brcs	.-34     	; 0x118e <__unpack_f+0x64>
    11b0:	20 c0       	rjmp	.+64     	; 0x11f2 <__unpack_f+0xc8>
    11b2:	8f 3f       	cpi	r24, 0xFF	; 255
    11b4:	91 05       	cpc	r25, r1
    11b6:	79 f4       	brne	.+30     	; 0x11d6 <__unpack_f+0xac>
    11b8:	21 15       	cp	r18, r1
    11ba:	31 05       	cpc	r19, r1
    11bc:	41 05       	cpc	r20, r1
    11be:	51 05       	cpc	r21, r1
    11c0:	19 f4       	brne	.+6      	; 0x11c8 <__unpack_f+0x9e>
    11c2:	84 e0       	ldi	r24, 0x04	; 4
    11c4:	80 83       	st	Z, r24
    11c6:	08 95       	ret
    11c8:	44 ff       	sbrs	r20, 4
    11ca:	03 c0       	rjmp	.+6      	; 0x11d2 <__unpack_f+0xa8>
    11cc:	81 e0       	ldi	r24, 0x01	; 1
    11ce:	80 83       	st	Z, r24
    11d0:	10 c0       	rjmp	.+32     	; 0x11f2 <__unpack_f+0xc8>
    11d2:	10 82       	st	Z, r1
    11d4:	0e c0       	rjmp	.+28     	; 0x11f2 <__unpack_f+0xc8>
    11d6:	8f 57       	subi	r24, 0x7F	; 127
    11d8:	90 40       	sbci	r25, 0x00	; 0
    11da:	93 83       	std	Z+3, r25	; 0x03
    11dc:	82 83       	std	Z+2, r24	; 0x02
    11de:	83 e0       	ldi	r24, 0x03	; 3
    11e0:	80 83       	st	Z, r24
    11e2:	87 e0       	ldi	r24, 0x07	; 7
    11e4:	22 0f       	add	r18, r18
    11e6:	33 1f       	adc	r19, r19
    11e8:	44 1f       	adc	r20, r20
    11ea:	55 1f       	adc	r21, r21
    11ec:	8a 95       	dec	r24
    11ee:	d1 f7       	brne	.-12     	; 0x11e4 <__unpack_f+0xba>
    11f0:	50 64       	ori	r21, 0x40	; 64
    11f2:	24 83       	std	Z+4, r18	; 0x04
    11f4:	35 83       	std	Z+5, r19	; 0x05
    11f6:	46 83       	std	Z+6, r20	; 0x06
    11f8:	57 83       	std	Z+7, r21	; 0x07
    11fa:	08 95       	ret

000011fc <__fpcmp_parts_f>:
    11fc:	fc 01       	movw	r30, r24
    11fe:	db 01       	movw	r26, r22
    1200:	90 81       	ld	r25, Z
    1202:	92 30       	cpi	r25, 0x02	; 2
    1204:	08 f4       	brcc	.+2      	; 0x1208 <__fpcmp_parts_f+0xc>
    1206:	49 c0       	rjmp	.+146    	; 0x129a <__fpcmp_parts_f+0x9e>
    1208:	8c 91       	ld	r24, X
    120a:	82 30       	cpi	r24, 0x02	; 2
    120c:	08 f4       	brcc	.+2      	; 0x1210 <__fpcmp_parts_f+0x14>
    120e:	45 c0       	rjmp	.+138    	; 0x129a <__fpcmp_parts_f+0x9e>
    1210:	94 30       	cpi	r25, 0x04	; 4
    1212:	51 f4       	brne	.+20     	; 0x1228 <__fpcmp_parts_f+0x2c>
    1214:	61 81       	ldd	r22, Z+1	; 0x01
    1216:	84 30       	cpi	r24, 0x04	; 4
    1218:	b1 f5       	brne	.+108    	; 0x1286 <__fpcmp_parts_f+0x8a>
    121a:	11 96       	adiw	r26, 0x01	; 1
    121c:	2c 91       	ld	r18, X
    121e:	11 97       	sbiw	r26, 0x01	; 1
    1220:	30 e0       	ldi	r19, 0x00	; 0
    1222:	26 1b       	sub	r18, r22
    1224:	31 09       	sbc	r19, r1
    1226:	41 c0       	rjmp	.+130    	; 0x12aa <__fpcmp_parts_f+0xae>
    1228:	84 30       	cpi	r24, 0x04	; 4
    122a:	21 f0       	breq	.+8      	; 0x1234 <__fpcmp_parts_f+0x38>
    122c:	92 30       	cpi	r25, 0x02	; 2
    122e:	41 f4       	brne	.+16     	; 0x1240 <__fpcmp_parts_f+0x44>
    1230:	82 30       	cpi	r24, 0x02	; 2
    1232:	b1 f1       	breq	.+108    	; 0x12a0 <__fpcmp_parts_f+0xa4>
    1234:	11 96       	adiw	r26, 0x01	; 1
    1236:	8c 91       	ld	r24, X
    1238:	11 97       	sbiw	r26, 0x01	; 1
    123a:	88 23       	and	r24, r24
    123c:	a1 f1       	breq	.+104    	; 0x12a6 <__fpcmp_parts_f+0xaa>
    123e:	2d c0       	rjmp	.+90     	; 0x129a <__fpcmp_parts_f+0x9e>
    1240:	61 81       	ldd	r22, Z+1	; 0x01
    1242:	82 30       	cpi	r24, 0x02	; 2
    1244:	01 f1       	breq	.+64     	; 0x1286 <__fpcmp_parts_f+0x8a>
    1246:	11 96       	adiw	r26, 0x01	; 1
    1248:	8c 91       	ld	r24, X
    124a:	11 97       	sbiw	r26, 0x01	; 1
    124c:	68 17       	cp	r22, r24
    124e:	d9 f4       	brne	.+54     	; 0x1286 <__fpcmp_parts_f+0x8a>
    1250:	22 81       	ldd	r18, Z+2	; 0x02
    1252:	33 81       	ldd	r19, Z+3	; 0x03
    1254:	12 96       	adiw	r26, 0x02	; 2
    1256:	8d 91       	ld	r24, X+
    1258:	9c 91       	ld	r25, X
    125a:	13 97       	sbiw	r26, 0x03	; 3
    125c:	82 17       	cp	r24, r18
    125e:	93 07       	cpc	r25, r19
    1260:	94 f0       	brlt	.+36     	; 0x1286 <__fpcmp_parts_f+0x8a>
    1262:	28 17       	cp	r18, r24
    1264:	39 07       	cpc	r19, r25
    1266:	bc f0       	brlt	.+46     	; 0x1296 <__fpcmp_parts_f+0x9a>
    1268:	24 81       	ldd	r18, Z+4	; 0x04
    126a:	35 81       	ldd	r19, Z+5	; 0x05
    126c:	46 81       	ldd	r20, Z+6	; 0x06
    126e:	57 81       	ldd	r21, Z+7	; 0x07
    1270:	14 96       	adiw	r26, 0x04	; 4
    1272:	8d 91       	ld	r24, X+
    1274:	9d 91       	ld	r25, X+
    1276:	0d 90       	ld	r0, X+
    1278:	bc 91       	ld	r27, X
    127a:	a0 2d       	mov	r26, r0
    127c:	82 17       	cp	r24, r18
    127e:	93 07       	cpc	r25, r19
    1280:	a4 07       	cpc	r26, r20
    1282:	b5 07       	cpc	r27, r21
    1284:	18 f4       	brcc	.+6      	; 0x128c <__fpcmp_parts_f+0x90>
    1286:	66 23       	and	r22, r22
    1288:	41 f0       	breq	.+16     	; 0x129a <__fpcmp_parts_f+0x9e>
    128a:	0d c0       	rjmp	.+26     	; 0x12a6 <__fpcmp_parts_f+0xaa>
    128c:	28 17       	cp	r18, r24
    128e:	39 07       	cpc	r19, r25
    1290:	4a 07       	cpc	r20, r26
    1292:	5b 07       	cpc	r21, r27
    1294:	28 f4       	brcc	.+10     	; 0x12a0 <__fpcmp_parts_f+0xa4>
    1296:	66 23       	and	r22, r22
    1298:	31 f0       	breq	.+12     	; 0x12a6 <__fpcmp_parts_f+0xaa>
    129a:	21 e0       	ldi	r18, 0x01	; 1
    129c:	30 e0       	ldi	r19, 0x00	; 0
    129e:	05 c0       	rjmp	.+10     	; 0x12aa <__fpcmp_parts_f+0xae>
    12a0:	20 e0       	ldi	r18, 0x00	; 0
    12a2:	30 e0       	ldi	r19, 0x00	; 0
    12a4:	02 c0       	rjmp	.+4      	; 0x12aa <__fpcmp_parts_f+0xae>
    12a6:	2f ef       	ldi	r18, 0xFF	; 255
    12a8:	3f ef       	ldi	r19, 0xFF	; 255
    12aa:	c9 01       	movw	r24, r18
    12ac:	08 95       	ret

000012ae <__prologue_saves__>:
    12ae:	2f 92       	push	r2
    12b0:	3f 92       	push	r3
    12b2:	4f 92       	push	r4
    12b4:	5f 92       	push	r5
    12b6:	6f 92       	push	r6
    12b8:	7f 92       	push	r7
    12ba:	8f 92       	push	r8
    12bc:	9f 92       	push	r9
    12be:	af 92       	push	r10
    12c0:	bf 92       	push	r11
    12c2:	cf 92       	push	r12
    12c4:	df 92       	push	r13
    12c6:	ef 92       	push	r14
    12c8:	ff 92       	push	r15
    12ca:	0f 93       	push	r16
    12cc:	1f 93       	push	r17
    12ce:	cf 93       	push	r28
    12d0:	df 93       	push	r29
    12d2:	cd b7       	in	r28, 0x3d	; 61
    12d4:	de b7       	in	r29, 0x3e	; 62
    12d6:	ca 1b       	sub	r28, r26
    12d8:	db 0b       	sbc	r29, r27
    12da:	0f b6       	in	r0, 0x3f	; 63
    12dc:	f8 94       	cli
    12de:	de bf       	out	0x3e, r29	; 62
    12e0:	0f be       	out	0x3f, r0	; 63
    12e2:	cd bf       	out	0x3d, r28	; 61
    12e4:	09 94       	ijmp

000012e6 <__epilogue_restores__>:
    12e6:	2a 88       	ldd	r2, Y+18	; 0x12
    12e8:	39 88       	ldd	r3, Y+17	; 0x11
    12ea:	48 88       	ldd	r4, Y+16	; 0x10
    12ec:	5f 84       	ldd	r5, Y+15	; 0x0f
    12ee:	6e 84       	ldd	r6, Y+14	; 0x0e
    12f0:	7d 84       	ldd	r7, Y+13	; 0x0d
    12f2:	8c 84       	ldd	r8, Y+12	; 0x0c
    12f4:	9b 84       	ldd	r9, Y+11	; 0x0b
    12f6:	aa 84       	ldd	r10, Y+10	; 0x0a
    12f8:	b9 84       	ldd	r11, Y+9	; 0x09
    12fa:	c8 84       	ldd	r12, Y+8	; 0x08
    12fc:	df 80       	ldd	r13, Y+7	; 0x07
    12fe:	ee 80       	ldd	r14, Y+6	; 0x06
    1300:	fd 80       	ldd	r15, Y+5	; 0x05
    1302:	0c 81       	ldd	r16, Y+4	; 0x04
    1304:	1b 81       	ldd	r17, Y+3	; 0x03
    1306:	aa 81       	ldd	r26, Y+2	; 0x02
    1308:	b9 81       	ldd	r27, Y+1	; 0x01
    130a:	ce 0f       	add	r28, r30
    130c:	d1 1d       	adc	r29, r1
    130e:	0f b6       	in	r0, 0x3f	; 63
    1310:	f8 94       	cli
    1312:	de bf       	out	0x3e, r29	; 62
    1314:	0f be       	out	0x3f, r0	; 63
    1316:	cd bf       	out	0x3d, r28	; 61
    1318:	ed 01       	movw	r28, r26
    131a:	08 95       	ret

0000131c <_exit>:
    131c:	f8 94       	cli

0000131e <__stop_program>:
    131e:	ff cf       	rjmp	.-2      	; 0x131e <__stop_program>
